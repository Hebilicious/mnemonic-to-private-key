{
  "version": 3,
  "sources": ["../node_modules/bitcore-lib/node_modules/bn.js/lib/bn.js", "../node_modules/lodash/lodash.js", "../node_modules/bitcore-lib/lib/errors/spec.js", "../node_modules/bitcore-lib/lib/errors/index.js", "../node_modules/bitcore-lib/lib/util/preconditions.js", "../node_modules/bitcore-lib/lib/crypto/bn.js", "../node_modules/bitcore-lib/lib/util/js.js", "../node_modules/bitcore-lib/lib/util/buffer.js", "../node_modules/bn.js/lib/bn.js", "../node_modules/minimalistic-assert/index.js", "../node_modules/minimalistic-crypto-utils/lib/utils.js", "../node_modules/elliptic/lib/elliptic/utils.js", "../node_modules/brorand/index.js", "../node_modules/elliptic/lib/elliptic/curve/base.js", "../node_modules/inherits/inherits_browser.js", "../node_modules/inherits/inherits.js", "../node_modules/elliptic/lib/elliptic/curve/short.js", "../node_modules/elliptic/lib/elliptic/curve/mont.js", "../node_modules/elliptic/lib/elliptic/curve/edwards.js", "../node_modules/elliptic/lib/elliptic/curve/index.js", "../node_modules/hash.js/lib/hash/utils.js", "../node_modules/hash.js/lib/hash/common.js", "../node_modules/hash.js/lib/hash/sha/common.js", "../node_modules/hash.js/lib/hash/sha/1.js", "../node_modules/hash.js/lib/hash/sha/256.js", "../node_modules/hash.js/lib/hash/sha/224.js", "../node_modules/hash.js/lib/hash/sha/512.js", "../node_modules/hash.js/lib/hash/sha/384.js", "../node_modules/hash.js/lib/hash/sha.js", "../node_modules/hash.js/lib/hash/ripemd.js", "../node_modules/hash.js/lib/hash/hmac.js", "../node_modules/hash.js/lib/hash.js", "../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js", "../node_modules/elliptic/lib/elliptic/curves.js", "../node_modules/hmac-drbg/lib/hmac-drbg.js", "../node_modules/elliptic/lib/elliptic/ec/key.js", "../node_modules/elliptic/lib/elliptic/ec/signature.js", "../node_modules/elliptic/lib/elliptic/ec/index.js", "../node_modules/elliptic/lib/elliptic/eddsa/key.js", "../node_modules/elliptic/lib/elliptic/eddsa/signature.js", "../node_modules/elliptic/lib/elliptic/eddsa/index.js", "../node_modules/elliptic/lib/elliptic.js", "../node_modules/bitcore-lib/lib/crypto/point.js", "../node_modules/bitcore-lib/lib/crypto/signature.js", "../node_modules/bitcore-lib/lib/crypto/hash.js", "../node_modules/bitcore-lib/lib/networks.js", "../node_modules/safe-buffer/index.js", "../node_modules/base-x/src/index.js", "../node_modules/bs58/index.js", "../node_modules/bitcore-lib/lib/encoding/base58.js", "../node_modules/bitcore-lib/lib/encoding/base58check.js", "../node_modules/bech32/index.js", "../node_modules/bitcore-lib/lib/encoding/bech32.js", "../node_modules/bitcore-lib/lib/encoding/bufferreader.js", "../node_modules/bitcore-lib/lib/encoding/bufferwriter.js", "../node_modules/bitcore-lib/lib/opcode.js", "../node_modules/bitcore-lib/lib/script/script.js", "../node_modules/buffer-compare/index.js", "../node_modules/bitcore-lib/lib/transaction/output.js", "../node_modules/bitcore-lib/lib/transaction/input/input.js", "../node_modules/bitcore-lib/node_modules/inherits/inherits.js", "../node_modules/bitcore-lib/lib/transaction/signature.js", "../node_modules/bitcore-lib/lib/transaction/input/publickey.js", "../node_modules/bitcore-lib/lib/transaction/sighashwitness.js", "../node_modules/bitcore-lib/lib/transaction/input/publickeyhash.js", "../node_modules/bitcore-lib/lib/transaction/input/multisig.js", "../node_modules/bitcore-lib/lib/transaction/input/multisigscripthash.js", "../node_modules/bitcore-lib/lib/transaction/input/index.js", "../node_modules/bitcore-lib/lib/transaction/sighash.js", "../node_modules/bitcore-lib/lib/unit.js", "../node_modules/bitcore-lib/lib/transaction/unspentoutput.js", "../node_modules/bitcore-lib/lib/transaction/transaction.js", "../node_modules/bitcore-lib/lib/transaction/index.js", "../node_modules/bitcore-lib/lib/script/interpreter.js", "../node_modules/bitcore-lib/lib/script/index.js", "../node_modules/bitcore-lib/lib/address.js", "../node_modules/bitcore-lib/lib/crypto/random.js", "../node_modules/bitcore-lib/lib/privatekey.js", "../node_modules/bitcore-lib/lib/publickey.js", "../node_modules/bitcore-lib/lib/crypto/ecdsa.js", "../node_modules/bitcore-lib/lib/encoding/varint.js", "../node_modules/bitcore-lib/lib/block/blockheader.js", "../node_modules/bitcore-lib/lib/block/block.js", "../node_modules/bitcore-lib/lib/block/merkleblock.js", "../node_modules/bitcore-lib/lib/block/index.js", "../node_modules/bitcore-lib/lib/hdpublickey.js", "../node_modules/bitcore-lib/lib/hdprivatekey.js", "../node_modules/bitcore-lib/lib/message.js", "../node_modules/bitcore-lib/lib/uri.js", "../node_modules/bitcore-lib/index.js", "../node_modules/unorm/lib/unorm.js", "../node_modules/bitcore-mnemonic/lib/pbkdf2.js", "../node_modules/bitcore-mnemonic/lib/errors.js", "../node_modules/bitcore-mnemonic/lib/words/chinese.js", "../node_modules/bitcore-mnemonic/lib/words/english.js", "../node_modules/bitcore-mnemonic/lib/words/french.js", "../node_modules/bitcore-mnemonic/lib/words/italian.js", "../node_modules/bitcore-mnemonic/lib/words/japanese.js", "../node_modules/bitcore-mnemonic/lib/words/korean.js", "../node_modules/bitcore-mnemonic/lib/words/spanish.js", "../node_modules/bitcore-mnemonic/lib/words/index.js", "../node_modules/bitcore-mnemonic/lib/mnemonic.js", "../node_modules/bitcore-mnemonic/index.js", "../node_modules/ethereumjs-util/node_modules/bn.js/lib/bn.js", "../node_modules/ethereumjs-util/src/constants.ts", "../node_modules/rlp/src/index.ts", "../node_modules/node-gyp-build/index.js", "../node_modules/secp256k1/lib/index.js", "../node_modules/secp256k1/bindings.js", "../node_modules/secp256k1/lib/elliptic.js", "../node_modules/secp256k1/elliptic.js", "../node_modules/secp256k1/index.js", "../node_modules/randombytes/index.js", "../node_modules/ethereum-cryptography/src/random.ts", "../node_modules/ethereum-cryptography/src/secp256k1.ts", "../node_modules/is-hex-prefixed/src/index.js", "../node_modules/strip-hex-prefix/src/index.js", "../node_modules/ethjs-util/lib/index.js", "../node_modules/ethereumjs-util/src/helpers.ts", "../node_modules/ethereumjs-util/src/bytes.ts", "../node_modules/ethereum-cryptography/src/hash-utils.ts", "../node_modules/keccak/lib/api/keccak.js", "../node_modules/keccak/lib/api/shake.js", "../node_modules/keccak/lib/api/index.js", "../node_modules/keccak/bindings.js", "../node_modules/keccak/lib/keccak-state-unroll.js", "../node_modules/keccak/lib/keccak.js", "../node_modules/keccak/js.js", "../node_modules/keccak/index.js", "../node_modules/ethereum-cryptography/src/keccak.ts", "../node_modules/create-hash/index.js", "../node_modules/ethereumjs-util/src/hash.ts", "../node_modules/ethereumjs-util/src/types.ts", "../node_modules/ethereumjs-util/src/account.ts", "../node_modules/ethereumjs-util/src/address.ts", "../node_modules/ethereumjs-util/src/signature.ts", "../node_modules/ethereumjs-util/src/object.ts", "../node_modules/ethereumjs-util/src/externals.ts", "../node_modules/ethereumjs-util/src/index.ts", "../node_modules/scrypt-js/scrypt.js", "../node_modules/bs58check/base.js", "../node_modules/bs58check/index.js", "../node_modules/ethereum-cryptography/src/shims/hdkey-crypto.ts", "../node_modules/ethereum-cryptography/src/shims/hdkey-secp256k1v3.ts", "../node_modules/ethereum-cryptography/vendor/hdkey-without-crypto.js", "../node_modules/ethereum-cryptography/src/hdkey.ts", "../node_modules/ethereumjs-wallet/src/hdkey.ts", "../node_modules/utf8/utf8.js", "../node_modules/aes-js/index.js", "../node_modules/ethereumjs-wallet/src/thirdparty.ts", "../node_modules/uuid/lib/rng.js", "../node_modules/uuid/lib/bytesToUuid.js", "../node_modules/uuid/v4.js", "../node_modules/ethereumjs-wallet/src/index.ts", "../src/index.ts", "../src/lib.ts"],
  "sourcesContent": ["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('d\u00E9j\u00E0 vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n", "'use strict';\n\nvar docsURL = 'http://bitcore.io/';\n\nmodule.exports = [{\n  name: 'InvalidB58Char',\n  message: 'Invalid Base58 character: {0} in {1}'\n}, {\n  name: 'InvalidB58Checksum',\n  message: 'Invalid Base58 checksum for {0}'\n}, {\n  name: 'InvalidNetwork',\n  message: 'Invalid version for network: got {0}'\n}, {\n  name: 'InvalidState',\n  message: 'Invalid state: {0}'\n}, {\n  name: 'NotImplemented',\n  message: 'Function {0} was not implemented yet'\n}, {\n  name: 'InvalidNetworkArgument',\n  message: 'Invalid network: must be \"livenet\" or \"testnet\", got {0}'\n}, {\n  name: 'InvalidArgument',\n  message: function() {\n    return 'Invalid Argument' + (arguments[0] ? (': ' + arguments[0]) : '') +\n      (arguments[1] ? (' Documentation: ' + docsURL + arguments[1]) : '');\n  }\n}, {\n  name: 'AbstractMethodInvoked',\n  message: 'Abstract Method Invocation: {0}'\n}, {\n  name: 'InvalidArgumentType',\n  message: function() {\n    return 'Invalid Argument for ' + arguments[2] + ', expected ' + arguments[1] + ' but got ' + typeof arguments[0];\n  }\n}, {\n  name: 'Unit',\n  message: 'Internal Error on Unit {0}',\n  errors: [{\n    'name': 'UnknownCode',\n    'message': 'Unrecognized unit code: {0}'\n  }, {\n    'name': 'InvalidRate',\n    'message': 'Invalid exchange rate: {0}'\n  }]\n}, {\n  name: 'MerkleBlock',\n  message: 'Internal Error on MerkleBlock {0}',\n  errors: [{\n    'name': 'InvalidMerkleTree',\n    'message': 'This MerkleBlock contain an invalid Merkle Tree'\n  }]\n}, {\n  name: 'Transaction',\n  message: 'Internal Error on Transaction {0}',\n  errors: [{\n    name: 'Input',\n    message: 'Internal Error on Input {0}',\n    errors: [{\n      name: 'MissingScript',\n      message: 'Need a script to create an input'\n    }, {\n      name: 'UnsupportedScript',\n      message: 'Unsupported input script type: {0}'\n    }, {\n      name: 'MissingPreviousOutput',\n      message: 'No previous output information.'\n    }, {\n      name: 'BlockHeightOutOfRange',\n      message: 'Block Height can only be between 0 and 65535'\n    } , {\n      name: 'LockTimeRange',\n      message: 'Seconds needs to be more that 0 and less that 33553920'\n    }\n    ]\n  }, {\n    name: 'NeedMoreInfo',\n    message: '{0}'\n  }, {\n    name: 'InvalidSorting',\n    message: 'The sorting function provided did not return the change output as one of the array elements'\n  }, {\n    name: 'InvalidOutputAmountSum',\n    message: '{0}'\n  }, {\n    name: 'MissingSignatures',\n    message: 'Some inputs have not been fully signed'\n  }, {\n    name: 'InvalidIndex',\n    message: 'Invalid index: {0} is not between 0, {1}'\n  }, {\n    name: 'UnableToVerifySignature',\n    message: 'Unable to verify signature: {0}'\n  }, {\n    name: 'DustOutputs',\n    message: 'Dust amount detected in one output'\n  }, {\n    name: 'InvalidSatoshis',\n    message: 'Output satoshis are invalid',\n  }, {\n    name: 'FeeError',\n    message: 'Internal Error on Fee {0}',\n    errors: [{\n      name: 'TooSmall',\n      message: 'Fee is too small: {0}',\n    }, {\n      name: 'TooLarge',\n      message: 'Fee is too large: {0}',\n    }, {\n      name: 'Different',\n      message: 'Unspent value is different from specified fee: {0}',\n    }]\n  }, {\n    name: 'ChangeAddressMissing',\n    message: 'Change address is missing'\n  }, {\n    name: 'BlockHeightTooHigh',\n    message: 'Block Height can be at most 2^32 -1'\n  }, {\n    name: 'NLockTimeOutOfRange',\n    message: 'Block Height can only be between 0 and 499 999 999'\n  }, {\n    name: 'LockTimeTooEarly',\n    message: 'Lock Time can\\'t be earlier than UNIX date 500 000 000'\n  }]\n}, {\n  name: 'Script',\n  message: 'Internal Error on Script {0}',\n  errors: [{\n    name: 'UnrecognizedAddress',\n    message: 'Expected argument {0} to be an address'\n  }, {\n    name: 'CantDeriveAddress',\n    message: 'Can\\'t derive address associated with script {0}, needs to be p2pkh in, p2pkh out, p2sh in, or p2sh out.'\n  }, {\n    name: 'InvalidBuffer',\n    message: 'Invalid script buffer: can\\'t parse valid script from given buffer {0}'\n  }]\n}, {\n  name: 'HDPrivateKey',\n  message: 'Internal Error on HDPrivateKey {0}',\n  errors: [{\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument {0}, expected string, or number and boolean'\n  }, {\n    name: 'InvalidEntropyArgument',\n    message: 'Invalid entropy: must be an hexa string or binary buffer, got {0}',\n    errors: [{\n      name: 'TooMuchEntropy',\n      message: 'Invalid entropy: more than 512 bits is non standard, got \"{0}\"'\n    }, {\n      name: 'NotEnoughEntropy',\n      message: 'Invalid entropy: at least 128 bits needed, got \"{0}\"'\n    }]\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xprivkey string in {0}'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path: {0}'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument: creating a HDPrivateKey requires a string, buffer, json or object, got \"{0}\"'\n  }]\n}, {\n  name: 'HDPublicKey',\n  message: 'Internal Error on HDPublicKey {0}',\n  errors: [{\n    name: 'ArgumentIsPrivateExtended',\n    message: 'Argument is an extended private key: {0}'\n  }, {\n    name: 'InvalidDerivationArgument',\n    message: 'Invalid derivation argument: got {0}'\n  }, {\n    name: 'InvalidLength',\n    message: 'Invalid length for xpubkey: got \"{0}\"'\n  }, {\n    name: 'InvalidPath',\n    message: 'Invalid derivation path, it should look like: \"m/1/100\", got \"{0}\"'\n  }, {\n    name: 'InvalidIndexCantDeriveHardened',\n    message: 'Invalid argument: creating a hardened path requires an HDPrivateKey'\n  }, {\n    name: 'MustSupplyArgument',\n    message: 'Must supply an argument to create a HDPublicKey'\n  }, {\n    name: 'UnrecognizedArgument',\n    message: 'Invalid argument for creation, must be string, json, buffer, or object'\n  }]\n}];\n", "'use strict';\n\nvar _ = require('lodash');\n\nfunction format(message, args) {\n  return message\n    .replace('{0}', args[0])\n    .replace('{1}', args[1])\n    .replace('{2}', args[2]);\n}\nvar traverseNode = function(parent, errorDefinition) {\n  var NodeError = function() {\n    if (_.isString(errorDefinition.message)) {\n      this.message = format(errorDefinition.message, arguments);\n    } else if (_.isFunction(errorDefinition.message)) {\n      this.message = errorDefinition.message.apply(null, arguments);\n    } else {\n      throw new Error('Invalid error definition for ' + errorDefinition.name);\n    }\n    this.stack = this.message + '\\n' + (new Error()).stack;\n  };\n  NodeError.prototype = Object.create(parent.prototype);\n  NodeError.prototype.name = parent.prototype.name + errorDefinition.name;\n  parent[errorDefinition.name] = NodeError;\n  if (errorDefinition.errors) {\n    childDefinitions(NodeError, errorDefinition.errors);\n  }\n  return NodeError;\n};\n\n/* jshint latedef: false */\nvar childDefinitions = function(parent, childDefinitions) {\n  _.each(childDefinitions, function(childDefinition) {\n    traverseNode(parent, childDefinition);\n  });\n};\n/* jshint latedef: true */\n\nvar traverseRoot = function(parent, errorsDefinition) {\n  childDefinitions(parent, errorsDefinition);\n  return parent;\n};\n\n\nvar bitcore = {};\nbitcore.Error = function() {\n  this.message = 'Internal error';\n  this.stack = this.message + '\\n' + (new Error()).stack;\n};\nbitcore.Error.prototype = Object.create(Error.prototype);\nbitcore.Error.prototype.name = 'bitcore.Error';\n\n\nvar data = require('./spec');\ntraverseRoot(bitcore.Error, data);\n\nmodule.exports = bitcore.Error;\n\nmodule.exports.extend = function(spec) {\n  return traverseNode(bitcore.Error, spec);\n};\n", "'use strict';\n\nvar errors = require('../errors');\nvar _ = require('lodash');\n\nmodule.exports = {\n  checkState: function(condition, message) {\n    if (!condition) {\n      throw new errors.InvalidState(message);\n    }\n  },\n  checkArgument: function(condition, argumentName, message, docsPath) {\n    if (!condition) {\n      throw new errors.InvalidArgument(argumentName, message, docsPath);\n    }\n  },\n  checkArgumentType: function(argument, type, argumentName) {\n    argumentName = argumentName || '(unknown name)';\n    if (_.isString(type)) {\n      if (type === 'Buffer') {\n        var buffer = require('buffer'); // './buffer' fails on cordova & RN\n        if (!buffer.Buffer.isBuffer(argument)) {\n          throw new errors.InvalidArgumentType(argument, type, argumentName);\n        }\n      } else if (typeof argument !== type) {\n        throw new errors.InvalidArgumentType(argument, type, argumentName);\n      }\n    } else {\n      if (!(argument instanceof type)) {\n        throw new errors.InvalidArgumentType(argument, type.name, argumentName);\n      }\n    }\n  }\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar $ = require('../util/preconditions');\nvar _ = require('lodash');\n\nvar reversebuf = function(buf) {\n  var buf2 = Buffer.alloc(buf.length);\n  for (var i = 0; i < buf.length; i++) {\n    buf2[i] = buf[buf.length - 1 - i];\n  }\n  return buf2;\n};\n\nBN.Zero = new BN(0);\nBN.One = new BN(1);\nBN.Minus1 = new BN(-1);\n\nBN.fromNumber = function(n) {\n  $.checkArgument(_.isNumber(n));\n  return new BN(n);\n};\n\nBN.fromString = function(str, base) {\n  $.checkArgument(_.isString(str));\n  return new BN(str, base);\n};\n\nBN.fromBuffer = function(buf, opts) {\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf);\n  }\n  var hex = buf.toString('hex');\n  var bn = new BN(hex, 16);\n  return bn;\n};\n\n/**\n * Instantiate a BigNumber from a \"signed magnitude buffer\"\n * (a buffer where the most significant bit represents the sign (0 = positive, -1 = negative))\n */\nBN.fromSM = function(buf, opts) {\n  var ret;\n  if (buf.length === 0) {\n    return BN.fromBuffer(Buffer.from([0]));\n  }\n\n  var endian = 'big';\n  if (opts) {\n    endian = opts.endian;\n  }\n  if (endian === 'little') {\n    buf = reversebuf(buf);\n  }\n\n  if (buf[0] & 0x80) {\n    buf[0] = buf[0] & 0x7f;\n    ret = BN.fromBuffer(buf);\n    ret.neg().copy(ret);\n  } else {\n    ret = BN.fromBuffer(buf);\n  }\n  return ret;\n};\n\n\nBN.prototype.toNumber = function() {\n  return parseInt(this.toString(10), 10);\n};\n\nBN.prototype.toBuffer = function(opts) {\n  var buf, hex;\n  if (opts && opts.size) {\n    hex = this.toString(16, 2);\n    var natlen = hex.length / 2;\n    buf = Buffer.from(hex, 'hex');\n\n    if (natlen === opts.size) {\n      buf = buf;\n    } else if (natlen > opts.size) {\n      buf = BN.trim(buf, natlen);\n    } else if (natlen < opts.size) {\n      buf = BN.pad(buf, natlen, opts.size);\n    }\n  } else {\n    hex = this.toString(16, 2);\n    buf = Buffer.from(hex, 'hex');\n  }\n\n  if (typeof opts !== 'undefined' && opts.endian === 'little') {\n    buf = reversebuf(buf);\n  }\n\n  return buf;\n};\n\nBN.prototype.toSMBigEndian = function() {\n  var buf;\n  if (this.cmp(BN.Zero) === -1) {\n    buf = this.neg().toBuffer();\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x80]), buf]);\n    } else {\n      buf[0] = buf[0] | 0x80;\n    }\n  } else {\n    buf = this.toBuffer();\n    if (buf[0] & 0x80) {\n      buf = Buffer.concat([Buffer.from([0x00]), buf]);\n    }\n  }\n\n  if (buf.length === 1 & buf[0] === 0) {\n    buf = Buffer.from([]);\n  }\n  return buf;\n};\n\nBN.prototype.toSM = function(opts) {\n  var endian = opts ? opts.endian : 'big';\n  var buf = this.toSMBigEndian();\n\n  if (endian === 'little') {\n    buf = reversebuf(buf);\n  }\n  return buf;\n};\n\n/**\n * Create a BN from a \"ScriptNum\":\n * This is analogous to the constructor for CScriptNum in bitcoind. Many ops in\n * bitcoind's script interpreter use CScriptNum, which is not really a proper\n * bignum. Instead, an error is thrown if trying to input a number bigger than\n * 4 bytes. We copy that behavior here. A third argument, `size`, is provided to\n * extend the hard limit of 4 bytes, as some usages require more than 4 bytes.\n */\nBN.fromScriptNumBuffer = function(buf, fRequireMinimal, size) {\n  var nMaxNumSize = size || 4;\n  $.checkArgument(buf.length <= nMaxNumSize, new Error('script number overflow'));\n  if (fRequireMinimal && buf.length > 0) {\n    // Check that the number is encoded with the minimum possible\n    // number of bytes.\n    //\n    // If the most-significant-byte - excluding the sign bit - is zero\n    // then we're not minimal. Note how this test also rejects the\n    // negative-zero encoding, 0x80.\n    if ((buf[buf.length - 1] & 0x7f) === 0) {\n      // One exception: if there's more than one byte and the most\n      // significant bit of the second-most-significant-byte is set\n      // it would conflict with the sign bit. An example of this case\n      // is +-255, which encode to 0xff00 and 0xff80 respectively.\n      // (big-endian).\n      if (buf.length <= 1 || (buf[buf.length - 2] & 0x80) === 0) {\n        throw new Error('non-minimally encoded script number');\n      }\n    }\n  }\n  return BN.fromSM(buf, {\n    endian: 'little'\n  });\n};\n\n/**\n * The corollary to the above, with the notable exception that we do not throw\n * an error if the output is larger than four bytes. (Which can happen if\n * performing a numerical operation that results in an overflow to more than 4\n * bytes).\n */\nBN.prototype.toScriptNumBuffer = function() {\n  return this.toSM({\n    endian: 'little'\n  });\n};\n\nBN.trim = function(buf, natlen) {\n  return buf.slice(natlen - buf.length, buf.length);\n};\n\nBN.pad = function(buf, natlen, size) {\n  var rbuf = Buffer.alloc(size);\n  for (var i = 0; i < buf.length; i++) {\n    rbuf[rbuf.length - 1 - i] = buf[buf.length - 1 - i];\n  }\n  for (i = 0; i < size - natlen; i++) {\n    rbuf[i] = 0;\n  }\n  return rbuf;\n};\n\nmodule.exports = BN;\n", "'use strict';\n\nvar _ = require('lodash');\n\n/**\n * Determines whether a string contains only hexadecimal values\n *\n * @name JSUtil.isHexa\n * @param {string} value\n * @return {boolean} true if the string is the hexa representation of a number\n */\nvar isHexa = function isHexa(value) {\n  if (!_.isString(value)) {\n    return false;\n  }\n  return /^[0-9a-fA-F]+$/.test(value);\n};\n\n/**\n * @namespace JSUtil\n */\nmodule.exports = {\n  /**\n   * Test if an argument is a valid JSON object. If it is, returns a truthy\n   * value (the json object decoded), so no double JSON.parse call is necessary\n   *\n   * @param {string} arg\n   * @return {Object|boolean} false if the argument is not a JSON string.\n   */\n  isValidJSON: function isValidJSON(arg) {\n    var parsed;\n    if (!_.isString(arg)) {\n      return false;\n    }\n    try {\n      parsed = JSON.parse(arg);\n    } catch (e) {\n      return false;\n    }\n    if (typeof(parsed) === 'object') {\n      return true;\n    }\n    return false;\n  },\n  isHexa: isHexa,\n  isHexaString: isHexa,\n\n  /**\n   * Clone an array\n   */\n  cloneArray: function(array) {\n    return [].concat(array);\n  },\n\n  /**\n   * Define immutable properties on a target object\n   *\n   * @param {Object} target - An object to be extended\n   * @param {Object} values - An object of properties\n   * @return {Object} The target object\n   */\n  defineImmutable: function defineImmutable(target, values) {\n    Object.keys(values).forEach(function(key){\n      Object.defineProperty(target, key, {\n        configurable: false,\n        enumerable: true,\n        value: values[key]\n      });\n    });\n    return target;\n  },\n  /**\n   * Checks that a value is a natural number, a positive integer or zero.\n   *\n   * @param {*} value\n   * @return {Boolean}\n   */\n  isNaturalNumber: function isNaturalNumber(value) {\n    return typeof value === 'number' &&\n      isFinite(value) &&\n      Math.floor(value) === value &&\n      value >= 0;\n  }\n};\n", "'use strict';\n\nvar buffer = require('buffer');\nvar assert = require('assert');\n\nvar js = require('./js');\nvar $ = require('./preconditions');\n\nfunction equals(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  var length = a.length;\n  for (var i = 0; i < length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = {\n  /**\n   * Fill a buffer with a value.\n   *\n   * @param {Buffer} buffer\n   * @param {number} value\n   * @return {Buffer}\n   */\n  fill: function fill(buffer, value) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    $.checkArgumentType(value, 'number', 'value');\n    var length = buffer.length;\n    for (var i = 0; i < length; i++) {\n      buffer[i] = value;\n    }\n    return buffer;\n  },\n\n  /**\n   * Return a copy of a buffer\n   *\n   * @param {Buffer} original\n   * @return {Buffer}\n   */\n  copy: function(original) {\n    var buffer = Buffer.alloc(original.length);\n    original.copy(buffer);\n    return buffer;\n  },\n\n  /**\n   * Returns true if the given argument is an instance of a buffer. Tests for\n   * both node's Buffer and Uint8Array\n   *\n   * @param {*} arg\n   * @return {boolean}\n   */\n  isBuffer: function isBuffer(arg) {\n    return buffer.Buffer.isBuffer(arg) || arg instanceof Uint8Array;\n  },\n\n  /**\n   * Returns a zero-filled byte array\n   *\n   * @param {number} bytes\n   * @return {Buffer}\n   */\n  emptyBuffer: function emptyBuffer(bytes) {\n    $.checkArgumentType(bytes, 'number', 'bytes');\n    var result = Buffer.alloc(bytes);\n    for (var i = 0; i < bytes; i++) {\n      result.write('\\0', i);\n    }\n    return result;\n  },\n\n  /**\n   * Concatenates a buffer\n   *\n   * Shortcut for <tt>buffer.Buffer.concat</tt>\n   */\n  concat: buffer.Buffer.concat,\n\n  equals: equals,\n  equal: equals,\n\n  /**\n   * Transforms a number from 0 to 255 into a Buffer of size 1 with that value\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsSingleByteBuffer: function integerAsSingleByteBuffer(integer) {\n    $.checkArgumentType(integer, 'number', 'integer');\n    return Buffer.from([integer & 0xff]);\n  },\n\n  /**\n   * Transform a 4-byte integer into a Buffer of length 4.\n   *\n   * @param {number} integer\n   * @return {Buffer}\n   */\n  integerAsBuffer: function integerAsBuffer(integer) {\n    $.checkArgumentType(integer, 'number', 'integer');\n    var bytes = [];\n    bytes.push((integer >> 24) & 0xff);\n    bytes.push((integer >> 16) & 0xff);\n    bytes.push((integer >> 8) & 0xff);\n    bytes.push(integer & 0xff);\n    return Buffer.from(bytes);\n  },\n\n  /**\n   * Transform the first 4 values of a Buffer into a number, in little endian encoding\n   *\n   * @param {Buffer} buffer\n   * @return {number}\n   */\n  integerFromBuffer: function integerFromBuffer(buffer) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    return buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];\n  },\n\n  /**\n   * Transforms the first byte of an array into a number ranging from -128 to 127\n   * @param {Buffer} buffer\n   * @return {number}\n   */\n  integerFromSingleByteBuffer: function integerFromBuffer(buffer) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    return buffer[0];\n  },\n\n  /**\n   * Transforms a buffer into a string with a number in hexa representation\n   *\n   * Shorthand for <tt>buffer.toString('hex')</tt>\n   *\n   * @param {Buffer} buffer\n   * @return {string}\n   */\n  bufferToHex: function bufferToHex(buffer) {\n    $.checkArgumentType(buffer, 'Buffer', 'buffer');\n    return buffer.toString('hex');\n  },\n\n  /**\n   * Reverse a buffer\n   * @param {Buffer} param\n   * @return {Buffer}\n   */\n  reverse: function reverse(param) {\n    return (Buffer.from(param)).reverse();\n  },\n};\n\nmodule.exports.NULL_HASH = module.exports.fill(Buffer.alloc(32), 0);\nmodule.exports.EMPTY_BUFFER = Buffer.alloc(0);\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n", "'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n", "'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n", "var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n", "if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n", "try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n", "'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n", "'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n", "'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n", "'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n", "'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n", "'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n", "'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n", "var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n", "module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n", "'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n", "'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n", "'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n", "'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n", "'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n", "'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n", "'use strict';\n\nvar BN = require('./bn');\nvar BufferUtil = require('../util/buffer');\n\nvar EC = require('elliptic').ec;\nvar ec = new EC('secp256k1');\nvar ecPoint = ec.curve.point.bind(ec.curve);\nvar ecPointFromX = ec.curve.pointFromX.bind(ec.curve);\n\n/**\n *\n * Instantiate a valid secp256k1 Point from the X and Y coordinates.\n *\n * @param {BN|String} x - The X coordinate\n * @param {BN|String} y - The Y coordinate\n * @link https://github.com/indutny/elliptic\n * @augments elliptic.curve.point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n * @constructor\n */\nvar Point = function Point(x, y, isRed) {\n  try {\n    var point = ecPoint(x, y, isRed);\n  } catch (e) {\n    throw new Error('Invalid Point');\n  }\n  point.validate();\n  return point;\n};\n\nPoint.prototype = Object.getPrototypeOf(ec.curve.point());\n\n/**\n *\n * Instantiate a valid secp256k1 Point from only the X coordinate\n *\n * @param {boolean} odd - If the Y coordinate is odd\n * @param {BN|String} x - The X coordinate\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of Point\n */\nPoint.fromX = function fromX(odd, x){\n  try {\n    var point = ecPointFromX(x, odd);\n  } catch (e) {\n    throw new Error('Invalid X');\n  }\n  point.validate();\n  return point;\n};\n\n/**\n *\n * Will return a secp256k1 ECDSA base point.\n *\n * @link https://en.bitcoin.it/wiki/Secp256k1\n * @returns {Point} An instance of the base point.\n */\nPoint.getG = function getG() {\n  return ec.curve.g;\n};\n\n/**\n *\n * Will return the max of range of valid private keys as governed by the secp256k1 ECDSA standard.\n *\n * @link https://en.bitcoin.it/wiki/Private_key#Range_of_valid_ECDSA_private_keys\n * @returns {BN} A BN instance of the number of points on the curve\n */\nPoint.getN = function getN() {\n  return new BN(ec.curve.n.toArray());\n};\n\nPoint.prototype._getX = Point.prototype.getX;\n\n/**\n *\n * Will return the X coordinate of the Point\n *\n * @returns {BN} A BN instance of the X coordinate\n */\nPoint.prototype.getX = function getX() {\n  return new BN(this._getX().toArray());\n};\n\nPoint.prototype._getY = Point.prototype.getY;\n\n/**\n *\n * Will return the Y coordinate of the Point\n *\n * @returns {BN} A BN instance of the Y coordinate\n */\nPoint.prototype.getY = function getY() {\n  return new BN(this._getY().toArray());\n};\n\n/**\n *\n * Will determine if the point is valid\n *\n * @link https://www.iacr.org/archive/pkc2003/25670211/25670211.pdf\n * @param {Point} An instance of Point\n * @throws {Error} A validation error if exists\n * @returns {Point} An instance of the same Point\n */\nPoint.prototype.validate = function validate() {\n\n  if (this.isInfinity()){\n    throw new Error('Point cannot be equal to Infinity');\n  }\n\n  var p2;\n  try {\n    p2 = ecPointFromX(this.getX(), this.getY().isOdd());\n  } catch (e) {\n    throw new Error('Point does not lie on the curve');\n  }\n\n  if (p2.y.cmp(this.y) !== 0) {\n    throw new Error('Invalid y value for curve.');\n  }\n\n\n  //todo: needs test case\n  if (!(this.mul(Point.getN()).isInfinity())) {\n    throw new Error('Point times N must be infinity');\n  }\n\n  return this;\n\n};\n\nPoint.pointToCompressed = function pointToCompressed(point) {\n  var xbuf = point.getX().toBuffer({size: 32});\n  var ybuf = point.getY().toBuffer({size: 32});\n\n  var prefix;\n  var odd = ybuf[ybuf.length - 1] % 2;\n  if (odd) {\n    prefix = Buffer.from([0x03]);\n  } else {\n    prefix = Buffer.from([0x02]);\n  }\n  return BufferUtil.concat([prefix, xbuf]);\n};\n\nmodule.exports = Point;\n", "'use strict';\n\nvar BN = require('./bn');\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar BufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\n\nvar Signature = function Signature(r, s) {\n  if (!(this instanceof Signature)) {\n    return new Signature(r, s);\n  }\n  if (r instanceof BN) {\n    this.set({\n      r: r,\n      s: s\n    });\n  } else if (r) {\n    var obj = r;\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 7 */\nSignature.prototype.set = function(obj) {\n  this.r = obj.r || this.r || undefined;\n  this.s = obj.s || this.s || undefined;\n\n  this.i = typeof obj.i !== 'undefined' ? obj.i : this.i; //public key recovery parameter in range [0, 3]\n  this.compressed = typeof obj.compressed !== 'undefined' ?\n    obj.compressed : this.compressed; //whether the recovered pubkey is compressed\n  this.nhashtype = obj.nhashtype || this.nhashtype || undefined;\n  return this;\n};\n\nSignature.fromCompact = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf), 'Argument is expected to be a Buffer');\n\n  var sig = new Signature();\n\n  var compressed = true;\n  var i = buf.slice(0, 1)[0] - 27 - 4;\n  if (i < 0) {\n    compressed = false;\n    i = i + 4;\n  }\n\n  var b2 = buf.slice(1, 33);\n  var b3 = buf.slice(33, 65);\n\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be 0, 1, 2, or 3'));\n  $.checkArgument(b2.length === 32, new Error('r must be 32 bytes'));\n  $.checkArgument(b3.length === 32, new Error('s must be 32 bytes'));\n\n  sig.compressed = compressed;\n  sig.i = i;\n  sig.r = BN.fromBuffer(b2);\n  sig.s = BN.fromBuffer(b3);\n\n  return sig;\n};\n\nSignature.fromDER = Signature.fromBuffer = function(buf, strict) {\n  var obj = Signature.parseDER(buf, strict);\n  var sig = new Signature();\n\n  sig.r = obj.r;\n  sig.s = obj.s;\n\n  return sig;\n};\n\n// The format used in a tx\nSignature.fromTxFormat = function(buf) {\n  var nhashtype = buf.readUInt8(buf.length - 1);\n  var derbuf = buf.slice(0, buf.length - 1);\n  var sig = new Signature.fromDER(derbuf, false);\n  sig.nhashtype = nhashtype;\n  return sig;\n};\n\nSignature.fromString = function(str) {\n  var buf = Buffer.from(str, 'hex');\n  return Signature.fromDER(buf);\n};\n\n\n/**\n * In order to mimic the non-strict DER encoding of OpenSSL, set strict = false.\n */\nSignature.parseDER = function(buf, strict) {\n  $.checkArgument(BufferUtil.isBuffer(buf), new Error('DER formatted signature should be a buffer'));\n  if (_.isUndefined(strict)) {\n    strict = true;\n  }\n\n  var header = buf[0];\n  $.checkArgument(header === 0x30, new Error('Header byte should be 0x30'));\n\n  var length = buf[1];\n  var buflength = buf.slice(2).length;\n  $.checkArgument(!strict || length === buflength, new Error('Length byte should length of what follows'));\n\n  length = length < buflength ? length : buflength;\n\n  var rheader = buf[2 + 0];\n  $.checkArgument(rheader === 0x02, new Error('Integer byte for r should be 0x02'));\n\n  var rlength = buf[2 + 1];\n  var rbuf = buf.slice(2 + 2, 2 + 2 + rlength);\n  var r = BN.fromBuffer(rbuf);\n  var rneg = buf[2 + 1 + 1] === 0x00 ? true : false;\n  $.checkArgument(rlength === rbuf.length, new Error('Length of r incorrect'));\n\n  var sheader = buf[2 + 2 + rlength + 0];\n  $.checkArgument(sheader === 0x02, new Error('Integer byte for s should be 0x02'));\n\n  var slength = buf[2 + 2 + rlength + 1];\n  var sbuf = buf.slice(2 + 2 + rlength + 2, 2 + 2 + rlength + 2 + slength);\n  var s = BN.fromBuffer(sbuf);\n  var sneg = buf[2 + 2 + rlength + 2 + 2] === 0x00 ? true : false;\n  $.checkArgument(slength === sbuf.length, new Error('Length of s incorrect'));\n\n  var sumlength = 2 + 2 + rlength + 2 + slength;\n  $.checkArgument(length === sumlength - 2, new Error('Length of signature incorrect'));\n\n  var obj = {\n    header: header,\n    length: length,\n    rheader: rheader,\n    rlength: rlength,\n    rneg: rneg,\n    rbuf: rbuf,\n    r: r,\n    sheader: sheader,\n    slength: slength,\n    sneg: sneg,\n    sbuf: sbuf,\n    s: s\n  };\n\n  return obj;\n};\n\n\nSignature.prototype.toCompact = function(i, compressed) {\n  i = typeof i === 'number' ? i : this.i;\n  compressed = typeof compressed === 'boolean' ? compressed : this.compressed;\n\n  if (!(i === 0 || i === 1 || i === 2 || i === 3)) {\n    throw new Error('i must be equal to 0, 1, 2, or 3');\n  }\n\n  var val = i + 27 + 4;\n  if (compressed === false) {\n    val = val - 4;\n  }\n  var b1 = Buffer.from([val]);\n  var b2 = this.r.toBuffer({\n    size: 32\n  });\n  var b3 = this.s.toBuffer({\n    size: 32\n  });\n  return Buffer.concat([b1, b2, b3]);\n};\n\nSignature.prototype.toBuffer = Signature.prototype.toDER = function() {\n  var rnbuf = this.r.toBuffer();\n  var snbuf = this.s.toBuffer();\n\n  var rneg = rnbuf[0] & 0x80 ? true : false;\n  var sneg = snbuf[0] & 0x80 ? true : false;\n\n  var rbuf = rneg ? Buffer.concat([Buffer.from([0x00]), rnbuf]) : rnbuf;\n  var sbuf = sneg ? Buffer.concat([Buffer.from([0x00]), snbuf]) : snbuf;\n\n  var rlength = rbuf.length;\n  var slength = sbuf.length;\n  var length = 2 + rlength + 2 + slength;\n  var rheader = 0x02;\n  var sheader = 0x02;\n  var header = 0x30;\n\n  var der = Buffer.concat([Buffer.from([header, length, rheader, rlength]), rbuf, Buffer.from([sheader, slength]), sbuf]);\n  return der;\n};\n\nSignature.prototype.toString = function() {\n  var buf = this.toDER();\n  return buf.toString('hex');\n};\n\n/**\n * This function is translated from bitcoind's IsDERSignature and is used in\n * the script interpreter.  This \"DER\" format actually includes an extra byte,\n * the nhashtype, at the end. It is really the tx format, not DER format.\n *\n * A canonical signature exists of: [30] [total len] [02] [len R] [R] [02] [len S] [S] [hashtype]\n * Where R and S are not negative (their first byte has its highest bit not set), and not\n * excessively padded (do not start with a 0 byte, unless an otherwise negative number follows,\n * in which case a single 0 byte is necessary and even required).\n *\n * See https://bitcointalk.org/index.php?topic=8392.msg127623#msg127623\n */\nSignature.isTxDER = function(buf) {\n  if (buf.length < 9) {\n    //  Non-canonical signature: too short\n    return false;\n  }\n  if (buf.length > 73) {\n    // Non-canonical signature: too long\n    return false;\n  }\n  if (buf[0] !== 0x30) {\n    //  Non-canonical signature: wrong type\n    return false;\n  }\n  if (buf[1] !== buf.length - 3) {\n    //  Non-canonical signature: wrong length marker\n    return false;\n  }\n  var nLenR = buf[3];\n  if (5 + nLenR >= buf.length) {\n    //  Non-canonical signature: S length misplaced\n    return false;\n  }\n  var nLenS = buf[5 + nLenR];\n  if ((nLenR + nLenS + 7) !== buf.length) {\n    //  Non-canonical signature: R+S length mismatch\n    return false;\n  }\n\n  var R = buf.slice(4);\n  if (buf[4 - 2] !== 0x02) {\n    //  Non-canonical signature: R value type mismatch\n    return false;\n  }\n  if (nLenR === 0) {\n    //  Non-canonical signature: R length is zero\n    return false;\n  }\n  if (R[0] & 0x80) {\n    //  Non-canonical signature: R value negative\n    return false;\n  }\n  if (nLenR > 1 && (R[0] === 0x00) && !(R[1] & 0x80)) {\n    //  Non-canonical signature: R value excessively padded\n    return false;\n  }\n\n  var S = buf.slice(6 + nLenR);\n  if (buf[6 + nLenR - 2] !== 0x02) {\n    //  Non-canonical signature: S value type mismatch\n    return false;\n  }\n  if (nLenS === 0) {\n    //  Non-canonical signature: S length is zero\n    return false;\n  }\n  if (S[0] & 0x80) {\n    //  Non-canonical signature: S value negative\n    return false;\n  }\n  if (nLenS > 1 && (S[0] === 0x00) && !(S[1] & 0x80)) {\n    //  Non-canonical signature: S value excessively padded\n    return false;\n  }\n  return true;\n};\n\n/**\n * Compares to bitcoind's IsLowDERSignature\n * See also ECDSA signature algorithm which enforces this.\n * See also BIP 62, \"low S values in signatures\"\n */\nSignature.prototype.hasLowS = function() {\n  if (this.s.lt(new BN(1)) ||\n    this.s.gt(new BN('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex'))) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * @returns true if the nhashtype is exactly equal to one of the standard options or combinations thereof.\n * Translated from bitcoind's IsDefinedHashtypeSignature\n */\nSignature.prototype.hasDefinedHashtype = function() {\n  if (!JSUtil.isNaturalNumber(this.nhashtype)) {\n    return false;\n  }\n  // accept with or without Signature.SIGHASH_ANYONECANPAY by ignoring the bit\n  var temp = this.nhashtype & ~Signature.SIGHASH_ANYONECANPAY;\n  if (temp < Signature.SIGHASH_ALL || temp > Signature.SIGHASH_SINGLE) {\n    return false;\n  }\n  return true;\n};\n\nSignature.prototype.toTxFormat = function() {\n  var derbuf = this.toDER();\n  var buf = Buffer.alloc(1);\n  buf.writeUInt8(this.nhashtype, 0);\n  return Buffer.concat([derbuf, buf]);\n};\n\nSignature.SIGHASH_ALL = 0x01;\nSignature.SIGHASH_NONE = 0x02;\nSignature.SIGHASH_SINGLE = 0x03;\nSignature.SIGHASH_ANYONECANPAY = 0x80;\n\nmodule.exports = Signature;\n", "'use strict';\n\nvar crypto = require('crypto');\nvar BufferUtil = require('../util/buffer');\nvar $ = require('../util/preconditions');\n\nvar Hash = module.exports;\n\nHash.sha1 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha1').update(buf).digest();\n};\n\nHash.sha1.blocksize = 512;\n\nHash.sha256 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha256').update(buf).digest();\n};\n\nHash.sha256.blocksize = 512;\n\nHash.sha256sha256 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.sha256(Hash.sha256(buf));\n};\n\nHash.ripemd160 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('ripemd160').update(buf).digest();\n};\n\nHash.sha256ripemd160 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return Hash.ripemd160(Hash.sha256(buf));\n};\n\nHash.sha512 = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return crypto.createHash('sha512').update(buf).digest();\n};\n\nHash.sha512.blocksize = 1024;\n\nHash.hmac = function(hashf, data, key) {\n  //http://en.wikipedia.org/wiki/Hash-based_message_authentication_code\n  //http://tools.ietf.org/html/rfc4868#section-2\n  $.checkArgument(BufferUtil.isBuffer(data));\n  $.checkArgument(BufferUtil.isBuffer(key));\n  $.checkArgument(hashf.blocksize);\n\n  var blocksize = hashf.blocksize / 8;\n\n  if (key.length > blocksize) {\n    key = hashf(key);\n  } else if (key < blocksize) {\n    var fill = Buffer.alloc(blocksize);\n    fill.fill(0);\n    key.copy(fill);\n    key = fill;\n  }\n\n  var o_key = Buffer.alloc(blocksize);\n  o_key.fill(0x5c);\n\n  var i_key = Buffer.alloc(blocksize);\n  i_key.fill(0x36);\n\n  var o_key_pad = Buffer.alloc(blocksize);\n  var i_key_pad = Buffer.alloc(blocksize);\n  for (var i = 0; i < blocksize; i++) {\n    o_key_pad[i] = o_key[i] ^ key[i];\n    i_key_pad[i] = i_key[i] ^ key[i];\n  }\n\n  return hashf(Buffer.concat([o_key_pad, hashf(Buffer.concat([i_key_pad, data]))]));\n};\n\nHash.sha256hmac = function(data, key) {\n  return Hash.hmac(Hash.sha256, data, key);\n};\n\nHash.sha512hmac = function(data, key) {\n  return Hash.hmac(Hash.sha512, data, key);\n};\n", "'use strict';\nvar _ = require('lodash');\n\nvar BufferUtil = require('./util/buffer');\nvar JSUtil = require('./util/js');\nvar networks = [];\nvar networkMaps = {};\n\n/**\n * A network is merely a map containing values that correspond to version\n * numbers for each bitcoin network. Currently only supporting \"livenet\"\n * (a.k.a. \"mainnet\") and \"testnet\".\n * @constructor\n */\nfunction Network() {}\n\nNetwork.prototype.toString = function toString() {\n  return this.name;\n};\n\n/**\n * @function\n * @member Networks#get\n * Retrieves the network associated with a magic number or string.\n * @param {string|number|Network} arg\n * @param {string|Array} keys - if set, only check if the magic number associated with this name matches\n * @return Network\n */\nfunction get(arg, keys) {\n  if (~networks.indexOf(arg)) {\n    return arg;\n  }\n  if (keys) {\n    if (!_.isArray(keys)) {\n      keys = [keys];\n    }\n    var containsArg = function(key) {\n      return networks[index][key] === arg;\n    };\n    for (var index in networks) {\n      if (_.some(keys, containsArg)) {\n        return networks[index];\n      }\n    }\n    return undefined;\n  }\n  if(networkMaps[arg] && networkMaps[arg].length >= 1) {\n    return networkMaps[arg][0];\n  } else {\n    return networkMaps[arg];\n  }\n}\n\n/**\n * @function\n * @member Networks#add\n * Will add a custom Network\n * @param {Object} data\n * @param {string} data.name - The name of the network\n * @param {string} data.alias - The aliased name of the network\n * @param {Number} data.pubkeyhash - The publickey hash prefix\n * @param {Number} data.privatekey - The privatekey prefix\n * @param {Number} data.scripthash - The scripthash prefix\n * @param {string} data.bech32prefix - The native segwit prefix\n * @param {Number} data.xpubkey - The extended public key magic\n * @param {Number} data.xprivkey - The extended private key magic\n * @param {Number} data.networkMagic - The network magic number\n * @param {Number} data.port - The network port\n * @param {Array}  data.dnsSeeds - An array of dns seeds\n * @return Network\n */\nfunction addNetwork(data) {\n\n  var network = new Network();\n\n  JSUtil.defineImmutable(network, {\n    name: data.name,\n    alias: data.alias,\n    pubkeyhash: data.pubkeyhash,\n    privatekey: data.privatekey,\n    scripthash: data.scripthash,\n    bech32prefix: data.bech32prefix,\n    xpubkey: data.xpubkey,\n    xprivkey: data.xprivkey\n  });\n\n  if (data.networkMagic) {\n    JSUtil.defineImmutable(network, {\n      networkMagic: BufferUtil.integerAsBuffer(data.networkMagic)\n    });\n  }\n\n  if (data.port) {\n    JSUtil.defineImmutable(network, {\n      port: data.port\n    });\n  }\n\n  if (data.dnsSeeds) {\n    JSUtil.defineImmutable(network, {\n      dnsSeeds: data.dnsSeeds\n    });\n  }\n  _.each(network, function(value) {\n    if (!_.isUndefined(value) && !_.isObject(value)) {\n      if(!networkMaps[value]) {\n        networkMaps[value] = [];\n      }\n      networkMaps[value].push(network);\n    }\n  });\n\n  networks.push(network);\n\n  return network;\n\n}\n\n/**\n * @function\n * @member Networks#remove\n * Will remove a custom network\n * @param {Network} network\n */\nfunction removeNetwork(network) {\n  for (var i = 0; i < networks.length; i++) {\n    if (networks[i] === network) {\n      networks.splice(i, 1);\n    }\n  }\n  for (var key in networkMaps) {\n    const index = networkMaps[key].indexOf(network);\n    if (index >= 0) {\n      delete networkMaps[key][index];\n    }\n  }\n}\n\naddNetwork({\n  name: 'livenet',\n  alias: 'mainnet',\n  pubkeyhash: 0x00,\n  privatekey: 0x80,\n  scripthash: 0x05,\n  bech32prefix: 'bc',\n  xpubkey: 0x0488b21e,\n  xprivkey: 0x0488ade4,\n  networkMagic: 0xf9beb4d9,\n  port: 8333,\n  dnsSeeds: [\n    'seed.bitcoin.sipa.be',\n    'dnsseed.bluematt.me',\n    'dnsseed.bitcoin.dashjr.org',\n    'seed.bitcoinstats.com',\n    'seed.bitnodes.io',\n    'bitseed.xf2.org'\n  ]\n});\n\n/**\n * @instance\n * @member Networks#livenet\n */\nvar livenet = get('livenet');\n\naddNetwork({\n  name: 'testnet',\n  alias: 'test',\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  bech32prefix: 'tb',\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: 0x0b110907,\n  port: 18333,\n  dnsSeeds: [\n    'testnet-seed.bitcoin.petertodd.org',\n    'testnet-seed.bluematt.me',\n    'testnet-seed.alexykot.me',\n    'testnet-seed.bitcoin.schildbach.de'\n  ]\n});\n\n/**\n * @instance\n * @member Networks#testnet\n */\nvar testnet = get('testnet');\n\naddNetwork({\n  name: 'regtest',\n  alias: 'dev',\n  pubkeyhash: 0x6f,\n  privatekey: 0xef,\n  scripthash: 0xc4,\n  bech32prefix: 'bcrt',\n  xpubkey: 0x043587cf,\n  xprivkey: 0x04358394,\n  networkMagic: 0xfabfb5da,\n  port: 18444,\n  dnsSeeds: []\n});\n\n/**\n * @instance\n * @member Networks#testnet\n */\nvar regtest = get('regtest');\n\n/**\n * @function\n * @deprecated\n * @member Networks#enableRegtest\n * Will enable regtest features for testnet\n */\nfunction enableRegtest() {\n  testnet.regtestEnabled = true;\n}\n\n/**\n * @function\n * @deprecated\n * @member Networks#disableRegtest\n * Will disable regtest features for testnet\n */\nfunction disableRegtest() {\n  testnet.regtestEnabled = false;\n}\n\n/**\n * @namespace Networks\n */\nmodule.exports = {\n  add: addNetwork,\n  remove: removeNetwork,\n  defaultNetwork: livenet,\n  livenet: livenet,\n  mainnet: livenet,\n  testnet: testnet,\n  regtest: regtest,\n  get: get,\n  enableRegtest: enableRegtest,\n  disableRegtest: disableRegtest\n};\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n", "'use strict';\n\nvar _ = require('lodash');\nvar bs58 = require('bs58');\nvar buffer = require('buffer');\n\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'.split('');\n\nvar Base58 = function Base58(obj) {\n  /* jshint maxcomplexity: 8 */\n  if (!(this instanceof Base58)) {\n    return new Base58(obj);\n  }\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj;\n    this.fromBuffer(buf);\n  } else if (typeof obj === 'string') {\n    var str = obj;\n    this.fromString(str);\n  } else if (obj) {\n    this.set(obj);\n  }\n};\n\nBase58.validCharacters = function validCharacters(chars) {\n  if (buffer.Buffer.isBuffer(chars)) {\n    chars = chars.toString();\n  }\n  return _.every(_.map(chars, function(char) { return _.includes(ALPHABET, char); }));\n};\n\nBase58.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  return this;\n};\n\nBase58.encode = function(buf) {\n  if (!buffer.Buffer.isBuffer(buf)) {\n    throw new Error('Input should be a buffer');\n  }\n  return bs58.encode(buf);\n};\n\nBase58.decode = function(str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string');\n  }\n  return Buffer.from(bs58.decode(str));\n};\n\nBase58.prototype.fromBuffer = function(buf) {\n  this.buf = buf;\n  return this;\n};\n\nBase58.prototype.fromString = function(str) {\n  var buf = Base58.decode(str);\n  this.buf = buf;\n  return this;\n};\n\nBase58.prototype.toBuffer = function() {\n  return this.buf;\n};\n\nBase58.prototype.toString = function() {\n  return Base58.encode(this.buf);\n};\n\nmodule.exports = Base58;\n", "'use strict';\n\nvar _ = require('lodash');\nvar Base58 = require('./base58');\nvar buffer = require('buffer');\nvar sha256sha256 = require('../crypto/hash').sha256sha256;\n\nvar Base58Check = function Base58Check(obj) {\n  if (!(this instanceof Base58Check))\n    return new Base58Check(obj);\n  if (Buffer.isBuffer(obj)) {\n    var buf = obj;\n    this.fromBuffer(buf);\n  } else if (typeof obj === 'string') {\n    var str = obj;\n    this.fromString(str);\n  } else if (obj) {\n    this.set(obj);\n  }\n};\n\nBase58Check.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  return this;\n};\n\nBase58Check.validChecksum = function validChecksum(data, checksum) {\n  if (_.isString(data)) {\n    data = Buffer.from(Base58.decode(data));\n  }\n  if (_.isString(checksum)) {\n    checksum =  Buffer.from(Base58.decode(checksum));\n  }\n  if (!checksum) {\n    checksum = data.slice(-4);\n    data = data.slice(0, -4);\n  }\n  return Base58Check.checksum(data).toString('hex') === checksum.toString('hex');\n};\n\nBase58Check.decode = function(s) {\n  if (typeof s !== 'string')\n    throw new Error('Input must be a string');\n\n  var buf = Buffer.from(Base58.decode(s));\n\n  if (buf.length < 4)\n    throw new Error(\"Input string too short\");\n\n  var data = buf.slice(0, -4);\n  var csum = buf.slice(-4);\n\n  var hash = sha256sha256(data);\n  var hash4 = hash.slice(0, 4);\n\n  if (csum.toString('hex') !== hash4.toString('hex'))\n    throw new Error(\"Checksum mismatch\");\n\n  return data;\n};\n\nBase58Check.checksum = function(buffer) {\n  return sha256sha256(buffer).slice(0, 4);\n};\n\nBase58Check.encode = function(buf) {\n  if (!Buffer.isBuffer(buf))\n    throw new Error('Input must be a buffer');\n  var checkedBuf = Buffer.alloc(buf.length + 4);\n  var hash = Base58Check.checksum(buf);\n  buf.copy(checkedBuf);\n  hash.copy(checkedBuf, buf.length);\n  return Base58.encode(checkedBuf);\n};\n\nBase58Check.prototype.fromBuffer = function(buf) {\n  this.buf = buf;\n  return this;\n};\n\nBase58Check.prototype.fromString = function(str) {\n  var buf = Base58Check.decode(str);\n  this.buf = buf;\n  return this;\n};\n\nBase58Check.prototype.toBuffer = function() {\n  return this.buf;\n};\n\nBase58Check.prototype.toString = function() {\n  return Base58Check.encode(this.buf);\n};\n\nmodule.exports = Base58Check;\n", "'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) throw new Error('Invalid prefix (' + prefix + ')')\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) throw new TypeError(str + ' too short')\n  if (str.length > LIMIT) throw new TypeError('Exceeds length limit')\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) throw new Error('Mixed-case string ' + str)\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) throw new Error('No separator character for ' + str)\n  if (split === 0) throw new Error('Missing prefix for ' + str)\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) throw new Error('Data too short')\n\n  var chk = prefixChk(prefix)\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) throw new Error('Unknown character ' + c)\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) throw new Error('Invalid checksum for ' + str)\n  return { prefix: prefix, words: words }\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) throw new Error('Excess padding')\n    if ((value << (outBits - bits)) & maxV) throw new Error('Non-zero padding')\n  }\n\n  return result\n}\n\nfunction toWords (bytes) {\n  return convert(bytes, 8, 5, true)\n}\n\nfunction fromWords (words) {\n  return convert(words, 5, 8, false)\n}\n\nmodule.exports = {\n  decode: decode,\n  encode: encode,\n  toWords: toWords,\n  fromWords: fromWords\n}\n", "'use strict';\n\nvar bech32 = require('bech32');\n\nvar decode = function(str) {\n  if (typeof str !== 'string') {\n    throw new Error('Input should be a string');\n  }\n  var decoded = bech32.decode(str);\n  return {\n    prefix: decoded.prefix,\n    data: Buffer.from(bech32.fromWords(decoded.words.slice(1))),\n    version: decoded.words[0]\n  };\n};\n\nvar encode = function(prefix, version, data) {\n\tif (typeof prefix !== 'string') {\n\t\tthrow new Error('Prefix should be a string');\n\t}\n\tif (typeof version !== 'number') {\n\t\tthrow new Error('version should be a number');\n\t}\n  var words = bech32.toWords(data);\n  words.unshift(version);\n\treturn bech32.encode(prefix, words);\n}\n\nmodule.exports = { decode: decode, encode: encode };\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar BufferUtil = require('../util/buffer');\nvar BN = require('../crypto/bn');\n\nvar BufferReader = function BufferReader(buf) {\n  if (!(this instanceof BufferReader)) {\n    return new BufferReader(buf);\n  }\n  if (_.isUndefined(buf)) {\n    return;\n  }\n  if (Buffer.isBuffer(buf)) {\n    this.set({\n      buf: buf\n    });\n  } else if (_.isString(buf)) {\n    this.set({\n      buf: Buffer.from(buf, 'hex'),\n    });\n  } else if (_.isObject(buf)) {\n    var obj = buf;\n    this.set(obj);\n  } else {\n    throw new TypeError('Unrecognized argument for BufferReader');\n  }\n};\n\nBufferReader.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf || undefined;\n  this.pos = obj.pos || this.pos || 0;\n  return this;\n};\n\nBufferReader.prototype.eof = function() {\n  if(this.buf) {\n    return this.pos >= this.buf.length;\n  } else {\n    return true;\n  }\n};\n\nBufferReader.prototype.finished = BufferReader.prototype.eof;\n\nBufferReader.prototype.read = function(len) {\n  $.checkArgument(!_.isUndefined(len), 'Must specify a length');\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return buf;\n};\n\nBufferReader.prototype.readAll = function() {\n  var buf = this.buf.slice(this.pos, this.buf.length);\n  this.pos = this.buf.length;\n  return buf;\n};\n\nBufferReader.prototype.readUInt8 = function() {\n  var val = this.buf.readUInt8(this.pos);\n  this.pos = this.pos + 1;\n  return val;\n};\n\nBufferReader.prototype.readUInt16BE = function() {\n  var val = this.buf.readUInt16BE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\n\nBufferReader.prototype.readUInt16LE = function() {\n  var val = this.buf.readUInt16LE(this.pos);\n  this.pos = this.pos + 2;\n  return val;\n};\n\nBufferReader.prototype.readUInt32BE = function() {\n  var val = this.buf.readUInt32BE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readUInt32LE = function() {\n  var val = this.buf.readUInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readInt32LE = function() {\n  var val = this.buf.readInt32LE(this.pos);\n  this.pos = this.pos + 4;\n  return val;\n};\n\nBufferReader.prototype.readUInt64BEBN = function() {\n  var buf = this.buf.slice(this.pos, this.pos + 8);\n  var bn = BN.fromBuffer(buf);\n  this.pos = this.pos + 8;\n  return bn;\n};\n\nBufferReader.prototype.readUInt64LEBN = function() {\n  var second = this.buf.readUInt32LE(this.pos);\n  var first = this.buf.readUInt32LE(this.pos + 4);\n  var combined = (first * 0x100000000) + second;\n  // Instantiating an instance of BN with a number is faster than with an\n  // array or string. However, the maximum safe number for a double precision\n  // floating point is 2 ^ 52 - 1 (0x1fffffffffffff), thus we can safely use\n  // non-floating point numbers less than this amount (52 bits). And in the case\n  // that the number is larger, we can instatiate an instance of BN by passing\n  // an array from the buffer (slower) and specifying the endianness.\n  var bn;\n  if (combined <= 0x1fffffffffffff) {\n    bn = new BN(combined);\n  } else {\n    var data = Array.prototype.slice.call(this.buf, this.pos, this.pos + 8);\n    bn = new BN(data, 10, 'le');\n  }\n  this.pos = this.pos + 8;\n  return bn;\n};\n\nBufferReader.prototype.readVarintNum = function() {\n  var first = this.readUInt8();\n  switch (first) {\n    case 0xFD:\n      return this.readUInt16LE();\n    case 0xFE:\n      return this.readUInt32LE();\n    case 0xFF:\n      var bn = this.readUInt64LEBN();\n      var n = bn.toNumber();\n      if (n <= Math.pow(2, 53)) {\n        return n;\n      } else {\n        throw new Error('number too large to retain precision - use readVarintBN');\n      }\n      break;\n    default:\n      return first;\n  }\n};\n\n/**\n * reads a length prepended buffer\n */\nBufferReader.prototype.readVarLengthBuffer = function() {\n  var len = this.readVarintNum();\n  var buf = this.read(len);\n  $.checkState(buf.length === len, 'Invalid length while reading varlength buffer. ' +\n    'Expected to read: ' + len + ' and read ' + buf.length);\n  return buf;\n};\n\nBufferReader.prototype.readVarintBuf = function() {\n  var first = this.buf.readUInt8(this.pos);\n  switch (first) {\n    case 0xFD:\n      return this.read(1 + 2);\n    case 0xFE:\n      return this.read(1 + 4);\n    case 0xFF:\n      return this.read(1 + 8);\n    default:\n      return this.read(1);\n  }\n};\n\nBufferReader.prototype.readVarintBN = function() {\n  var first = this.readUInt8();\n  switch (first) {\n    case 0xFD:\n      return new BN(this.readUInt16LE());\n    case 0xFE:\n      return new BN(this.readUInt32LE());\n    case 0xFF:\n      return this.readUInt64LEBN();\n    default:\n      return new BN(first);\n  }\n};\n\nBufferReader.prototype.reverse = function() {\n  var buf = Buffer.alloc(this.buf.length);\n  for (var i = 0; i < buf.length; i++) {\n    buf[i] = this.buf[this.buf.length - 1 - i];\n  }\n  this.buf = buf;\n  return this;\n};\n\nBufferReader.prototype.readReverse = function(len) {\n  if (_.isUndefined(len)) {\n    len = this.buf.length;\n  }\n  var buf = this.buf.slice(this.pos, this.pos + len);\n  this.pos = this.pos + len;\n  return BufferUtil.reverse(buf);\n};\n\nmodule.exports = BufferReader;\n", "'use strict';\n\nvar bufferUtil = require('../util/buffer');\nvar assert = require('assert');\n\nvar BufferWriter = function BufferWriter(obj) {\n  if (!(this instanceof BufferWriter))\n    return new BufferWriter(obj);\n  this.bufLen = 0;\n  if (obj)\n    this.set(obj);\n  else\n    this.bufs = [];\n};\n\nBufferWriter.prototype.set = function(obj) {\n  this.bufs = obj.bufs || this.bufs || [];\n  this.bufLen = this.bufs.reduce(function(prev, buf){ return prev + buf.length; }, 0);\n  return this;\n};\n\nBufferWriter.prototype.toBuffer = function() {\n  return this.concat();\n};\n\nBufferWriter.prototype.concat = function() {\n  return Buffer.concat(this.bufs, this.bufLen);\n};\n\nBufferWriter.prototype.write = function(buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(buf);\n  this.bufLen += buf.length;\n  return this;\n};\n\nBufferWriter.prototype.writeReverse = function(buf) {\n  assert(bufferUtil.isBuffer(buf));\n  this.bufs.push(bufferUtil.reverse(buf));\n  this.bufLen += buf.length;\n  return this;\n};\n\nBufferWriter.prototype.writeUInt8 = function(n) {\n  var buf = Buffer.alloc(1);\n  buf.writeUInt8(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt16BE = function(n) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16BE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt16LE = function(n) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt32BE = function(n) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32BE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeInt32LE = function(n) {\n  var buf = Buffer.alloc(4);\n  buf.writeInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt32LE = function(n) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32LE(n, 0);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt64BEBN = function(bn) {\n  var buf = bn.toBuffer({size: 8});\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeUInt64LEBN = function(bn) {\n  var buf = bn.toBuffer({size: 8});\n  this.writeReverse(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeVarintNum = function(n) {\n  var buf = BufferWriter.varintBufNum(n);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.prototype.writeVarintBN = function(bn) {\n  var buf = BufferWriter.varintBufBN(bn);\n  this.write(buf);\n  return this;\n};\n\nBufferWriter.varintBufNum = function(n) {\n  var buf = undefined;\n  if (n < 253) {\n    buf = Buffer.alloc(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    buf = Buffer.alloc(1 + 8);\n    buf.writeUInt8(255, 0);\n    buf.writeInt32LE(n & -1, 1);\n    buf.writeUInt32LE(Math.floor(n / 0x100000000), 5);\n  }\n  return buf;\n};\n\nBufferWriter.varintBufBN = function(bn) {\n  var buf = undefined;\n  var n = bn.toNumber();\n  if (n < 253) {\n    buf = Buffer.alloc(1);\n    buf.writeUInt8(n, 0);\n  } else if (n < 0x10000) {\n    buf = Buffer.alloc(1 + 2);\n    buf.writeUInt8(253, 0);\n    buf.writeUInt16LE(n, 1);\n  } else if (n < 0x100000000) {\n    buf = Buffer.alloc(1 + 4);\n    buf.writeUInt8(254, 0);\n    buf.writeUInt32LE(n, 1);\n  } else {\n    var bw = new BufferWriter();\n    bw.writeUInt8(255);\n    bw.writeUInt64LEBN(bn);\n    var buf = bw.concat();\n  }\n  return buf;\n};\n\nmodule.exports = BufferWriter;\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('./util/preconditions');\nvar BufferUtil = require('./util/buffer');\nvar JSUtil = require('./util/js');\n\nfunction Opcode(num) {\n  if (!(this instanceof Opcode)) {\n    return new Opcode(num);\n  }\n\n  var value;\n\n  if (_.isNumber(num)) {\n    value = num;\n  } else if (_.isString(num)) {\n    value = Opcode.map[num];\n  } else {\n    throw new TypeError('Unrecognized num type: \"' + typeof(num) + '\" for Opcode');\n  }\n\n  JSUtil.defineImmutable(this, {\n    num: value\n  });\n\n  return this;\n}\n\nOpcode.fromBuffer = function(buf) {\n  $.checkArgument(BufferUtil.isBuffer(buf));\n  return new Opcode(Number('0x' + buf.toString('hex')));\n};\n\nOpcode.fromNumber = function(num) {\n  $.checkArgument(_.isNumber(num));\n  return new Opcode(num);\n};\n\nOpcode.fromString = function(str) {\n  $.checkArgument(_.isString(str));\n  var value = Opcode.map[str];\n  if (typeof value === 'undefined') {\n    throw new TypeError('Invalid opcodestr');\n  }\n  return new Opcode(value);\n};\n\nOpcode.prototype.toHex = function() {\n  return this.num.toString(16);\n};\n\nOpcode.prototype.toBuffer = function() {\n  return Buffer.from(this.toHex(), 'hex');\n};\n\nOpcode.prototype.toNumber = function() {\n  return this.num;\n};\n\nOpcode.prototype.toString = function() {\n  var str = Opcode.reverseMap[this.num];\n  if (typeof str === 'undefined') {\n    throw new Error('Opcode does not have a string representation');\n  }\n  return str;\n};\n\nOpcode.smallInt = function(n) {\n  $.checkArgument(_.isNumber(n), 'Invalid Argument: n should be number');\n  $.checkArgument(n >= 0 && n <= 16, 'Invalid Argument: n must be between 0 and 16');\n  if (n === 0) {\n    return Opcode('OP_0');\n  }\n  return new Opcode(Opcode.map.OP_1 + n - 1);\n};\n\nOpcode.map = {\n  // push value\n  OP_FALSE: 0,\n  OP_0: 0,\n  OP_PUSHDATA1: 76,\n  OP_PUSHDATA2: 77,\n  OP_PUSHDATA4: 78,\n  OP_1NEGATE: 79,\n  OP_RESERVED: 80,\n  OP_TRUE: 81,\n  OP_1: 81,\n  OP_2: 82,\n  OP_3: 83,\n  OP_4: 84,\n  OP_5: 85,\n  OP_6: 86,\n  OP_7: 87,\n  OP_8: 88,\n  OP_9: 89,\n  OP_10: 90,\n  OP_11: 91,\n  OP_12: 92,\n  OP_13: 93,\n  OP_14: 94,\n  OP_15: 95,\n  OP_16: 96,\n\n  // control\n  OP_NOP: 97,\n  OP_VER: 98,\n  OP_IF: 99,\n  OP_NOTIF: 100,\n  OP_VERIF: 101,\n  OP_VERNOTIF: 102,\n  OP_ELSE: 103,\n  OP_ENDIF: 104,\n  OP_VERIFY: 105,\n  OP_RETURN: 106,\n\n  // stack ops\n  OP_TOALTSTACK: 107,\n  OP_FROMALTSTACK: 108,\n  OP_2DROP: 109,\n  OP_2DUP: 110,\n  OP_3DUP: 111,\n  OP_2OVER: 112,\n  OP_2ROT: 113,\n  OP_2SWAP: 114,\n  OP_IFDUP: 115,\n  OP_DEPTH: 116,\n  OP_DROP: 117,\n  OP_DUP: 118,\n  OP_NIP: 119,\n  OP_OVER: 120,\n  OP_PICK: 121,\n  OP_ROLL: 122,\n  OP_ROT: 123,\n  OP_SWAP: 124,\n  OP_TUCK: 125,\n\n  // splice ops\n  OP_CAT: 126,\n  OP_SUBSTR: 127,\n  OP_LEFT: 128,\n  OP_RIGHT: 129,\n  OP_SIZE: 130,\n\n  // bit logic\n  OP_INVERT: 131,\n  OP_AND: 132,\n  OP_OR: 133,\n  OP_XOR: 134,\n  OP_EQUAL: 135,\n  OP_EQUALVERIFY: 136,\n  OP_RESERVED1: 137,\n  OP_RESERVED2: 138,\n\n  // numeric\n  OP_1ADD: 139,\n  OP_1SUB: 140,\n  OP_2MUL: 141,\n  OP_2DIV: 142,\n  OP_NEGATE: 143,\n  OP_ABS: 144,\n  OP_NOT: 145,\n  OP_0NOTEQUAL: 146,\n\n  OP_ADD: 147,\n  OP_SUB: 148,\n  OP_MUL: 149,\n  OP_DIV: 150,\n  OP_MOD: 151,\n  OP_LSHIFT: 152,\n  OP_RSHIFT: 153,\n\n  OP_BOOLAND: 154,\n  OP_BOOLOR: 155,\n  OP_NUMEQUAL: 156,\n  OP_NUMEQUALVERIFY: 157,\n  OP_NUMNOTEQUAL: 158,\n  OP_LESSTHAN: 159,\n  OP_GREATERTHAN: 160,\n  OP_LESSTHANOREQUAL: 161,\n  OP_GREATERTHANOREQUAL: 162,\n  OP_MIN: 163,\n  OP_MAX: 164,\n\n  OP_WITHIN: 165,\n\n  // crypto\n  OP_RIPEMD160: 166,\n  OP_SHA1: 167,\n  OP_SHA256: 168,\n  OP_HASH160: 169,\n  OP_HASH256: 170,\n  OP_CODESEPARATOR: 171,\n  OP_CHECKSIG: 172,\n  OP_CHECKSIGVERIFY: 173,\n  OP_CHECKMULTISIG: 174,\n  OP_CHECKMULTISIGVERIFY: 175,\n\n  OP_CHECKLOCKTIMEVERIFY: 177,\n  OP_CHECKSEQUENCEVERIFY: 178,\n\n  // expansion\n  OP_NOP1: 176,\n  OP_NOP2: 177,\n  OP_NOP3: 178,\n  OP_NOP4: 179,\n  OP_NOP5: 180,\n  OP_NOP6: 181,\n  OP_NOP7: 182,\n  OP_NOP8: 183,\n  OP_NOP9: 184,\n  OP_NOP10: 185,\n\n  // template matching params\n  OP_PUBKEYHASH: 253,\n  OP_PUBKEY: 254,\n  OP_INVALIDOPCODE: 255\n};\n\nOpcode.reverseMap = [];\n\nfor (var k in Opcode.map) {\n  Opcode.reverseMap[Opcode.map[k]] = k;\n}\n\n// Easier access to opcodes\n_.extend(Opcode, Opcode.map);\n\n/**\n * @returns true if opcode is one of OP_0, OP_1, ..., OP_16\n */\nOpcode.isSmallIntOp = function(opcode) {\n  if (opcode instanceof Opcode) {\n    opcode = opcode.toNumber();\n  }\n  return ((opcode === Opcode.map.OP_0) ||\n    ((opcode >= Opcode.map.OP_1) && (opcode <= Opcode.map.OP_16)));\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Script opcode\n */\nOpcode.prototype.inspect = function() {\n  return '<Opcode: ' + this.toString() + ', hex: '+this.toHex()+', decimal: '+this.num+'>';\n};\n\nmodule.exports = Opcode;\n", "'use strict';\n\nvar Address = require('../address');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Hash = require('../crypto/hash');\nvar Opcode = require('../opcode');\nvar PublicKey = require('../publickey');\nvar Signature = require('../crypto/signature');\nvar Networks = require('../networks');\nvar $ = require('../util/preconditions');\nvar _ = require('lodash');\nvar errors = require('../errors');\nvar buffer = require('buffer');\nvar BufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\n\n/**\n * A bitcoin transaction script. Each transaction's inputs and outputs\n * has a script that is evaluated to validate it's spending.\n *\n * See https://en.bitcoin.it/wiki/Script\n *\n * @constructor\n * @param {Object|string|Buffer=} from optional data to populate script\n */\nvar Script = function Script(from) {\n  if (!(this instanceof Script)) {\n    return new Script(from);\n  }\n  this.chunks = [];\n\n  if (BufferUtil.isBuffer(from)) {\n    return Script.fromBuffer(from);\n  } else if (from instanceof Address) {\n    return Script.fromAddress(from);\n  } else if (from instanceof Script) {\n    return Script.fromBuffer(from.toBuffer());\n  } else if (_.isString(from)) {\n    return Script.fromString(from);\n  } else if (_.isObject(from) && _.isArray(from.chunks)) {\n    this.set(from);\n  }\n};\n\nScript.prototype.set = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  $.checkArgument(_.isArray(obj.chunks));\n  this.chunks = obj.chunks;\n  return this;\n};\n\nScript.fromBuffer = function(buffer) {\n  var script = new Script();\n  script.chunks = [];\n\n  var br = new BufferReader(buffer);\n  while (!br.finished()) {\n    try {\n      var opcodenum = br.readUInt8();\n\n      var len, buf;\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        len = opcodenum;\n        script.chunks.push({\n          buf: br.read(len),\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        len = br.readUInt8();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        len = br.readUInt16LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        len = br.readUInt32LE();\n        buf = br.read(len);\n        script.chunks.push({\n          buf: buf,\n          len: len,\n          opcodenum: opcodenum\n        });\n      } else {\n        script.chunks.push({\n          opcodenum: opcodenum\n        });\n      }\n    } catch (e) {\n      if (e instanceof RangeError) {\n        throw new errors.Script.InvalidBuffer(buffer.toString('hex'));\n      }\n      throw e;\n    }\n  }\n\n  return script;\n};\n\nScript.prototype.toBuffer = function() {\n  var bw = new BufferWriter();\n\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    var opcodenum = chunk.opcodenum;\n    bw.writeUInt8(chunk.opcodenum);\n    if (chunk.buf) {\n      if (opcodenum < Opcode.OP_PUSHDATA1) {\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA1) {\n        bw.writeUInt8(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA2) {\n        bw.writeUInt16LE(chunk.len);\n        bw.write(chunk.buf);\n      } else if (opcodenum === Opcode.OP_PUSHDATA4) {\n        bw.writeUInt32LE(chunk.len);\n        bw.write(chunk.buf);\n      }\n    }\n  }\n\n  return bw.concat();\n};\n\nScript.fromASM = function(str) {\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      var buf = Buffer.from(tokens[i], 'hex');\n      script.chunks.push({\n        buf: buf,\n        len: buf.length,\n        opcodenum: buf.length\n      });\n      i = i + 1;\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      script.chunks.push({\n        buf: Buffer.from(tokens[i + 2], 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.fromHex = function(str) {\n  return new Script(Buffer.from(str, 'hex'));\n};\n\nScript.fromString = function(str) {\n  if (JSUtil.isHexa(str) || str.length === 0) {\n    return new Script(Buffer.from(str, 'hex'));\n  }\n  var script = new Script();\n  script.chunks = [];\n\n  var tokens = str.split(' ');\n  var i = 0;\n  while (i < tokens.length) {\n    var token = tokens[i];\n    var opcode = Opcode(token);\n    var opcodenum = opcode.toNumber();\n\n    if (_.isUndefined(opcodenum)) {\n      opcodenum = parseInt(token);\n      if (opcodenum > 0 && opcodenum < Opcode.OP_PUSHDATA1) {\n        script.chunks.push({\n          buf: Buffer.from(tokens[i + 1].slice(2), 'hex'),\n          len: opcodenum,\n          opcodenum: opcodenum\n        });\n        i = i + 2;\n      } else {\n        throw new Error('Invalid script: ' + JSON.stringify(str));\n      }\n    } else if (opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      if (tokens[i + 2].slice(0, 2) !== '0x') {\n        throw new Error('Pushdata data must start with 0x');\n      }\n      script.chunks.push({\n        buf: Buffer.from(tokens[i + 2].slice(2), 'hex'),\n        len: parseInt(tokens[i + 1]),\n        opcodenum: opcodenum\n      });\n      i = i + 3;\n    } else {\n      script.chunks.push({\n        opcodenum: opcodenum\n      });\n      i = i + 1;\n    }\n  }\n  return script;\n};\n\nScript.prototype._chunkToString = function(chunk, type) {\n  var opcodenum = chunk.opcodenum;\n  var asm = (type === 'asm');\n  var str = '';\n  if (!chunk.buf) {\n    // no data chunk\n    if (typeof Opcode.reverseMap[opcodenum] !== 'undefined') {\n      if (asm) {\n        // A few cases where the opcode name differs from reverseMap\n        // aside from 1 to 16 data pushes.\n        if (opcodenum === 0) {\n          // OP_0 -> 0\n          str = str + ' 0';\n        } else if(opcodenum === 79) {\n          // OP_1NEGATE -> 1\n          str = str + ' -1';\n        } else {\n          str = str + ' ' + Opcode(opcodenum).toString();\n        }\n      } else {\n        str = str + ' ' + Opcode(opcodenum).toString();\n      }\n    } else {\n      var numstr = opcodenum.toString(16);\n      if (numstr.length % 2 !== 0) {\n        numstr = '0' + numstr;\n      }\n      if (asm) {\n        str = str + ' ' + numstr;\n      } else {\n        str = str + ' ' + '0x' + numstr;\n      }\n    }\n  } else {\n    // data chunk\n    if (!asm && opcodenum === Opcode.OP_PUSHDATA1 ||\n      opcodenum === Opcode.OP_PUSHDATA2 ||\n      opcodenum === Opcode.OP_PUSHDATA4) {\n      str = str + ' ' + Opcode(opcodenum).toString();\n    }\n    if (chunk.len > 0) {\n      if (asm) {\n        str = str + ' ' + chunk.buf.toString('hex');\n      } else {\n        str = str + ' ' + chunk.len + ' ' + '0x' + chunk.buf.toString('hex');\n      }\n    }\n  }\n  return str;\n};\n\nScript.prototype.toASM = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk, 'asm');\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toString = function() {\n  var str = '';\n  for (var i = 0; i < this.chunks.length; i++) {\n    var chunk = this.chunks[i];\n    str += this._chunkToString(chunk);\n  }\n\n  return str.substr(1);\n};\n\nScript.prototype.toHex = function() {\n  return this.toBuffer().toString('hex');\n};\n\nScript.prototype.inspect = function() {\n  return '<Script: ' + this.toString() + '>';\n};\n\n// script classification methods\n\n/**\n * @returns {boolean} if this is a pay to pubkey hash output script\n */\nScript.prototype.isPublicKeyHashOut = function() {\n  return !!(this.chunks.length === 5 &&\n    this.chunks[0].opcodenum === Opcode.OP_DUP &&\n    this.chunks[1].opcodenum === Opcode.OP_HASH160 &&\n    this.chunks[2].buf &&\n    this.chunks[2].buf.length === 20 &&\n    this.chunks[3].opcodenum === Opcode.OP_EQUALVERIFY &&\n    this.chunks[4].opcodenum === Opcode.OP_CHECKSIG);\n};\n\n/**\n * @returns {boolean} if this is a pay to public key hash input script\n */\nScript.prototype.isPublicKeyHashIn = function() {\n  if (this.chunks.length === 2) {\n    var signatureBuf = this.chunks[0].buf;\n    var pubkeyBuf = this.chunks[1].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30 &&\n        pubkeyBuf &&\n        pubkeyBuf.length\n       ) {\n      var version = pubkeyBuf[0];\n      if ((version === 0x04 ||\n           version === 0x06 ||\n           version === 0x07) && pubkeyBuf.length === 65) {\n        return true;\n      } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nScript.prototype.getPublicKey = function() {\n  $.checkState(this.isPublicKeyOut(), 'Can\\'t retrieve PublicKey from a non-PK output');\n  return this.chunks[0].buf;\n};\n\nScript.prototype.getPublicKeyHash = function() {\n  if (this.isPublicKeyHashOut()) {\n    return this.chunks[2].buf;\n  } else if (this.isWitnessPublicKeyHashOut()) {\n    return this.chunks[1].buf;\n  } else {\n    throw new Error('Can\\'t retrieve PublicKeyHash from a non-PKH output');\n  }\n};\n\n/**\n * @returns {boolean} if this is a public key output script\n */\nScript.prototype.isPublicKeyOut = function() {\n  if (this.chunks.length === 2 &&\n      this.chunks[0].buf &&\n      this.chunks[0].buf.length &&\n      this.chunks[1].opcodenum === Opcode.OP_CHECKSIG) {\n    var pubkeyBuf = this.chunks[0].buf;\n    var version = pubkeyBuf[0];\n    var isVersion = false;\n    if ((version === 0x04 ||\n         version === 0x06 ||\n         version === 0x07) && pubkeyBuf.length === 65) {\n      isVersion = true;\n    } else if ((version === 0x03 || version === 0x02) && pubkeyBuf.length === 33) {\n      isVersion = true;\n    }\n    if (isVersion) {\n      return PublicKey.isValid(pubkeyBuf);\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a pay to public key input script\n */\nScript.prototype.isPublicKeyIn = function() {\n  if (this.chunks.length === 1) {\n    var signatureBuf = this.chunks[0].buf;\n    if (signatureBuf &&\n        signatureBuf.length &&\n        signatureBuf[0] === 0x30) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh output script\n */\nScript.prototype.isScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 23 &&\n    buf[0] === Opcode.OP_HASH160 &&\n    buf[1] === 0x14 &&\n    buf[buf.length - 1] === Opcode.OP_EQUAL);\n};\n\n/**\n * @returns {boolean} if this is a p2wsh output script\n */\nScript.prototype.isWitnessScriptHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 34 && buf[0] === 0 && buf[1] === 32);\n};\n\n/**\n * @returns {boolean} if this is a p2wpkh output script\n */\nScript.prototype.isWitnessPublicKeyHashOut = function() {\n  var buf = this.toBuffer();\n  return (buf.length === 22 && buf[0] === 0 && buf[1] === 20);\n};\n\n/**\n * @param {Object=} values - The return values\n * @param {Number} values.version - Set with the witness version\n * @param {Buffer} values.program - Set with the witness program\n * @returns {boolean} if this is a p2wpkh output script\n */\nScript.prototype.isWitnessProgram = function(values) {\n  if (!values) {\n    values = {};\n  }\n  var buf = this.toBuffer();\n  if (buf.length < 4 || buf.length > 42) {\n    return false;\n  }\n  if (buf[0] !== Opcode.OP_0 && !(buf[0] >= Opcode.OP_1 && buf[0] <= Opcode.OP_16)) {\n    return false;\n  }\n\n  if (buf.length === buf[1] + 2) {\n    values.version = buf[0];\n    values.program = buf.slice(2, buf.length);\n    return true;\n  }\n\n  return false;\n};\n\n/**\n * @returns {boolean} if this is a p2sh input script\n * Note that these are frequently indistinguishable from pubkeyhashin\n */\nScript.prototype.isScriptHashIn = function() {\n  if (this.chunks.length <= 1) {\n    return false;\n  }\n  var redeemChunk = this.chunks[this.chunks.length - 1];\n  var redeemBuf = redeemChunk.buf;\n  if (!redeemBuf) {\n    return false;\n  }\n\n  var redeemScript;\n  try {\n    redeemScript = Script.fromBuffer(redeemBuf);\n  } catch (e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      return false;\n    }\n    throw e;\n  }\n  var type = redeemScript.classify();\n  return type !== Script.types.UNKNOWN;\n};\n\n/**\n * @returns {boolean} if this is a mutlsig output script\n */\nScript.prototype.isMultisigOut = function() {\n  return (this.chunks.length > 3 &&\n    Opcode.isSmallIntOp(this.chunks[0].opcodenum) &&\n    this.chunks.slice(1, this.chunks.length - 2).every(function(obj) {\n      return obj.buf && BufferUtil.isBuffer(obj.buf);\n    }) &&\n    Opcode.isSmallIntOp(this.chunks[this.chunks.length - 2].opcodenum) &&\n    this.chunks[this.chunks.length - 1].opcodenum === Opcode.OP_CHECKMULTISIG);\n};\n\n\n/**\n * @returns {boolean} if this is a multisig input script\n */\nScript.prototype.isMultisigIn = function() {\n  return this.chunks.length >= 2 &&\n    this.chunks[0].opcodenum === 0 &&\n    this.chunks.slice(1, this.chunks.length).every(function(obj) {\n      return obj.buf &&\n        BufferUtil.isBuffer(obj.buf) &&\n        Signature.isTxDER(obj.buf);\n    });\n};\n\n/**\n * @returns {boolean} true if this is a valid standard OP_RETURN output\n */\nScript.prototype.isDataOut = function() {\n  return this.chunks.length >= 1 &&\n    this.chunks[0].opcodenum === Opcode.OP_RETURN &&\n    (this.chunks.length === 1 ||\n      (this.chunks.length === 2 &&\n        this.chunks[1].buf &&\n        this.chunks[1].buf.length <= Script.OP_RETURN_STANDARD_SIZE &&\n        this.chunks[1].length === this.chunks.len));\n};\n\n/**\n * Retrieve the associated data for this script.\n * In the case of a pay to public key hash, P2SH, P2WSH, or P2WPKH, return the hash.\n * In the case of a standard OP_RETURN, return the data\n * @returns {Buffer}\n */\nScript.prototype.getData = function() {\n  if (this.isDataOut() || this.isScriptHashOut() || this.isWitnessScriptHashOut() || this.isWitnessPublicKeyHashOut()) {\n    if (_.isUndefined(this.chunks[1])) {\n      return Buffer.alloc(0);\n    } else {\n      return Buffer.from(this.chunks[1].buf);\n    }\n  }\n  if (this.isPublicKeyHashOut()) {\n    return Buffer.from(this.chunks[2].buf);\n  }\n  throw new Error('Unrecognized script type to get data from');\n};\n\n/**\n * @returns {boolean} if the script is only composed of data pushing\n * opcodes or small int opcodes (OP_0, OP_1, ..., OP_16)\n */\nScript.prototype.isPushOnly = function() {\n  return _.every(this.chunks, function(chunk) {\n    return chunk.opcodenum <= Opcode.OP_16;\n  });\n};\n\n\nScript.types = {};\nScript.types.UNKNOWN = 'Unknown';\nScript.types.PUBKEY_OUT = 'Pay to public key';\nScript.types.PUBKEY_IN = 'Spend from public key';\nScript.types.PUBKEYHASH_OUT = 'Pay to public key hash';\nScript.types.PUBKEYHASH_IN = 'Spend from public key hash';\nScript.types.SCRIPTHASH_OUT = 'Pay to script hash';\nScript.types.SCRIPTHASH_IN = 'Spend from script hash';\nScript.types.MULTISIG_OUT = 'Pay to multisig';\nScript.types.MULTISIG_IN = 'Spend from multisig';\nScript.types.DATA_OUT = 'Data push';\n\nScript.OP_RETURN_STANDARD_SIZE = 80;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classify = function() {\n  if (this._isInput) {\n    return this.classifyInput();\n  } else if (this._isOutput) {\n    return this.classifyOutput();\n  } else {\n    var outputType = this.classifyOutput();\n    return outputType != Script.types.UNKNOWN ? outputType : this.classifyInput();\n  }\n};\n\nScript.outputIdentifiers = {};\nScript.outputIdentifiers.PUBKEY_OUT = Script.prototype.isPublicKeyOut;\nScript.outputIdentifiers.PUBKEYHASH_OUT = Script.prototype.isPublicKeyHashOut;\nScript.outputIdentifiers.MULTISIG_OUT = Script.prototype.isMultisigOut;\nScript.outputIdentifiers.SCRIPTHASH_OUT = Script.prototype.isScriptHashOut;\nScript.outputIdentifiers.DATA_OUT = Script.prototype.isDataOut;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyOutput = function() {\n  for (var type in Script.outputIdentifiers) {\n    if (Script.outputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\nScript.inputIdentifiers = {};\nScript.inputIdentifiers.PUBKEY_IN = Script.prototype.isPublicKeyIn;\nScript.inputIdentifiers.PUBKEYHASH_IN = Script.prototype.isPublicKeyHashIn;\nScript.inputIdentifiers.MULTISIG_IN = Script.prototype.isMultisigIn;\nScript.inputIdentifiers.SCRIPTHASH_IN = Script.prototype.isScriptHashIn;\n\n/**\n * @returns {object} The Script type if it is a known form,\n * or Script.UNKNOWN if it isn't\n */\nScript.prototype.classifyInput = function() {\n  for (var type in Script.inputIdentifiers) {\n    if (Script.inputIdentifiers[type].bind(this)()) {\n      return Script.types[type];\n    }\n  }\n  return Script.types.UNKNOWN;\n};\n\n\n/**\n * @returns {boolean} if script is one of the known types\n */\nScript.prototype.isStandard = function() {\n  // TODO: Add BIP62 compliance\n  return this.classify() !== Script.types.UNKNOWN;\n};\n\n\n// Script construction methods\n\n/**\n * Adds a script element at the start of the script.\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n */\nScript.prototype.prepend = function(obj) {\n  this._addByType(obj, true);\n  return this;\n};\n\n/**\n * Compares a script with another script\n */\nScript.prototype.equals = function(script) {\n  $.checkState(script instanceof Script, 'Must provide another script');\n  if (this.chunks.length !== script.chunks.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < this.chunks.length; i++) {\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.isBuffer(script.chunks[i].buf)) {\n      return false;\n    }\n    if (BufferUtil.isBuffer(this.chunks[i].buf) && !BufferUtil.equals(this.chunks[i].buf, script.chunks[i].buf)) {\n      return false;\n    } else if (this.chunks[i].opcodenum !== script.chunks[i].opcodenum) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Adds a script element to the end of the script.\n *\n * @param {*} obj a string, number, Opcode, Buffer, or object to add\n * @returns {Script} this script instance\n *\n */\nScript.prototype.add = function(obj) {\n  this._addByType(obj, false);\n  return this;\n};\n\nScript.prototype._addByType = function(obj, prepend) {\n  if (typeof obj === 'string') {\n    this._addOpcode(obj, prepend);\n  } else if (typeof obj === 'number') {\n    this._addOpcode(obj, prepend);\n  } else if (obj instanceof Opcode) {\n    this._addOpcode(obj, prepend);\n  } else if (BufferUtil.isBuffer(obj)) {\n    this._addBuffer(obj, prepend);\n  } else if (obj instanceof Script) {\n    this.chunks = this.chunks.concat(obj.chunks);\n  } else if (typeof obj === 'object') {\n    this._insertAtPosition(obj, prepend);\n  } else {\n    throw new Error('Invalid script chunk');\n  }\n};\n\nScript.prototype._insertAtPosition = function(op, prepend) {\n  if (prepend) {\n    this.chunks.unshift(op);\n  } else {\n    this.chunks.push(op);\n  }\n};\n\nScript.prototype._addOpcode = function(opcode, prepend) {\n  var op;\n  if (typeof opcode === 'number') {\n    op = opcode;\n  } else if (opcode instanceof Opcode) {\n    op = opcode.toNumber();\n  } else {\n    op = Opcode(opcode).toNumber();\n  }\n  this._insertAtPosition({\n    opcodenum: op\n  }, prepend);\n  return this;\n};\n\nScript.prototype._addBuffer = function(buf, prepend) {\n  var opcodenum;\n  var len = buf.length;\n  if (len >= 0 && len < Opcode.OP_PUSHDATA1) {\n    opcodenum = len;\n  } else if (len < Math.pow(2, 8)) {\n    opcodenum = Opcode.OP_PUSHDATA1;\n  } else if (len < Math.pow(2, 16)) {\n    opcodenum = Opcode.OP_PUSHDATA2;\n  } else if (len < Math.pow(2, 32)) {\n    opcodenum = Opcode.OP_PUSHDATA4;\n  } else {\n    throw new Error('You can\\'t push that much data');\n  }\n  this._insertAtPosition({\n    buf: buf,\n    len: len,\n    opcodenum: opcodenum\n  }, prepend);\n  return this;\n};\n\nScript.prototype.hasCodeseparators = function() {\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum === Opcode.OP_CODESEPARATOR) {\n      return true;\n    }\n  }\n  return false;\n};\n\nScript.prototype.removeCodeseparators = function() {\n  var chunks = [];\n  for (var i = 0; i < this.chunks.length; i++) {\n    if (this.chunks[i].opcodenum !== Opcode.OP_CODESEPARATOR) {\n      chunks.push(this.chunks[i]);\n    }\n  }\n  this.chunks = chunks;\n  return this;\n};\n\n// high level script builder methods\n\n/**\n * @returns {Script} a new Multisig output script for given public keys,\n * requiring m of those public keys to spend\n * @param {PublicKey[]} publicKeys - list of all public keys controlling the output\n * @param {number} threshold - amount of required signatures to spend the output\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true, don't sort the given\n *                      public keys before creating the script\n */\nScript.buildMultisigOut = function(publicKeys, threshold, opts) {\n  $.checkArgument(threshold <= publicKeys.length,\n    'Number of required signatures must be less than or equal to the number of public keys');\n  opts = opts || {};\n  var script = new Script();\n  script.add(Opcode.smallInt(threshold));\n  publicKeys = _.map(publicKeys, PublicKey);\n  var sorted = publicKeys;\n  if (!opts.noSorting) {\n    sorted = _.sortBy(publicKeys, function(publicKey) {\n      return publicKey.toString('hex');\n    });\n  }\n  for (var i = 0; i < sorted.length; i++) {\n    var publicKey = sorted[i];\n    script.add(publicKey.toBuffer());\n  }\n  script.add(Opcode.smallInt(publicKeys.length));\n  script.add(Opcode.OP_CHECKMULTISIG);\n  return script;\n};\n\nScript.buildWitnessMultisigOutFromScript = function(script) {\n  if (script instanceof Script) {\n    var s = new Script();\n    s.add(Opcode.OP_0);\n    s.add(Hash.sha256(script.toBuffer()));\n    return s;\n  } else {\n    throw new TypeError('First argument is expected to be a p2sh script');\n  }\n};\n\n/**\n * A new Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  return s;\n};\n\n/**\n * A new P2SH Multisig input script for the given public keys, requiring m of those public keys to spend\n *\n * @param {PublicKey[]} pubkeys list of all public keys controlling the output\n * @param {number} threshold amount of required signatures to spend the output\n * @param {Array} signatures and array of signature buffers to append to the script\n * @param {Object=} opts\n * @param {boolean=} opts.noSorting don't sort the given public keys before creating the script (false by default)\n * @param {Script=} opts.cachedMultisig don't recalculate the redeemScript\n *\n * @returns {Script}\n */\nScript.buildP2SHMultisigIn = function(pubkeys, threshold, signatures, opts) {\n  $.checkArgument(_.isArray(pubkeys));\n  $.checkArgument(_.isNumber(threshold));\n  $.checkArgument(_.isArray(signatures));\n  opts = opts || {};\n  var s = new Script();\n  s.add(Opcode.OP_0);\n  _.each(signatures, function(signature) {\n    $.checkArgument(BufferUtil.isBuffer(signature), 'Signatures must be an array of Buffers');\n    // TODO: allow signatures to be an array of Signature objects\n    s.add(signature);\n  });\n  s.add((opts.cachedMultisig || Script.buildMultisigOut(pubkeys, threshold, opts)).toBuffer());\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key hash output for the given\n * address or public key\n * @param {(Address|PublicKey)} to - destination address or public key\n */\nScript.buildPublicKeyHashOut = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress();\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_DUP)\n    .add(Opcode.OP_HASH160)\n    .add(to.hashBuffer)\n    .add(Opcode.OP_EQUALVERIFY)\n    .add(Opcode.OP_CHECKSIG);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to witness v0 output for the given\n * address\n * @param {(Address|PublicKey)} to - destination address\n */\nScript.buildWitnessV0Out = function(to) {\n  $.checkArgument(!_.isUndefined(to));\n  $.checkArgument(to instanceof PublicKey || to instanceof Address || _.isString(to));\n  if (to instanceof PublicKey) {\n    to = to.toAddress(null, Address.PayToWitnessPublicKeyHash);\n  } else if (_.isString(to)) {\n    to = new Address(to);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_0)\n    .add(to.hashBuffer);\n  s._network = to.network;\n  return s;\n};\n\n/**\n * @returns {Script} a new pay to public key output for the given\n *  public key\n */\nScript.buildPublicKeyOut = function(pubkey) {\n  $.checkArgument(pubkey instanceof PublicKey);\n  var s = new Script();\n  s.add(pubkey.toBuffer())\n    .add(Opcode.OP_CHECKSIG);\n  return s;\n};\n\n/**\n * @returns {Script} a new OP_RETURN script with data\n * @param {(string|Buffer)} data - the data to embed in the output\n * @param {(string)} encoding - the type of encoding of the string\n */\nScript.buildDataOut = function(data, encoding) {\n  $.checkArgument(_.isUndefined(data) || _.isString(data) || BufferUtil.isBuffer(data));\n  if (_.isString(data)) {\n    data = Buffer.from(data, encoding);\n  }\n  var s = new Script();\n  s.add(Opcode.OP_RETURN);\n  if (!_.isUndefined(data)) {\n    s.add(data);\n  }\n  return s;\n};\n\n/**\n * @param {Script|Address} script - the redeemScript for the new p2sh output.\n *    It can also be a p2sh address\n * @returns {Script} new pay to script hash script for given script\n */\nScript.buildScriptHashOut = function(script) {\n  $.checkArgument(script instanceof Script ||\n    (script instanceof Address && script.isPayToScriptHash()));\n  var s = new Script();\n  s.add(Opcode.OP_HASH160)\n    .add(script instanceof Address ? script.hashBuffer : Hash.sha256ripemd160(script.toBuffer()))\n    .add(Opcode.OP_EQUAL);\n\n  s._network = script._network || script.network;\n  return s;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key output script.\n *\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyIn = function(signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script();\n  script.add(BufferUtil.concat([\n    signature,\n    BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n  ]));\n  return script;\n};\n\n/**\n * Builds a scriptSig (a script for an input) that signs a public key hash\n * output script.\n *\n * @param {Buffer|string|PublicKey} publicKey\n * @param {Signature|Buffer} signature - a Signature object, or the signature in DER canonical encoding\n * @param {number=} sigtype - the type of the signature (defaults to SIGHASH_ALL)\n */\nScript.buildPublicKeyHashIn = function(publicKey, signature, sigtype) {\n  $.checkArgument(signature instanceof Signature || BufferUtil.isBuffer(signature));\n  $.checkArgument(_.isUndefined(sigtype) || _.isNumber(sigtype));\n  if (signature instanceof Signature) {\n    signature = signature.toBuffer();\n  }\n  var script = new Script()\n    .add(BufferUtil.concat([\n      signature,\n      BufferUtil.integerAsSingleByteBuffer(sigtype || Signature.SIGHASH_ALL)\n    ]))\n    .add(new PublicKey(publicKey).toBuffer());\n  return script;\n};\n\n/**\n * @returns {Script} an empty script\n */\nScript.empty = function() {\n  return new Script();\n};\n\n/**\n * @returns {Script} a new pay to script hash script that pays to this script\n */\nScript.prototype.toScriptHashOut = function() {\n  return Script.buildScriptHashOut(this);\n};\n\n/**\n * @return {Script} an output script built from the address\n */\nScript.fromAddress = function(address) {\n  address = Address(address);\n  if (address.isPayToScriptHash()) {\n    return Script.buildScriptHashOut(address);\n  } else if (address.isPayToPublicKeyHash()) {\n    return Script.buildPublicKeyHashOut(address);\n  } else if (address.isPayToWitnessPublicKeyHash()) {\n    return Script.buildWitnessV0Out(address);\n  } else if (address.isPayToWitnessScriptHash()) {\n    return Script.buildWitnessV0Out(address);\n  }\n  throw new errors.Script.UnrecognizedAddress(address);\n};\n\n/**\n * Will return the associated address information object\n * @return {Address|boolean}\n */\nScript.prototype.getAddressInfo = function(opts) {\n  if (this._isInput) {\n    return this._getInputAddressInfo();\n  } else if (this._isOutput) {\n    return this._getOutputAddressInfo();\n  } else {\n    var info = this._getOutputAddressInfo();\n    if (!info) {\n      return this._getInputAddressInfo();\n    }\n    return info;\n  }\n};\n\n/**\n * Will return the associated output scriptPubKey address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getOutputAddressInfo = function() {\n  var info = {};\n  if (this.isScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToScriptHash;\n  } else if (this.isPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isWitnessScriptHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToWitnessScriptHash;\n  } else if (this.isWitnessPublicKeyHashOut()) {\n    info.hashBuffer = this.getData();\n    info.type = Address.PayToWitnessPublicKeyHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * Will return the associated input scriptSig address information object\n * @return {Address|boolean}\n * @private\n */\nScript.prototype._getInputAddressInfo = function() {\n  var info = {};\n  if (this.isPublicKeyHashIn()) {\n    // hash the publickey found in the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[1].buf);\n    info.type = Address.PayToPublicKeyHash;\n  } else if (this.isScriptHashIn()) {\n    // hash the redeemscript found at the end of the scriptSig\n    info.hashBuffer = Hash.sha256ripemd160(this.chunks[this.chunks.length - 1].buf);\n    info.type = Address.PayToScriptHash;\n  } else {\n    return false;\n  }\n  return info;\n};\n\n/**\n * @param {Network=} network\n * @return {Address|boolean} the associated address for this script if possible, or false\n */\nScript.prototype.toAddress = function(network) {\n  var info = this.getAddressInfo();\n  if (!info) {\n    return false;\n  }\n  info.network = Networks.get(network) || this._network || Networks.defaultNetwork;\n  return new Address(info);\n};\n\n/**\n * Analogous to bitcoind's FindAndDelete. Find and delete equivalent chunks,\n * typically used with push data chunks.  Note that this will find and delete\n * not just the same data, but the same data with the same push data op as\n * produced by default. i.e., if a pushdata in a tx does not use the minimal\n * pushdata op, then when you try to remove the data it is pushing, it will not\n * be removed, because they do not use the same pushdata op.\n */\nScript.prototype.findAndDelete = function(script) {\n  var buf = script.toBuffer();\n  var hex = buf.toString('hex');\n  for (var i = 0; i < this.chunks.length; i++) {\n    var script2 = Script({\n      chunks: [this.chunks[i]]\n    });\n    var buf2 = script2.toBuffer();\n    var hex2 = buf2.toString('hex');\n    if (hex === hex2) {\n      this.chunks.splice(i, 1);\n    }\n  }\n  return this;\n};\n\n/**\n * Comes from bitcoind's script interpreter CheckMinimalPush function\n * @returns {boolean} if the chunk {i} is the smallest way to push that particular data.\n */\nScript.prototype.checkMinimalPush = function(i) {\n  var chunk = this.chunks[i];\n  var buf = chunk.buf;\n  var opcodenum = chunk.opcodenum;\n  if (!buf) {\n    return true;\n  }\n  if (buf.length === 0) {\n    // Could have used OP_0.\n    return opcodenum === Opcode.OP_0;\n  } else if (buf.length === 1 && buf[0] >= 1 && buf[0] <= 16) {\n    // Could have used OP_1 .. OP_16.\n    return opcodenum === Opcode.OP_1 + (buf[0] - 1);\n  } else if (buf.length === 1 && buf[0] === 0x81) {\n    // Could have used OP_1NEGATE\n    return opcodenum === Opcode.OP_1NEGATE;\n  } else if (buf.length <= 75) {\n    // Could have used a direct push (opcode indicating number of bytes pushed + those bytes).\n    return opcodenum === buf.length;\n  } else if (buf.length <= 255) {\n    // Could have used OP_PUSHDATA.\n    return opcodenum === Opcode.OP_PUSHDATA1;\n  } else if (buf.length <= 65535) {\n    // Could have used OP_PUSHDATA2.\n    return opcodenum === Opcode.OP_PUSHDATA2;\n  }\n  return true;\n};\n\n/**\n * Comes from bitcoind's script DecodeOP_N function\n * @param {number} opcode\n * @returns {number} numeric value in range of 0 to 16\n */\nScript.prototype._decodeOP_N = function(opcode) {\n  if (opcode === Opcode.OP_0) {\n    return 0;\n  } else if (opcode >= Opcode.OP_1 && opcode <= Opcode.OP_16) {\n    return opcode - (Opcode.OP_1 - 1);\n  } else {\n    throw new Error('Invalid opcode: ' + JSON.stringify(opcode));\n  }\n};\n\n/**\n * Comes from bitcoind's script GetSigOpCount(boolean) function\n * @param {boolean} use current (true) or pre-version-0.6 (false) logic\n * @returns {number} number of signature operations required by this script\n */\nScript.prototype.getSignatureOperationsCount = function(accurate) {\n  accurate = (_.isUndefined(accurate) ? true : accurate);\n  var self = this;\n  var n = 0;\n  var lastOpcode = Opcode.OP_INVALIDOPCODE;\n  _.each(self.chunks, function getChunk(chunk) {\n    var opcode = chunk.opcodenum;\n    if (opcode == Opcode.OP_CHECKSIG || opcode == Opcode.OP_CHECKSIGVERIFY) {\n      n++;\n    } else if (opcode == Opcode.OP_CHECKMULTISIG || opcode == Opcode.OP_CHECKMULTISIGVERIFY) {\n      if (accurate && lastOpcode >= Opcode.OP_1 && lastOpcode <= Opcode.OP_16) {\n        n += self._decodeOP_N(lastOpcode);\n      } else {\n        n += 20;\n      }\n    }\n    lastOpcode = opcode;\n  });\n  return n;\n};\n\nmodule.exports = Script;\n", "module.exports = function(a, b) {\n  if (typeof a.compare === 'function') return a.compare(b)\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n", "'use strict';\n\nvar _ = require('lodash');\nvar BN = require('../crypto/bn');\nvar buffer = require('buffer');\nvar bufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Script = require('../script');\nvar $ = require('../util/preconditions');\nvar errors = require('../errors');\n\nvar MAX_SAFE_INTEGER = 0x1fffffffffffff;\n\nfunction Output(args) {\n  if (!(this instanceof Output)) {\n    return new Output(args);\n  }\n  if (_.isObject(args)) {\n    this.satoshis = args.satoshis;\n    if (bufferUtil.isBuffer(args.script)) {\n      this._scriptBuffer = args.script;\n    } else {\n      var script;\n      if (_.isString(args.script) && JSUtil.isHexa(args.script)) {\n        script = Buffer.from(args.script, 'hex');\n      } else {\n        script = args.script;\n      }\n      this.setScript(script);\n    }\n  } else {\n    throw new TypeError('Unrecognized argument for Output');\n  }\n}\n\nObject.defineProperty(Output.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this._script) {\n      return this._script;\n    } else {\n      this.setScriptFromBuffer(this._scriptBuffer);\n      return this._script;\n    }\n\n  }\n});\n\nObject.defineProperty(Output.prototype, 'satoshis', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._satoshis;\n  },\n  set: function(num) {\n    if (num instanceof BN) {\n      this._satoshisBN = num;\n      this._satoshis = num.toNumber();\n    } else if (_.isString(num)) {\n      this._satoshis = parseInt(num);\n      this._satoshisBN = BN.fromNumber(this._satoshis);\n    } else {\n      $.checkArgument(\n        JSUtil.isNaturalNumber(num),\n        'Output satoshis is not a natural number'\n      );\n      this._satoshisBN = BN.fromNumber(num);\n      this._satoshis = num;\n    }\n    $.checkState(\n      JSUtil.isNaturalNumber(this._satoshis),\n      'Output satoshis is not a natural number'\n    );\n  }\n});\n\nOutput.prototype.invalidSatoshis = function() {\n  if (this._satoshis > MAX_SAFE_INTEGER) {\n    return 'transaction txout satoshis greater than max safe integer';\n  }\n  if (this._satoshis !== this._satoshisBN.toNumber()) {\n    return 'transaction txout satoshis has corrupted value';\n  }\n  if (this._satoshis < 0) {\n    return 'transaction txout negative';\n  }\n  return false;\n};\n\nOutput.prototype.toObject = Output.prototype.toJSON = function toObject() {\n  var obj = {\n    satoshis: this.satoshis\n  };\n  obj.script = this._scriptBuffer.toString('hex');\n  return obj;\n};\n\nOutput.fromObject = function(data) {\n  return new Output(data);\n};\n\nOutput.prototype.setScriptFromBuffer = function(buffer) {\n  this._scriptBuffer = buffer;\n  try {\n    this._script = Script.fromBuffer(this._scriptBuffer);\n    this._script._isOutput = true;\n  } catch(e) {\n    if (e instanceof errors.Script.InvalidBuffer) {\n      this._script = null;\n    } else {\n      throw e;\n    }\n  }\n};\n\nOutput.prototype.setScript = function(script) {\n  if (script instanceof Script) {\n    this._scriptBuffer = script.toBuffer();\n    this._script = script;\n    this._script._isOutput = true;\n  } else if (_.isString(script)) {\n    this._script = Script.fromString(script);\n    this._scriptBuffer = this._script.toBuffer();\n    this._script._isOutput = true;\n  } else if (bufferUtil.isBuffer(script)) {\n    this.setScriptFromBuffer(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\nOutput.prototype.inspect = function() {\n  var scriptStr;\n  if (this.script) {\n    scriptStr = this.script.inspect();\n  } else {\n    scriptStr = this._scriptBuffer.toString('hex');\n  }\n  return '<Output (' + this.satoshis + ' sats) ' + scriptStr + '>';\n};\n\nOutput.fromBufferReader = function(br) {\n  var obj = {};\n  obj.satoshis = br.readUInt64LEBN();\n  var size = br.readVarintNum();\n  if (size !== 0) {\n    obj.script = br.read(size);\n  } else {\n    obj.script = Buffer.from([]);\n  }\n  return new Output(obj);\n};\n\nOutput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeUInt64LEBN(this._satoshisBN);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  return writer;\n};\n\nmodule.exports = Output;\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../../util/preconditions');\nconst errors = require('../../errors');\nvar BufferWriter = require('../../encoding/bufferwriter');\nvar buffer = require('buffer');\nvar BufferUtil = require('../../util/buffer');\nvar JSUtil = require('../../util/js');\nvar Script = require('../../script');\nvar Sighash = require('../sighash');\nvar Output = require('../output');\n\nvar MAXINT = 0xffffffff; // Math.pow(2, 32) - 1;\nvar DEFAULT_SEQNUMBER = MAXINT;\nvar DEFAULT_LOCKTIME_SEQNUMBER = MAXINT - 1;\nvar DEFAULT_RBF_SEQNUMBER = MAXINT - 2;\nconst SEQUENCE_LOCKTIME_DISABLE_FLAG =  Math.pow(2,31); // (1 << 31);\nconst SEQUENCE_LOCKTIME_TYPE_FLAG = Math.pow(2,22); // (1 << 22);\nconst SEQUENCE_LOCKTIME_MASK = 0xffff;\nconst SEQUENCE_LOCKTIME_GRANULARITY = 512; // 512 seconds\nconst SEQUENCE_BLOCKDIFF_LIMIT = Math.pow(2,16)-1; // 16 bits \n\n\nfunction Input(params) {\n  if (!(this instanceof Input)) {\n    return new Input(params);\n  }\n  if (params) {\n    return this._fromObject(params);\n  }\n}\n\nInput.MAXINT = MAXINT;\nInput.DEFAULT_SEQNUMBER = DEFAULT_SEQNUMBER;\nInput.DEFAULT_LOCKTIME_SEQNUMBER = DEFAULT_LOCKTIME_SEQNUMBER;\nInput.DEFAULT_RBF_SEQNUMBER = DEFAULT_RBF_SEQNUMBER;\nInput.SEQUENCE_LOCKTIME_TYPE_FLAG = SEQUENCE_LOCKTIME_TYPE_FLAG;\n\nObject.defineProperty(Input.prototype, 'script', {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    if (this.isNull()) {\n      return null;\n    }\n    if (!this._script) {\n      this._script = new Script(this._scriptBuffer);\n      this._script._isInput = true;\n    }\n    return this._script;\n  }\n});\n\nInput.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj));\n  var input = new Input();\n  return input._fromObject(obj);\n};\n\nInput.prototype._fromObject = function(params) {\n  var prevTxId;\n  if (_.isString(params.prevTxId) && JSUtil.isHexa(params.prevTxId)) {\n    prevTxId = Buffer.from(params.prevTxId, 'hex');\n  } else {\n    prevTxId = params.prevTxId;\n  }\n  this.witnesses = [];\n  this.output = params.output ?\n    (params.output instanceof Output ? params.output : new Output(params.output)) : undefined;\n  this.prevTxId = prevTxId || params.txidbuf;\n  this.outputIndex = _.isUndefined(params.outputIndex) ? params.txoutnum : params.outputIndex;\n  this.sequenceNumber = _.isUndefined(params.sequenceNumber) ?\n    (_.isUndefined(params.seqnum) ? DEFAULT_SEQNUMBER : params.seqnum) : params.sequenceNumber;\n  if (_.isUndefined(params.script) && _.isUndefined(params.scriptBuffer)) {\n    throw new errors.Transaction.Input.MissingScript();\n  }\n  this.setScript(params.scriptBuffer || params.script);\n  return this;\n};\n\nInput.prototype.toObject = Input.prototype.toJSON = function toObject() {\n  var obj = {\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    sequenceNumber: this.sequenceNumber,\n    script: this._scriptBuffer.toString('hex'),\n  };\n  // add human readable form if input contains valid script\n  if (this.script) {\n    obj.scriptString = this.script.toString();\n  }\n  if (this.output) {\n    obj.output = this.output.toObject();\n  }\n  return obj;\n};\n\nInput.fromBufferReader = function(br) {\n  var input = new Input();\n  input.prevTxId = br.readReverse(32);\n  input.outputIndex = br.readUInt32LE();\n  input._scriptBuffer = br.readVarLengthBuffer();\n  input.sequenceNumber = br.readUInt32LE();\n  // TODO: return different classes according to which input it is\n  // e.g: CoinbaseInput, PublicKeyHashInput, MultiSigScriptHashInput, etc.\n  return input;\n};\n\nInput.prototype.toBufferWriter = function(writer) {\n  if (!writer) {\n    writer = new BufferWriter();\n  }\n  writer.writeReverse(this.prevTxId);\n  writer.writeUInt32LE(this.outputIndex);\n  var script = this._scriptBuffer;\n  writer.writeVarintNum(script.length);\n  writer.write(script);\n  writer.writeUInt32LE(this.sequenceNumber);\n  return writer;\n};\n\nInput.prototype.setScript = function(script) {\n  this._script = null;\n  if (script instanceof Script) {\n    this._script = script;\n    this._script._isInput = true;\n    this._scriptBuffer = script.toBuffer();\n  } else if (JSUtil.isHexa(script)) {\n    // hex string script\n    this._scriptBuffer = Buffer.from(script, 'hex');\n  } else if (_.isString(script)) {\n    // human readable string script\n    this._script = new Script(script);\n    this._script._isInput = true;\n    this._scriptBuffer = this._script.toBuffer();\n  } else if (BufferUtil.isBuffer(script)) {\n    // buffer script\n    this._scriptBuffer = Buffer.from(script);\n  } else {\n    throw new TypeError('Invalid argument type: script');\n  }\n  return this;\n};\n\n/**\n * Retrieve signatures for the provided PrivateKey.\n *\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key to use when signing\n * @param {number} inputIndex - the index of this input in the provided transaction\n * @param {number} sigType - defaults to Signature.SIGHASH_ALL\n * @param {Buffer} addressHash - if provided, don't calculate the hash of the\n *     public key associated with the private key provided\n * @abstract\n */\nInput.prototype.getSignatures = function() {\n  throw new errors.AbstractMethodInvoked(\n    'Trying to sign unsupported output type (only P2PKH and P2SH multisig inputs are supported)' +\n    ' for input: ' + JSON.stringify(this)\n  );\n};\n\nInput.prototype.getSatoshisBuffer = function() {\n  $.checkState(this.output instanceof Output);\n  $.checkState(this.output._satoshisBN);\n  return new BufferWriter().writeUInt64LEBN(this.output._satoshisBN).toBuffer();\n};\n\n\nInput.prototype.isFullySigned = function() {\n  throw new errors.AbstractMethodInvoked('Input#isFullySigned');\n};\n\nInput.prototype.isFinal = function() {\n  return this.sequenceNumber !== Input.MAXINT;\n};\n\nInput.prototype.addSignature = function() {\n  throw new errors.AbstractMethodInvoked('Input#addSignature');\n};\n\nInput.prototype.clearSignatures = function() {\n  throw new errors.AbstractMethodInvoked('Input#clearSignatures');\n};\n\nInput.prototype.hasWitnesses = function() {\n  if (this.witnesses && this.witnesses.length > 0) {\n    return true;\n  }\n  return false;\n};\n\nInput.prototype.getWitnesses = function() {\n  return this.witnesses;\n};\n\nInput.prototype.setWitnesses = function(witnesses) {\n  this.witnesses = witnesses;\n};\n\nInput.prototype.isValidSignature = function(transaction, signature, signingMethod) {\n  // FIXME: Refactor signature so this is not necessary\n  signingMethod = signingMethod || 'ecdsa';\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    signingMethod\n  );\n};\n\n/**\n * @returns true if this is a coinbase input (represents no input)\n */\nInput.prototype.isNull = function() {\n  return this.prevTxId.toString('hex') === '0000000000000000000000000000000000000000000000000000000000000000' &&\n    this.outputIndex === 0xffffffff;\n};\n\nInput.prototype._estimateSize = function() {\n  return this.toBufferWriter().toBuffer().length;\n};\n\n\n/**\n * Sets sequence number so that transaction is not valid until the desired seconds\n *  since the transaction is mined\n *\n * @param {Number} time in seconds\n * @return {Transaction} this\n */\nInput.prototype.lockForSeconds = function(seconds) {\n  $.checkArgument(_.isNumber(seconds));\n  if (seconds < 0 ||  seconds >= SEQUENCE_LOCKTIME_GRANULARITY * SEQUENCE_LOCKTIME_MASK) {\n    throw new errors.Transaction.Input.LockTimeRange();\n  }\n  seconds = parseInt(Math.floor(seconds / SEQUENCE_LOCKTIME_GRANULARITY));\n\n  // SEQUENCE_LOCKTIME_DISABLE_FLAG = 1 \n  this.sequenceNumber = seconds | SEQUENCE_LOCKTIME_TYPE_FLAG ;\n  return this;\n};\n\n/**\n * Sets sequence number so that transaction is not valid until the desired block height differnece since the tx is mined\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nInput.prototype.lockUntilBlockHeight = function(heightDiff) {\n  $.checkArgument(_.isNumber(heightDiff));\n  if (heightDiff < 0 || heightDiff >= SEQUENCE_BLOCKDIFF_LIMIT) {\n    throw new errors.Transaction.Input.BlockHeightOutOfRange();\n  }\n  // SEQUENCE_LOCKTIME_TYPE_FLAG = 0\n  // SEQUENCE_LOCKTIME_DISABLE_FLAG = 0\n  this.sequenceNumber = heightDiff ;\n  return this;\n};\n\n\n/**\n *  Returns a semantic version of the input's sequence nLockTime.\n *  @return {Number|Date}\n *  If sequence lock is disabled  it returns null,\n *  if is set to block height lock, returns a block height (number)\n *  else it returns a Date object.\n */\nInput.prototype.getLockTime = function() {\n  if (this.sequenceNumber & SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n    return null;\n  }\n\n  if (this.sequenceNumber & SEQUENCE_LOCKTIME_TYPE_FLAG) {\n    var seconds = SEQUENCE_LOCKTIME_GRANULARITY * (this.sequenceNumber & SEQUENCE_LOCKTIME_MASK);\n    return seconds;\n  } else {\n    var blockHeight = this.sequenceNumber & SEQUENCE_LOCKTIME_MASK;\n    return blockHeight;\n  }\n};\n\n\n\n\nmodule.exports = Input;\n", "module.exports = require('util').inherits\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar inherits = require('inherits');\nvar BufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\n\nvar PublicKey = require('../publickey');\nvar errors = require('../errors');\nvar Signature = require('../crypto/signature');\n\n/**\n * @desc\n * Wrapper around Signature with fields related to signing a transaction specifically\n *\n * @param {Object|string|TransactionSignature} arg\n * @constructor\n */\nfunction TransactionSignature(arg) {\n  if (!(this instanceof TransactionSignature)) {\n    return new TransactionSignature(arg);\n  }\n  if (arg instanceof TransactionSignature) {\n    return arg;\n  }\n  if (_.isObject(arg)) {\n    return this._fromObject(arg);\n  }\n  throw new errors.InvalidArgument('TransactionSignatures must be instantiated from an object');\n}\ninherits(TransactionSignature, Signature);\n\nTransactionSignature.prototype._fromObject = function(arg) {\n  this._checkObjectArgs(arg);\n  this.publicKey = new PublicKey(arg.publicKey);\n  this.prevTxId = BufferUtil.isBuffer(arg.prevTxId) ? arg.prevTxId : Buffer.from(arg.prevTxId, 'hex');\n  this.outputIndex = arg.outputIndex;\n  this.inputIndex = arg.inputIndex;\n  this.signature = (arg.signature instanceof Signature) ? arg.signature :\n                     BufferUtil.isBuffer(arg.signature) ? Signature.fromBuffer(arg.signature) :\n                     Signature.fromString(arg.signature);\n  this.sigtype = arg.sigtype;\n  return this;\n};\n\nTransactionSignature.prototype._checkObjectArgs = function(arg) {\n  $.checkArgument(PublicKey(arg.publicKey), 'publicKey');\n  $.checkArgument(!_.isUndefined(arg.inputIndex), 'inputIndex');\n  $.checkArgument(!_.isUndefined(arg.outputIndex), 'outputIndex');\n  $.checkState(_.isNumber(arg.inputIndex), 'inputIndex must be a number');\n  $.checkState(_.isNumber(arg.outputIndex), 'outputIndex must be a number');\n  $.checkArgument(arg.signature, 'signature');\n  $.checkArgument(arg.prevTxId, 'prevTxId');\n  $.checkState(arg.signature instanceof Signature ||\n               BufferUtil.isBuffer(arg.signature) ||\n               JSUtil.isHexa(arg.signature), 'signature must be a buffer or hexa value');\n  $.checkState(BufferUtil.isBuffer(arg.prevTxId) ||\n               JSUtil.isHexa(arg.prevTxId), 'prevTxId must be a buffer or hexa value');\n  $.checkArgument(arg.sigtype, 'sigtype');\n  $.checkState(_.isNumber(arg.sigtype), 'sigtype must be a number');\n};\n\n/**\n * Serializes a transaction to a plain JS object\n * @return {Object}\n */\nTransactionSignature.prototype.toObject = TransactionSignature.prototype.toJSON = function toObject() {\n  return {\n    publicKey: this.publicKey.toString(),\n    prevTxId: this.prevTxId.toString('hex'),\n    outputIndex: this.outputIndex,\n    inputIndex: this.inputIndex,\n    signature: this.signature.toString(),\n    sigtype: this.sigtype\n  };\n};\n\n/**\n * Builds a TransactionSignature from an object\n * @param {Object} object\n * @return {TransactionSignature}\n */\nTransactionSignature.fromObject = function(object) {\n  $.checkArgument(object);\n  return new TransactionSignature(object);\n};\n\nmodule.exports = TransactionSignature;\n", "'use strict';\n\nvar inherits = require('inherits');\n\nvar $ = require('../../util/preconditions');\nvar BufferUtil = require('../../util/buffer');\n\nvar Input = require('./input');\nvar Output = require('../output');\nvar Sighash = require('../sighash');\nvar Script = require('../../script');\nvar Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKey kind.\n * @constructor\n */\nfunction PublicKeyInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyInput, Input);\n\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {String} signingMethod - method used to sign input - 'ecdsa' or 'schnorr' (future signing method)\n * @return {Array} of objects that can be\n */\nPublicKeyInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData, signingMethod) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var publicKey = privateKey.toPublicKey();\n  if (publicKey.toString() === this.output.script.getPublicKey().toString('hex')) {\n    return [new TransactionSignature({\n      publicKey: publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, signingMethod),\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @return {PublicKeyInput} this, for chaining\n */\nPublicKeyInput.prototype.addSignature = function(transaction, signature, signingMethod) {\n  $.checkState(this.isValidSignature(transaction, signature, signingMethod), 'Signature is invalid');\n  this.setScript(Script.buildPublicKeyIn(\n    signature.signature.toDER(),\n    signature.sigtype\n  ));\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyIn();\n};\n\nPublicKeyInput.SCRIPT_MAX_SIZE = 73; // sigsize (1 + 72)\n\nPublicKeyInput.prototype._estimateSize = function() {\n  return PublicKeyInput.SCRIPT_MAX_SIZE;\n};\n\nmodule.exports = PublicKeyInput;\n", "'use strict';\n\n/* jshint maxparams:5 */\n\nvar Signature = require('../crypto/signature');\nvar Script = require('../script');\nvar Output = require('./output');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar BN = require('../crypto/bn');\nvar Hash = require('../crypto/hash');\nvar ECDSA = require('../crypto/ecdsa');\nvar $ = require('../util/preconditions');\nvar _ = require('lodash');\n\n/**\n * Returns a buffer of length 32 bytes with the hash that needs to be signed\n * for witness programs as defined by:\n * https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Buffer} scriptCode\n * @param {Buffer} satoshisBuffer\n */\nvar sighash = function sighash(transaction, sighashType, inputNumber, scriptCode, satoshisBuffer) {\n  /* jshint maxstatements: 50 */\n\n  var hashPrevouts;\n  var hashSequence;\n  var hashOutputs;\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY)) {\n    var buffers = [];\n    for (var n = 0; n < transaction.inputs.length; n++) {\n      var input = transaction.inputs[n];\n      var prevTxIdBuffer = new BufferReader(input.prevTxId).readReverse();\n      buffers.push(prevTxIdBuffer);\n      var outputIndexBuffer = Buffer.alloc(4);\n      outputIndexBuffer.writeUInt32LE(input.outputIndex, 0);\n      buffers.push(outputIndexBuffer);\n    }\n    hashPrevouts = Hash.sha256sha256(Buffer.concat(buffers));\n  }\n\n  if (!(sighashType & Signature.SIGHASH_ANYONECANPAY) &&\n      (sighashType & 0x1f) !== Signature.SIGHASH_SINGLE && (sighashType & 0x1f) !== Signature.SIGHASH_NONE) {\n\n    var sequenceBuffers = [];\n    for (var m = 0; m < transaction.inputs.length; m++) {\n      var sequenceBuffer = Buffer.alloc(4);\n      sequenceBuffer.writeUInt32LE(transaction.inputs[m].sequenceNumber, 0);\n      sequenceBuffers.push(sequenceBuffer);\n    }\n    hashSequence = Hash.sha256sha256(Buffer.concat(sequenceBuffers));\n  }\n\n  var outputWriter = new BufferWriter();\n  if ((sighashType & 0x1f) !== Signature.SIGHASH_SINGLE && (sighashType & 0x1f) !== Signature.SIGHASH_NONE) {\n    for (var p = 0; p < transaction.outputs.length; p++) {\n      transaction.outputs[p].toBufferWriter(outputWriter);\n    }\n    hashOutputs = Hash.sha256sha256(outputWriter.toBuffer());\n  } else if ((sighashType & 0x1f) === Signature.SIGHASH_SINGLE && inputNumber < transaction.outputs.length) {\n    transaction.outputs[inputNumber].toBufferWriter(outputWriter);\n    hashOutputs = Hash.sha256sha256(outputWriter.toBuffer());\n  }\n\n  // Version\n  var writer = new BufferWriter();\n  writer.writeUInt32LE(transaction.version);\n\n  // Input prevouts/nSequence (none/all, depending on flags)\n  writer.write(hashPrevouts);\n  writer.write(hashSequence);\n\n  // The input being signed (replacing the scriptSig with scriptCode + amount)\n  // The prevout may already be contained in hashPrevout, and the nSequence\n  // may already be contain in hashSequence.\n  var outpointId = new BufferReader(transaction.inputs[inputNumber].prevTxId).readReverse();\n  writer.write(outpointId);\n  writer.writeUInt32LE(transaction.inputs[inputNumber].outputIndex);\n\n  writer.write(scriptCode);\n\n  writer.write(satoshisBuffer);\n\n  writer.writeUInt32LE(transaction.inputs[inputNumber].sequenceNumber);\n\n  // Outputs (none/one/all, depending on flags)\n  writer.write(hashOutputs);\n\n  // Locktime\n  writer.writeUInt32LE(transaction.nLockTime);\n\n  // Sighash type\n  writer.writeInt32LE(sighashType);\n\n  return Hash.sha256sha256(writer.toBuffer());\n\n};\n\n/**\n * Create a signature\n *\n * @name Signing.sign\n * @param {Transaction} transaction\n * @param {PrivateKey} privateKey\n * @param {number} sighash\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr'\n * @return {Signature}\n */\nfunction sign(transaction, privateKey, sighashType, inputIndex, scriptCode, satoshisBuffer, signingMethod) {\n  signingMethod = signingMethod || 'ecdsa';\n  var sig;\n\n  if (signingMethod === 'ecdsa') {\n    let hashbuf = sighash(transaction, sighashType, inputIndex, scriptCode, satoshisBuffer);\n    sig = ECDSA.sign(hashbuf, privateKey).set({\n      nhashtype: sighashType\n    });\n    return sig;\n  }\n  throw new Error(\"signingMethod not supported \", signingMethod);\n}\n\n/**\n * Verify a signature\n *\n * @name Signing.verify\n * @param {Transaction} transaction\n * @param {Signature} signature\n * @param {PublicKey} publicKey\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @return {boolean}\n */\nfunction verify(transaction, signature, publicKey, inputIndex, scriptCode, satoshisBuffer, signingMethod) {\n  $.checkArgument(!_.isUndefined(transaction));\n  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype));\n  signingMethod = signingMethod || 'ecdsa';\n\n  if (signingMethod === 'ecdsa') {\n    let hashbuf = sighash(transaction, signature.nhashtype, inputIndex, scriptCode, satoshisBuffer);\n    return ECDSA.verify(hashbuf, signature, publicKey);\n  }\n  throw new Error(\"signingMethod not supported \", signingMethod);\n}\n\n/**\n * @namespace Signing\n */\nmodule.exports = {\n  sighash: sighash,\n  sign: sign,\n  verify: verify\n};\n", "'use strict';\n\nvar inherits = require('inherits');\n\nvar $ = require('../../util/preconditions');\nvar BufferUtil = require('../../util/buffer');\n\nvar Address = require('../../address');\nvar Hash = require('../../crypto/hash');\nvar Input = require('./input');\nvar Output = require('../output');\nvar Sighash = require('../sighash');\nvar SighashWitness = require('../sighashwitness');\nvar BufferWriter = require('../../encoding/bufferwriter');\nvar BufferUtil = require('../../util/buffer');\nvar Script = require('../../script');\nvar Signature = require('../../crypto/signature');\nvar TransactionSignature = require('../signature');\n\n/**\n * Represents a special kind of input of PayToPublicKeyHash kind.\n * @constructor\n */\nfunction PublicKeyHashInput() {\n  Input.apply(this, arguments);\n}\ninherits(PublicKeyHashInput, Input);\n\nPublicKeyHashInput.prototype.getRedeemScript = function(publicKey) {\n  if (!this.redeemScript) {\n    var redeemScript = Script.buildWitnessV0Out(publicKey);\n    if (Script.buildScriptHashOut(redeemScript).equals(this.output.script)) {\n      var scriptSig = new Script();\n      scriptSig.add(redeemScript.toBuffer());\n      this.setScript(scriptSig);\n      this.redeemScript = redeemScript;\n    }\n  }\n  return this.redeemScript;\n};\n\nPublicKeyHashInput.prototype.getScriptCode = function(publicKey) {\n  var writer = new BufferWriter();\n  var script;\n  if (this.output.script.isScriptHashOut()) {\n    script = this.getRedeemScript(publicKey);\n  } else {\n    script = this.output.script;\n  }\n  var scriptBuffer = Script.buildPublicKeyHashOut(script.toAddress()).toBuffer();\n  writer.writeVarintNum(scriptBuffer.length);\n  writer.write(scriptBuffer);\n  return writer.toBuffer();\n};\n\nPublicKeyHashInput.prototype.getSighash = function(transaction, privateKey, index, sigtype) {\n  var scriptCode = this.getScriptCode(privateKey);\n  var satoshisBuffer = this.getSatoshisBuffer();\n  return SighashWitness.sighash(transaction, sigtype, index, scriptCode, satoshisBuffer);\n};\n\n/* jshint maxparams: 5 */\n/**\n * @param {Transaction} transaction - the transaction to be signed\n * @param {PrivateKey} privateKey - the private key with which to sign the transaction\n * @param {number} index - the index of the input in the transaction input vector\n * @param {number=} sigtype - the type of signature, defaults to Signature.SIGHASH_ALL\n * @param {Buffer=} hashData - the precalculated hash of the public key associated with the privateKey provided\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @return {Array} of objects that can be\n */\nPublicKeyHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData, signingMethod) {\n  $.checkState(this.output instanceof Output);\n  hashData = hashData || Hash.sha256ripemd160(privateKey.publicKey.toBuffer());\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  signingMethod = signingMethod || 'ecdsa';\n\n  var script;\n  if (this.output.script.isScriptHashOut()) {\n    script = this.getRedeemScript(privateKey.publicKey);\n  } else {\n    script = this.output.script;\n  }\n\n  if (script && BufferUtil.equals(hashData, script.getPublicKeyHash())) {\n    var signature;\n    if (script.isWitnessPublicKeyHashOut()) {\n      var satoshisBuffer = this.getSatoshisBuffer();\n      var scriptCode = this.getScriptCode(privateKey.publicKey);\n      signature = SighashWitness.sign(transaction, privateKey, sigtype, index, scriptCode, satoshisBuffer, signingMethod);\n    } else {\n      signature = Sighash.sign(transaction, privateKey, sigtype, index, this.output.script, signingMethod);\n    }\n\n    return [new TransactionSignature({\n      publicKey: privateKey.publicKey,\n      prevTxId: this.prevTxId,\n      outputIndex: this.outputIndex,\n      inputIndex: index,\n      signature: signature,\n      sigtype: sigtype\n    })];\n  }\n  return [];\n};\n/* jshint maxparams: 3 */\n\n/**\n * Add the provided signature\n *\n * @param {Object} signature\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {number=} signature.sigtype\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.addSignature = function(transaction, signature, signingMethod) {\n  $.checkState(this.isValidSignature(transaction, signature, signingMethod), 'Signature is invalid');\n\n  if (this.output.script.isWitnessPublicKeyHashOut() || this.output.script.isScriptHashOut()) {\n    this.setWitnesses([\n      BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]),\n      signature.publicKey.toBuffer()\n    ]);\n  } else {\n    this.setScript(Script.buildPublicKeyHashIn(\n      signature.publicKey,\n      signature.signature.toDER(),\n      signature.sigtype\n    ));\n  }\n  return this;\n};\n\n/**\n * Clear the input's signature\n * @return {PublicKeyHashInput} this, for chaining\n */\nPublicKeyHashInput.prototype.clearSignatures = function() {\n  this.setScript(Script.empty());\n  this.setWitnesses([]);\n  return this;\n};\n\n/**\n * Query whether the input is signed\n * @return {boolean}\n */\nPublicKeyHashInput.prototype.isFullySigned = function() {\n  return this.script.isPublicKeyHashIn() || this.hasWitnesses();\n};\n\nPublicKeyHashInput.prototype.isValidSignature = function(transaction, signature, signingMethod) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  if (this.output.script.isWitnessPublicKeyHashOut() || this.output.script.isScriptHashOut()) {\n    var scriptCode = this.getScriptCode();\n    var satoshisBuffer = this.getSatoshisBuffer();\n    return SighashWitness.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      scriptCode,\n      satoshisBuffer,\n      signingMethod\n    );\n  } else {\n    return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.output.script,\n      signingMethod\n    );\n  }\n};\n\n\nPublicKeyHashInput.SCRIPT_MAX_SIZE = 73 + 34; // sigsize (1 + 72) + pubkey (1 + 33)\nPublicKeyHashInput.REDEEM_SCRIPT_SIZE = 22; // OP_0 (1) pubkeyhash (1 + 20)\n\nPublicKeyHashInput.prototype._estimateSize = function() {\n  var WITNESS_DISCOUNT = 4;\n  const witnessSize = PublicKeyHashInput.SCRIPT_MAX_SIZE / WITNESS_DISCOUNT;\n  if (this.output.script.isWitnessPublicKeyHashOut()) {\n    return witnessSize;\n  } else if (this.output.script.isScriptHashOut()) {\n    return witnessSize + PublicKeyHashInput.REDEEM_SCRIPT_SIZE;\n  } else {\n    return PublicKeyHashInput.SCRIPT_MAX_SIZE;\n  }\n};\n\nmodule.exports = PublicKeyHashInput;\n", "'use strict';\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Transaction = require('../transaction');\nvar Input = require('./input');\nvar Output = require('../output');\nvar $ = require('../../util/preconditions');\n\nvar Script = require('../../script');\nvar Signature = require('../../crypto/signature');\nvar Sighash = require('../sighash');\nvar PublicKey = require('../../publickey');\nvar BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigInput(input, pubkeys, threshold, signatures, opts) {\n  opts = opts || {};\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  if (opts.noSorting) {\n    this.publicKeys = pubkeys\n  } else  {\n    this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  }\n  $.checkState(Script.buildMultisigOut(this.publicKeys, threshold).equals(this.output.script),\n    'Provided public keys don\\'t match to the provided output script');\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigInput, Input);\n\nMultiSigInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData, signingMethod) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  signingMethod = signingMethod || 'ecdsa';\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: Sighash.sign(transaction, privateKey, sigtype, index, self.output.script, signingMethod),\n        sigtype: sigtype\n      }));\n    }\n  });\n\n  return results;\n};\n\nMultiSigInput.prototype.addSignature = function(transaction, signature, signingMethod) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()], \"Signature Undefined\"),\n    'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature, signingMethod), \"Invalid Signature\");\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigInput.prototype._updateScript = function() {\n  this.setScript(Script.buildMultisigIn(\n    this.publicKeys,\n    this.threshold,\n    this._createSignatures()\n  ));\n  return this;\n};\n\nMultiSigInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    // Future signature types may need refactor of toDER\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigInput.prototype.isValidSignature = function(transaction, signature, signingMethod) {\n  // FIXME: Refactor signature so this is not necessary\n  signature.signature.nhashtype = signature.sigtype;\n  return Sighash.verify(\n    transaction,\n    signature.signature,\n    signature.publicKey,\n    signature.inputIndex,\n    this.output.script,\n    signingMethod\n  );\n};\n\n/**\n *\n * @param {Buffer[]} signatures\n * @param {PublicKey[]} publicKeys\n * @param {Transaction} transaction\n * @param {Integer} inputIndex\n * @param {Input} input\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @returns {TransactionSignature[]}\n */\nMultiSigInput.normalizeSignatures = function(transaction, input, inputIndex, signatures, publicKeys, signingMethod) {\n  return publicKeys.map(function (pubKey) {\n    var signatureMatch = null;\n    signatures = signatures.filter(function (signatureBuffer) {\n      if (signatureMatch) {\n        return true;\n      }\n\n      var signature = new TransactionSignature({\n        signature: Signature.fromTxFormat(signatureBuffer),\n        publicKey: pubKey,\n        prevTxId: input.prevTxId,\n        outputIndex: input.outputIndex,\n        inputIndex: inputIndex,\n        sigtype: Signature.SIGHASH_ALL\n      });\n\n      signature.signature.nhashtype = signature.sigtype;\n      var isMatch = Sighash.verify(\n          transaction,\n          signature.signature,\n          signature.publicKey,\n          signature.inputIndex,\n          input.output.script,\n          signingMethod\n      );\n\n      if (isMatch) {\n        signatureMatch = signature;\n        return false;\n      }\n\n      return true;\n    });\n\n    return signatureMatch ? signatureMatch : null;\n  });\n};\n\nMultiSigInput.OPCODES_SIZE = 1; // 0\nMultiSigInput.SIGNATURE_SIZE = 73; // size (1) + DER (<=72)\n\nMultiSigInput.prototype._estimateSize = function() {\n  return MultiSigInput.OPCODES_SIZE +\n    this.threshold * MultiSigInput.SIGNATURE_SIZE;\n};\n\nmodule.exports = MultiSigInput;\n", "'use strict';\n\n/* jshint maxparams:5 */\n\nvar _ = require('lodash');\nvar inherits = require('inherits');\nvar Input = require('./input');\nvar Output = require('../output');\nvar $ = require('../../util/preconditions');\n\nvar Address = require('../../address');\nvar Script = require('../../script');\nvar Signature = require('../../crypto/signature');\nvar Sighash = require('../sighash');\nvar SighashWitness = require('../sighashwitness');\nvar BufferWriter = require('../../encoding/bufferwriter');\nvar BufferUtil = require('../../util/buffer');\nvar TransactionSignature = require('../signature');\n\n/**\n * @constructor\n */\nfunction MultiSigScriptHashInput(input, pubkeys, threshold, signatures, opts) {\n  /* jshint maxstatements:20 */\n  opts = opts || {};\n  Input.apply(this, arguments);\n  var self = this;\n  pubkeys = pubkeys || input.publicKeys;\n  threshold = threshold || input.threshold;\n  signatures = signatures || input.signatures;\n  if (opts.noSorting) {\n    this.publicKeys = pubkeys;\n  } else  {\n    this.publicKeys = _.sortBy(pubkeys, function(publicKey) { return publicKey.toString('hex'); });\n  }\n  this.redeemScript = Script.buildMultisigOut(this.publicKeys, threshold, opts);\n  var nested = Script.buildWitnessMultisigOutFromScript(this.redeemScript);\n  if (nested.equals(this.output.script)) {\n    this.nestedWitness = false;\n    this.type = Address.PayToWitnessScriptHash;\n  } else if (Script.buildScriptHashOut(nested).equals(this.output.script)) {\n    this.nestedWitness = true;\n    this.type = Address.PayToScriptHash;\n  } else if (Script.buildScriptHashOut(this.redeemScript).equals(this.output.script)) {\n    this.nestedWitness = false;\n    this.type = Address.PayToScriptHash;\n  } else {\n    throw new Error('Provided public keys don\\'t hash to the provided output');\n  }\n\n  if (this.nestedWitness) {\n    var scriptSig = new Script();\n    scriptSig.add(nested.toBuffer());\n    this.setScript(scriptSig);\n  }\n\n  this.publicKeyIndex = {};\n  _.each(this.publicKeys, function(publicKey, index) {\n    self.publicKeyIndex[publicKey.toString()] = index;\n  });\n  this.threshold = threshold;\n  // Empty array of signatures\n  this.signatures = signatures ? this._deserializeSignatures(signatures) : new Array(this.publicKeys.length);\n}\ninherits(MultiSigScriptHashInput, Input);\n\nMultiSigScriptHashInput.prototype.toObject = function() {\n  var obj = Input.prototype.toObject.apply(this, arguments);\n  obj.threshold = this.threshold;\n  obj.publicKeys = _.map(this.publicKeys, function(publicKey) { return publicKey.toString(); });\n  obj.signatures = this._serializeSignatures();\n  return obj;\n};\n\nMultiSigScriptHashInput.prototype._deserializeSignatures = function(signatures) {\n  return _.map(signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return new TransactionSignature(signature);\n  });\n};\n\nMultiSigScriptHashInput.prototype._serializeSignatures = function() {\n  return _.map(this.signatures, function(signature) {\n    if (!signature) {\n      return undefined;\n    }\n    return signature.toObject();\n  });\n};\n\nMultiSigScriptHashInput.prototype.getScriptCode = function() {\n  var writer = new BufferWriter();\n  if (!this.redeemScript.hasCodeseparators()) {\n    var redeemScriptBuffer = this.redeemScript.toBuffer();\n    writer.writeVarintNum(redeemScriptBuffer.length);\n    writer.write(redeemScriptBuffer);\n  } else {\n    throw new Error('@TODO');\n  }\n  return writer.toBuffer();\n};\n\nMultiSigScriptHashInput.prototype.getSighash = function(transaction, privateKey, index, sigtype) {\n  var self = this;\n  var hash;\n  if (self.nestedWitness || self.type === Address.PayToWitnessScriptHash) {\n    var scriptCode = self.getScriptCode();\n    var satoshisBuffer = self.getSatoshisBuffer();\n    hash = SighashWitness.sighash(transaction, sigtype, index, scriptCode, satoshisBuffer);\n  } else  {\n    hash = Sighash.sighash(transaction, sigtype, index, self.redeemScript);\n  }\n  return hash;\n};\n\nMultiSigScriptHashInput.prototype.getSignatures = function(transaction, privateKey, index, sigtype, hashData, signingMethod) {\n  $.checkState(this.output instanceof Output);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  signingMethod = signingMethod || 'ecdsa';\n\n  var self = this;\n  var results = [];\n  _.each(this.publicKeys, function(publicKey) {\n    if (publicKey.toString() === privateKey.publicKey.toString()) {\n      var signature;\n      if (self.nestedWitness || self.type === Address.PayToWitnessScriptHash) {\n        var scriptCode = self.getScriptCode();\n        var satoshisBuffer = self.getSatoshisBuffer();\n        signature = SighashWitness.sign(transaction, privateKey, sigtype, index, scriptCode, satoshisBuffer, signingMethod);\n      } else  {\n        signature = Sighash.sign(transaction, privateKey, sigtype, index, self.redeemScript, signingMethod);\n      }\n      results.push(new TransactionSignature({\n        publicKey: privateKey.publicKey,\n        prevTxId: self.prevTxId,\n        outputIndex: self.outputIndex,\n        inputIndex: index,\n        signature: signature,\n        sigtype: sigtype\n      }));\n    }\n  });\n  return results;\n};\n\nMultiSigScriptHashInput.prototype.addSignature = function(transaction, signature, signingMethod) {\n  $.checkState(!this.isFullySigned(), 'All needed signatures have already been added');\n  $.checkArgument(!_.isUndefined(this.publicKeyIndex[signature.publicKey.toString()]),\n                  'Signature has no matching public key');\n  $.checkState(this.isValidSignature(transaction, signature, signingMethod), \"Invalid Signature!\");\n  this.signatures[this.publicKeyIndex[signature.publicKey.toString()]] = signature;\n  this._updateScript();\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._updateScript = function() {\n  if (this.nestedWitness || this.type === Address.PayToWitnessScriptHash) {\n    var stack = [\n      Buffer.alloc(0),\n    ];\n    var signatures = this._createSignatures();\n    for (var i = 0; i < signatures.length; i++) {\n      stack.push(signatures[i]);\n    }\n    stack.push(this.redeemScript.toBuffer());\n    this.setWitnesses(stack);\n  } else {\n    var scriptSig = Script.buildP2SHMultisigIn(\n      this.publicKeys,\n      this.threshold,\n      this._createSignatures(),\n      { cachedMultisig: this.redeemScript }\n    );\n    this.setScript(scriptSig);\n  }\n  return this;\n};\n\nMultiSigScriptHashInput.prototype._createSignatures = function() {\n  return _.map(\n    _.filter(this.signatures, function(signature) { return !_.isUndefined(signature); }),\n    function(signature) {\n      return BufferUtil.concat([\n        signature.signature.toDER(),\n        BufferUtil.integerAsSingleByteBuffer(signature.sigtype)\n      ]);\n    }\n  );\n};\n\nMultiSigScriptHashInput.prototype.clearSignatures = function() {\n  this.signatures = new Array(this.publicKeys.length);\n  this._updateScript();\n};\n\nMultiSigScriptHashInput.prototype.isFullySigned = function() {\n  return this.countSignatures() === this.threshold;\n};\n\nMultiSigScriptHashInput.prototype.countMissingSignatures = function() {\n  return this.threshold - this.countSignatures();\n};\n\nMultiSigScriptHashInput.prototype.countSignatures = function() {\n  return _.reduce(this.signatures, function(sum, signature) {\n    return sum + (!!signature);\n  }, 0);\n};\n\nMultiSigScriptHashInput.prototype.publicKeysWithoutSignature = function() {\n  var self = this;\n  return _.filter(this.publicKeys, function(publicKey) {\n    return !(self.signatures[self.publicKeyIndex[publicKey.toString()]]);\n  });\n};\n\nMultiSigScriptHashInput.prototype.isValidSignature = function(transaction, signature, signingMethod) {\n  signingMethod = signingMethod || 'ecdsa';\n  if (this.nestedWitness || this.type === Address.PayToWitnessScriptHash) {\n    signature.signature.nhashtype = signature.sigtype;\n    var scriptCode = this.getScriptCode();\n    var satoshisBuffer = this.getSatoshisBuffer();\n    return SighashWitness.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      scriptCode,\n      satoshisBuffer,\n      signingMethod\n    );\n  } else {\n    // FIXME: Refactor signature so this is not necessary\n    signature.signature.nhashtype = signature.sigtype;\n    return Sighash.verify(\n      transaction,\n      signature.signature,\n      signature.publicKey,\n      signature.inputIndex,\n      this.redeemScript, \n      signingMethod\n    );\n  }\n};\n\nMultiSigScriptHashInput.OPCODES_SIZE = 7; // serialized size (<=3) + 0 .. N .. M OP_CHECKMULTISIG\nMultiSigScriptHashInput.SIGNATURE_SIZE = 74; // size (1) + DER (<=72) + sighash (1)\nMultiSigScriptHashInput.PUBKEY_SIZE = 34; // size (1) + DER (<=33)\nMultiSigScriptHashInput.REDEEM_SCRIPT_SIZE = 34; // OP_0 (1) + scriptHash (1 + 32)\n\nMultiSigScriptHashInput.prototype._estimateSize = function() {\n  var WITNESS_DISCOUNT = 4;\n  var witnessSize = MultiSigScriptHashInput.OPCODES_SIZE +\n    this.threshold * MultiSigScriptHashInput.SIGNATURE_SIZE +\n    this.publicKeys.length * MultiSigScriptHashInput.PUBKEY_SIZE;\n  if (this.type === Address.PayToWitnessScriptHash) {\n    return witnessSize / WITNESS_DISCOUNT;\n  } else if (this.nestedWitness) {\n    return witnessSize / WITNESS_DISCOUNT + MultiSigScriptHashInput.REDEEM_SCRIPT_SIZE;\n  } else {\n    return witnessSize;\n  }\n};\n\nmodule.exports = MultiSigScriptHashInput;\n", "module.exports = require('./input');\n\nmodule.exports.PublicKey = require('./publickey');\nmodule.exports.PublicKeyHash = require('./publickeyhash');\nmodule.exports.MultiSig = require('./multisig.js');\nmodule.exports.MultiSigScriptHash = require('./multisigscripthash.js');\n", "'use strict';\n\nvar buffer = require('buffer');\n\nvar Signature = require('../crypto/signature');\nvar Script = require('../script');\nvar Output = require('./output');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar BN = require('../crypto/bn');\nvar Hash = require('../crypto/hash');\nvar ECDSA = require('../crypto/ecdsa');\nvar $ = require('../util/preconditions');\nvar _ = require('lodash');\n\nvar SIGHASH_SINGLE_BUG = '0000000000000000000000000000000000000000000000000000000000000001';\nvar BITS_64_ON = 'ffffffffffffffff';\n\n/**\n * Returns a buffer of length 32 bytes with the hash that needs to be signed\n * for OP_CHECKSIG.\n *\n * @name Signing.sighash\n * @param {Transaction} transaction the transaction to sign\n * @param {number} sighashType the type of the hash\n * @param {number} inputNumber the input index for the signature\n * @param {Script} subscript the script that will be signed\n */\nvar sighash = function sighash(transaction, sighashType, inputNumber, subscript) {\n  var Transaction = require('./transaction');\n  var Input = require('./input');\n\n  var i;\n  // Copy transaction\n  var txcopy = Transaction.shallowCopy(transaction);\n\n  // Copy script\n  subscript = new Script(subscript);\n  subscript.removeCodeseparators();\n\n  for (i = 0; i < txcopy.inputs.length; i++) {\n    // Blank signatures for other inputs\n    txcopy.inputs[i] = new Input(txcopy.inputs[i]).setScript(Script.empty());\n  }\n\n  txcopy.inputs[inputNumber] = new Input(txcopy.inputs[inputNumber]).setScript(subscript);\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE ||\n    (sighashType & 31) === Signature.SIGHASH_SINGLE) {\n\n    // clear all sequenceNumbers\n    for (i = 0; i < txcopy.inputs.length; i++) {\n      if (i !== inputNumber) {\n        txcopy.inputs[i].sequenceNumber = 0;\n      }\n    }\n  }\n\n  if ((sighashType & 31) === Signature.SIGHASH_NONE) {\n    txcopy.outputs = [];\n\n  } else if ((sighashType & 31) === Signature.SIGHASH_SINGLE) {\n    // The SIGHASH_SINGLE bug.\n    // https://bitcointalk.org/index.php?topic=260595.0\n    if (inputNumber >= txcopy.outputs.length) {\n      return Buffer.from(SIGHASH_SINGLE_BUG, 'hex');\n    }\n\n    txcopy.outputs.length = inputNumber + 1;\n\n    for (i = 0; i < inputNumber; i++) {\n      txcopy.outputs[i] = new Output({\n        satoshis: BN.fromBuffer(Buffer.from(BITS_64_ON, 'hex')),\n        script: Script.empty()\n      });\n    }\n  }\n\n  if (sighashType & Signature.SIGHASH_ANYONECANPAY) {\n    txcopy.inputs = [txcopy.inputs[inputNumber]];\n  }\n\n  var buf = new BufferWriter()\n    .write(txcopy.toBuffer())\n    .writeInt32LE(sighashType)\n    .toBuffer();\n  var ret = Hash.sha256sha256(buf);\n  ret = new BufferReader(ret).readReverse();\n  return ret;\n};\n\n/**\n * Create a signature\n *\n * @name Signing.sign\n * @param {Transaction} transaction\n * @param {PrivateKey} privateKey\n * @param {number} sighash\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @return {Signature}\n */\nfunction sign(transaction, privateKey, sighashType, inputIndex, subscript, signingMethod) {\n  signingMethod = signingMethod || 'ecdsa';\n\n  var sig;\n  if(signingMethod === 'ecdsa') {\n    var hashbuf = sighash(transaction, sighashType, inputIndex, subscript);\n    sig = ECDSA.sign(hashbuf, privateKey, 'little').set({\n    nhashtype: sighashType\n  });\n  return sig;\n }\n  throw new Error(\"signingMethod not supported \", signingMethod);\n}\n\n/**\n * Verify a signature\n *\n * @name Signing.verify\n * @param {Transaction} transaction\n * @param {Signature} signature\n * @param {PublicKey} publicKey\n * @param {number} inputIndex\n * @param {Script} subscript\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr'\n * @return {boolean}\n */\nfunction verify(transaction, signature, publicKey, inputIndex, subscript, signingMethod) {\n  $.checkArgument(!_.isUndefined(transaction), \"Transaction Undefined\");\n  $.checkArgument(!_.isUndefined(signature) && !_.isUndefined(signature.nhashtype), \"Signature Undefined\");\n\n  signingMethod = signingMethod || 'ecdsa';\n  if (signingMethod === 'ecdsa') {\n    var hashbuf = sighash(transaction, signature.nhashtype, inputIndex, subscript);\n    return ECDSA.verify(hashbuf, signature, publicKey, 'little');\n  }\n  throw new Error(\"signingMethod not supported \", signingMethod);\n}\n\n/**\n * @namespace Signing\n */\nmodule.exports = {\n  sighash: sighash,\n  sign: sign,\n  verify: verify\n};\n", "'use strict';\n\nvar _ = require('lodash');\n\nvar errors = require('./errors');\nvar $ = require('./util/preconditions');\n\nvar UNITS = {\n  'BTC'      : [1e8, 8],\n  'mBTC'     : [1e5, 5],\n  'uBTC'     : [1e2, 2],\n  'bits'     : [1e2, 2],\n  'satoshis' : [1, 0]\n};\n\n/**\n * Utility for handling and converting bitcoins units. The supported units are\n * BTC, mBTC, bits (also named uBTC) and satoshis. A unit instance can be created with an\n * amount and a unit code, or alternatively using static methods like {fromBTC}.\n * It also allows to be created from a fiat amount and the exchange rate, or\n * alternatively using the {fromFiat} static method.\n * You can consult for different representation of a unit instance using it's\n * {to} method, the fixed unit methods like {toSatoshis} or alternatively using\n * the unit accessors. It also can be converted to a fiat amount by providing the\n * corresponding BTC/fiat exchange rate.\n *\n * @example\n * ```javascript\n * var sats = Unit.fromBTC(1.3).toSatoshis();\n * var mili = Unit.fromBits(1.3).to(Unit.mBTC);\n * var bits = Unit.fromFiat(1.3, 350).bits;\n * var btc = new Unit(1.3, Unit.bits).BTC;\n * ```\n *\n * @param {Number} amount - The amount to be represented\n * @param {String|Number} code - The unit of the amount or the exchange rate\n * @returns {Unit} A new instance of an Unit\n * @constructor\n */\nfunction Unit(amount, code) {\n  if (!(this instanceof Unit)) {\n    return new Unit(amount, code);\n  }\n\n  // convert fiat to BTC\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    amount = amount / code;\n    code = Unit.BTC;\n  }\n\n  this._value = this._from(amount, code);\n\n  var self = this;\n  var defineAccesor = function(key) {\n    Object.defineProperty(self, key, {\n      get: function() { return self.to(key); },\n      enumerable: true,\n    });\n  };\n\n  Object.keys(UNITS).forEach(defineAccesor);\n}\n\nObject.keys(UNITS).forEach(function(key) {\n  Unit[key] = key;\n});\n\n/**\n * Returns a Unit instance created from JSON string or object\n *\n * @param {String|Object} json - JSON with keys: amount and code\n * @returns {Unit} A Unit instance\n */\nUnit.fromObject = function fromObject(data){\n  $.checkArgument(_.isObject(data), 'Argument is expected to be an object');\n  return new Unit(data.amount, data.code);\n};\n\n/**\n * Returns a Unit instance created from an amount in BTC\n *\n * @param {Number} amount - The amount in BTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromBTC = function(amount) {\n  return new Unit(amount, Unit.BTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in mBTC\n *\n * @param {Number} amount - The amount in mBTC\n * @returns {Unit} A Unit instance\n */\nUnit.fromMillis = Unit.fromMilis = function(amount) {\n  return new Unit(amount, Unit.mBTC);\n};\n\n/**\n * Returns a Unit instance created from an amount in bits\n *\n * @param {Number} amount - The amount in bits\n * @returns {Unit} A Unit instance\n */\nUnit.fromMicros = Unit.fromBits = function(amount) {\n  return new Unit(amount, Unit.bits);\n};\n\n/**\n * Returns a Unit instance created from an amount in satoshis\n *\n * @param {Number} amount - The amount in satoshis\n * @returns {Unit} A Unit instance\n */\nUnit.fromSatoshis = function(amount) {\n  return new Unit(amount, Unit.satoshis);\n};\n\n/**\n * Returns a Unit instance created from a fiat amount and exchange rate.\n *\n * @param {Number} amount - The amount in fiat\n * @param {Number} rate - The exchange rate BTC/fiat\n * @returns {Unit} A Unit instance\n */\nUnit.fromFiat = function(amount, rate) {\n  return new Unit(amount, rate);\n};\n\nUnit.prototype._from = function(amount, code) {\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n  return parseInt((amount * UNITS[code][0]).toFixed());\n};\n\n/**\n * Returns the value represented in the specified unit\n *\n * @param {String|Number} code - The unit code or exchange rate\n * @returns {Number} The converted value\n */\nUnit.prototype.to = function(code) {\n  if (_.isNumber(code)) {\n    if (code <= 0) {\n      throw new errors.Unit.InvalidRate(code);\n    }\n    return parseFloat((this.BTC * code).toFixed(2));\n  }\n\n  if (!UNITS[code]) {\n    throw new errors.Unit.UnknownCode(code);\n  }\n\n  var value = this._value / UNITS[code][0];\n  return parseFloat(value.toFixed(UNITS[code][1]));\n};\n\n/**\n * Returns the value represented in BTC\n *\n * @returns {Number} The value converted to BTC\n */\nUnit.prototype.toBTC = function() {\n  return this.to(Unit.BTC);\n};\n\n/**\n * Returns the value represented in mBTC\n *\n * @returns {Number} The value converted to mBTC\n */\nUnit.prototype.toMillis = Unit.prototype.toMilis = function() {\n  return this.to(Unit.mBTC);\n};\n\n/**\n * Returns the value represented in bits\n *\n * @returns {Number} The value converted to bits\n */\nUnit.prototype.toMicros = Unit.prototype.toBits = function() {\n  return this.to(Unit.bits);\n};\n\n/**\n * Returns the value represented in satoshis\n *\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.toSatoshis = function() {\n  return this.to(Unit.satoshis);\n};\n\n/**\n * Returns the value represented in fiat\n *\n * @param {string} rate - The exchange rate between BTC/currency\n * @returns {Number} The value converted to satoshis\n */\nUnit.prototype.atRate = function(rate) {\n  return this.to(rate);\n};\n\n/**\n * Returns a the string representation of the value in satoshis\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.toString = function() {\n  return this.satoshis + ' satoshis';\n};\n\n/**\n * Returns a plain object representation of the Unit\n *\n * @returns {Object} An object with the keys: amount and code\n */\nUnit.prototype.toObject = Unit.prototype.toJSON = function toObject() {\n  return {\n    amount: this.BTC,\n    code: Unit.BTC\n  };\n};\n\n/**\n * Returns a string formatted for the console\n *\n * @returns {string} the value in satoshis\n */\nUnit.prototype.inspect = function() {\n  return '<Unit: ' + this.toString() + '>';\n};\n\nmodule.exports = Unit;\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar JSUtil = require('../util/js');\n\nvar Script = require('../script');\nvar Address = require('../address');\nvar Unit = require('../unit');\n\n/**\n * Represents an unspent output information: its script, associated amount and address,\n * transaction id and output index.\n *\n * @constructor\n * @param {object} data\n * @param {string} data.txid the previous transaction id\n * @param {string=} data.txId alias for `txid`\n * @param {number} data.vout the index in the transaction\n * @param {number=} data.outputIndex alias for `vout`\n * @param {string|Script} data.scriptPubKey the script that must be resolved to release the funds\n * @param {string|Script=} data.script alias for `scriptPubKey`\n * @param {number} data.amount amount of bitcoins associated\n * @param {number=} data.satoshis alias for `amount`, but expressed in satoshis (1 BTC = 1e8 satoshis)\n * @param {string|Address=} data.address the associated address to the script, if provided\n */\nfunction UnspentOutput(data) {\n  /* jshint maxcomplexity: 20 */\n  /* jshint maxstatements: 20 */\n  if (!(this instanceof UnspentOutput)) {\n    return new UnspentOutput(data);\n  }\n  $.checkArgument(_.isObject(data), 'Must provide an object from where to extract data');\n  var address = data.address ? new Address(data.address) : undefined;\n  var txId = data.txid ? data.txid : data.txId;\n  if (!txId || !JSUtil.isHexaString(txId) || txId.length > 64) {\n    // TODO: Use the errors library\n    throw new Error('Invalid TXID in object', data);\n  }\n  var outputIndex = _.isUndefined(data.vout) ? data.outputIndex : data.vout;\n  if (!_.isNumber(outputIndex)) {\n    throw new Error('Invalid outputIndex, received ' + outputIndex);\n  }\n  $.checkArgument(!_.isUndefined(data.scriptPubKey) || !_.isUndefined(data.script),\n                  'Must provide the scriptPubKey for that output!');\n  var script = new Script(data.scriptPubKey || data.script);\n  $.checkArgument(!_.isUndefined(data.amount) || !_.isUndefined(data.satoshis),\n                      'Must provide an amount for the output');\n  var amount = !_.isUndefined(data.amount) ? new Unit.fromBTC(data.amount).toSatoshis() : data.satoshis;\n  $.checkArgument(_.isNumber(amount), 'Amount must be a number');\n  JSUtil.defineImmutable(this, {\n    address: address,\n    txId: txId,\n    outputIndex: outputIndex,\n    script: script,\n    satoshis: amount\n  });\n}\n\n/**\n * Provide an informative output when displaying this object in the console\n * @returns string\n */\nUnspentOutput.prototype.inspect = function() {\n  return '<UnspentOutput: ' + this.txId + ':' + this.outputIndex +\n         ', satoshis: ' + this.satoshis + ', address: ' + this.address + '>';\n};\n\n/**\n * String representation: just \"txid:index\"\n * @returns string\n */\nUnspentOutput.prototype.toString = function() {\n  return this.txId + ':' + this.outputIndex;\n};\n\n/**\n * Deserialize an UnspentOutput from an object\n * @param {object|string} data\n * @return UnspentOutput\n */\nUnspentOutput.fromObject = function(data) {\n  return new UnspentOutput(data);\n};\n\n/**\n * Returns a plain object (no prototype or methods) with the associated info for this output\n * @return {object}\n */\nUnspentOutput.prototype.toObject = UnspentOutput.prototype.toJSON = function toObject() {\n  return {\n    address: this.address ? this.address.toString() : undefined,\n    txid: this.txId,\n    vout: this.outputIndex,\n    scriptPubKey: this.script.toBuffer().toString('hex'),\n    amount: Unit.fromSatoshis(this.satoshis).toBTC()\n  };\n};\n\nmodule.exports = UnspentOutput;\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\nvar buffer = require('buffer');\nvar compare = Buffer.compare || require('buffer-compare');\n\nvar errors = require('../errors');\nvar BufferUtil = require('../util/buffer');\nvar JSUtil = require('../util/js');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Hash = require('../crypto/hash');\nvar Signature = require('../crypto/signature');\nvar Sighash = require('./sighash');\nvar SighashWitness = require('./sighashwitness');\n\nvar Address = require('../address');\nvar UnspentOutput = require('./unspentoutput');\nvar Input = require('./input');\nvar PublicKeyHashInput = Input.PublicKeyHash;\nvar PublicKeyInput = Input.PublicKey;\nvar MultiSigScriptHashInput = Input.MultiSigScriptHash;\nvar MultiSigInput = Input.MultiSig;\nvar Output = require('./output');\nvar Script = require('../script');\nvar PrivateKey = require('../privatekey');\nvar BN = require('../crypto/bn');\n\n/**\n * Represents a transaction, a set of inputs and outputs to change ownership of tokens\n *\n * @param {*} serialized\n * @constructor\n */\nfunction Transaction(serialized, opts) {\n  if (!(this instanceof Transaction)) {\n    return new Transaction(serialized);\n  }\n  this.inputs = [];\n  this.outputs = [];\n  this._inputAmount = undefined;\n  this._outputAmount = undefined;\n\n  if (serialized) {\n    if (serialized instanceof Transaction) {\n      return Transaction.shallowCopy(serialized);\n    } else if (JSUtil.isHexa(serialized)) {\n      this.fromString(serialized);\n    } else if (BufferUtil.isBuffer(serialized)) {\n      this.fromBuffer(serialized);\n    } else if (_.isObject(serialized)) {\n      this.fromObject(serialized, opts);\n    } else {\n      throw new errors.InvalidArgument('Must provide an object or string to deserialize a transaction');\n    }\n  } else {\n    this._newTransaction();\n  }\n}\nvar CURRENT_VERSION = 2;\nvar DEFAULT_NLOCKTIME = 0;\nvar MAX_BLOCK_SIZE = 1000000;\n\n// Minimum amount for an output for it not to be considered a dust output\nTransaction.DUST_AMOUNT = 546;\n\n// Margin of error to allow fees in the vecinity of the expected value but doesn't allow a big difference\nTransaction.FEE_SECURITY_MARGIN = 150;\n\n// max amount of satoshis in circulation\nTransaction.MAX_MONEY = 21000000 * 1e8;\n\n// nlocktime limit to be considered block height rather than a timestamp\nTransaction.NLOCKTIME_BLOCKHEIGHT_LIMIT = 5e8;\n\n// Max value for an unsigned 32 bit value\nTransaction.NLOCKTIME_MAX_VALUE = 4294967295;\n\n// Value used for fee estimation (satoshis per kilobyte)\nTransaction.FEE_PER_KB = 100000;\n\n// Safe upper bound for change address script size in bytes\nTransaction.CHANGE_OUTPUT_MAX_SIZE = 20 + 4 + 34 + 4;\nTransaction.MAXIMUM_EXTRA_SIZE = 4 + 9 + 9 + 4;\n\n/* Constructors and Serialization */\n\n/**\n * Create a 'shallow' copy of the transaction, by serializing and deserializing\n * it dropping any additional information that inputs and outputs may have hold\n *\n * @param {Transaction} transaction\n * @return {Transaction}\n */\nTransaction.shallowCopy = function(transaction) {\n  var copy = new Transaction(transaction.toBuffer());\n  return copy;\n};\n\nvar hashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    this._hash = new BufferReader(this._getHash()).readReverse().toString('hex');\n    return this._hash;\n  }\n};\n\nvar witnessHashProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return new BufferReader(this._getWitnessHash()).readReverse().toString('hex');\n  }\n};\n\nObject.defineProperty(Transaction.prototype, 'witnessHash', witnessHashProperty);\nObject.defineProperty(Transaction.prototype, 'hash', hashProperty);\nObject.defineProperty(Transaction.prototype, 'id', hashProperty);\n\nvar ioProperty = {\n  configurable: false,\n  enumerable: true,\n  get: function() {\n    return this._getInputAmount();\n  }\n};\nObject.defineProperty(Transaction.prototype, 'inputAmount', ioProperty);\nioProperty.get = function() {\n  return this._getOutputAmount();\n};\nObject.defineProperty(Transaction.prototype, 'outputAmount', ioProperty);\n\n/**\n * Retrieve the little endian hash of the transaction (used for serialization)\n * @return {Buffer}\n */\nTransaction.prototype._getHash = function() {\n  return Hash.sha256sha256(this.toBuffer(true));\n};\n\n/**\n * Retrieve the little endian hash of the transaction including witness data\n * @return {Buffer}\n */\nTransaction.prototype._getWitnessHash = function() {\n  return Hash.sha256sha256(this.toBuffer(false));\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object|boolean=} unsafe if true, skip all tests. if it's an object,\n *   it's expected to contain a set of flags to skip certain tests:\n * * `disableAll`: disable all checks\n * * `disableSmallFees`: disable checking for fees that are too small\n * * `disableLargeFees`: disable checking for fees that are too large\n * * `disableIsFullySigned`: disable checking if all inputs are fully signed\n * * `disableDustOutputs`: disable checking if there are no outputs that are dust amounts\n * * `disableMoreOutputThanInput`: disable checking if the transaction spends more bitcoins than the sum of the input amounts\n * @return {string}\n */\nTransaction.prototype.serialize = function(unsafe) {\n  if (true === unsafe || unsafe && unsafe.disableAll) {\n    return this.uncheckedSerialize();\n  } else {\n    return this.checkedSerialize(unsafe);\n  }\n};\n\nTransaction.prototype.uncheckedSerialize = Transaction.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Retrieve a hexa string that can be used with bitcoind's CLI interface\n * (decoderawtransaction, sendrawtransaction)\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {string}\n */\nTransaction.prototype.checkedSerialize = function(opts) {\n  var serializationError = this.getSerializationError(opts);\n  if (serializationError) {\n    serializationError.message += ' - For more information please see: ' +\n      'https://bitcore.io/api/lib/transaction#serialization-checks';\n    throw serializationError;\n  }\n  return this.uncheckedSerialize();\n};\n\nTransaction.prototype.invalidSatoshis = function() {\n  var invalid = false;\n  for (var i = 0; i < this.outputs.length; i++) {\n    if (this.outputs[i].invalidSatoshis()) {\n      invalid = true;\n    }\n  }\n  return invalid;\n};\n\n/**\n * Retrieve a possible error that could appear when trying to serialize and\n * broadcast this transaction.\n *\n * @param {Object} opts allows to skip certain tests. {@see Transaction#serialize}\n * @return {bitcore.Error}\n */\nTransaction.prototype.getSerializationError = function(opts) {\n  opts = opts || {};\n\n  if (this.invalidSatoshis()) {\n    return new errors.Transaction.InvalidSatoshis();\n  }\n\n  var unspent = this._getUnspentValue();\n  var unspentError;\n  if (unspent < 0) {\n    if (!opts.disableMoreOutputThanInput) {\n      unspentError = new errors.Transaction.InvalidOutputAmountSum();\n    }\n  } else {\n    unspentError = this._hasFeeError(opts, unspent);\n  }\n\n  return unspentError ||\n    this._hasDustOutputs(opts) ||\n    this._isMissingSignatures(opts);\n};\n\nTransaction.prototype._hasFeeError = function(opts, unspent) {\n\n  if (!_.isUndefined(this._fee) && this._fee !== unspent) {\n    return new errors.Transaction.FeeError.Different(\n      'Unspent value is ' + unspent + ' but specified fee is ' + this._fee\n    );\n  }\n\n  if (!opts.disableLargeFees) {\n    var maximumFee = Math.floor(Transaction.FEE_SECURITY_MARGIN * this._estimateFee());\n    if (unspent > maximumFee) {\n      if (this._missingChange()) {\n        return new errors.Transaction.ChangeAddressMissing(\n          'Fee is too large and no change address was provided'\n        );\n      }\n      return new errors.Transaction.FeeError.TooLarge(\n        'expected less than ' + maximumFee + ' but got ' + unspent\n      );\n    }\n  }\n\n  if (!opts.disableSmallFees) {\n    var minimumFee = Math.ceil(this._estimateFee() / Transaction.FEE_SECURITY_MARGIN);\n    if (unspent < minimumFee) {\n      return new errors.Transaction.FeeError.TooSmall(\n        'expected more than ' + minimumFee + ' but got ' + unspent\n      );\n    }\n  }\n};\n\nTransaction.prototype._missingChange = function() {\n  return !this._changeScript;\n};\n\nTransaction.prototype._hasDustOutputs = function(opts) {\n  if (opts.disableDustOutputs) {\n    return;\n  }\n  var index, output;\n  for (index in this.outputs) {\n    output = this.outputs[index];\n    if (output.satoshis < Transaction.DUST_AMOUNT && !output.script.isDataOut()) {\n      return new errors.Transaction.DustOutputs();\n    }\n  }\n};\n\nTransaction.prototype._isMissingSignatures = function(opts) {\n  if (opts.disableIsFullySigned) {\n    return;\n  }\n  if (!this.isFullySigned()) {\n    return new errors.Transaction.MissingSignatures();\n  }\n};\n\nTransaction.prototype.inspect = function() {\n  return '<Transaction: ' + this.uncheckedSerialize() + '>';\n};\n\nTransaction.prototype.toBuffer = function(noWitness) {\n  var writer = new BufferWriter();\n  return this.toBufferWriter(writer, noWitness).toBuffer();\n};\n\nTransaction.prototype.hasWitnesses = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].hasWitnesses()) {\n      return true;\n    }\n  }\n  return false;\n};\n\nTransaction.prototype.toBufferWriter = function(writer, noWitness) {\n  writer.writeInt32LE(this.version);\n\n  var hasWitnesses = this.hasWitnesses();\n\n  if (hasWitnesses && !noWitness) {\n    writer.write(Buffer.from('0001', 'hex'));\n  }\n\n  writer.writeVarintNum(this.inputs.length);\n\n  _.each(this.inputs, function(input) {\n    input.toBufferWriter(writer);\n  });\n\n  writer.writeVarintNum(this.outputs.length);\n  _.each(this.outputs, function(output) {\n    output.toBufferWriter(writer);\n  });\n\n  if (hasWitnesses && !noWitness) {\n    _.each(this.inputs, function(input) {\n      var witnesses = input.getWitnesses();\n      writer.writeVarintNum(witnesses.length);\n      for (var j = 0; j < witnesses.length; j++) {\n        writer.writeVarintNum(witnesses[j].length);\n        writer.write(witnesses[j]);\n      }\n    });\n  }\n\n  writer.writeUInt32LE(this.nLockTime);\n  return writer;\n};\n\nTransaction.prototype.fromBuffer = function(buffer) {\n  var reader = new BufferReader(buffer);\n  return this.fromBufferReader(reader);\n};\n\nTransaction.prototype.fromBufferReader = function(reader) {\n  $.checkArgument(!reader.finished(), 'No transaction data received');\n\n  this.version = reader.readInt32LE();\n  var sizeTxIns = reader.readVarintNum();\n\n  // check for segwit\n  var hasWitnesses = false;\n  if (sizeTxIns === 0 && reader.buf[reader.pos] !== 0) {\n    reader.pos += 1;\n    hasWitnesses = true;\n    sizeTxIns = reader.readVarintNum();\n  }\n\n  for (var i = 0; i < sizeTxIns; i++) {\n    var input = Input.fromBufferReader(reader);\n    this.inputs.push(input);\n  }\n\n  var sizeTxOuts = reader.readVarintNum();\n  for (var j = 0; j < sizeTxOuts; j++) {\n    this.outputs.push(Output.fromBufferReader(reader));\n  }\n\n  if (hasWitnesses) {\n    for (var k = 0; k < sizeTxIns; k++) {\n      var itemCount = reader.readVarintNum();\n      var witnesses = [];\n      for (var l = 0; l < itemCount; l++) {\n        var size = reader.readVarintNum();\n        var item = reader.read(size);\n        witnesses.push(item);\n      }\n      this.inputs[k].setWitnesses(witnesses);\n    }\n  }\n\n  this.nLockTime = reader.readUInt32LE();\n  return this;\n};\n\n\nTransaction.prototype.toObject = Transaction.prototype.toJSON = function toObject() {\n  var inputs = [];\n  this.inputs.forEach(function(input) {\n    inputs.push(input.toObject());\n  });\n  var outputs = [];\n  this.outputs.forEach(function(output) {\n    outputs.push(output.toObject());\n  });\n  var obj = {\n    hash: this.hash,\n    version: this.version,\n    inputs: inputs,\n    outputs: outputs,\n    nLockTime: this.nLockTime\n  };\n  if (this._changeScript) {\n    obj.changeScript = this._changeScript.toString();\n  }\n  if (!_.isUndefined(this._changeIndex)) {\n    obj.changeIndex = this._changeIndex;\n  }\n  if (!_.isUndefined(this._fee)) {\n    obj.fee = this._fee;\n  }\n  return obj;\n};\n\nTransaction.prototype.fromObject = function fromObject(arg, opts) {\n  /* jshint maxstatements: 20 */\n  $.checkArgument(_.isObject(arg) || arg instanceof Transaction);\n  var self = this;\n  var transaction;\n  if (arg instanceof Transaction) {\n    transaction = transaction.toObject();\n  } else {\n    transaction = arg;\n  }\n  _.each(transaction.inputs, function(input) {\n    if (!input.output || !input.output.script) {\n      self.uncheckedAddInput(new Input(input));\n      return;\n    }\n    var script = new Script(input.output.script);\n    var txin;\n    if ((script.isScriptHashOut() || script.isWitnessScriptHashOut()) && input.publicKeys && input.threshold) {\n      txin = new Input.MultiSigScriptHash(\n        input, input.publicKeys, input.threshold, input.signatures, opts\n      );\n    } else if (script.isPublicKeyHashOut() || script.isWitnessPublicKeyHashOut() || script.isScriptHashOut()) {\n      txin = new Input.PublicKeyHash(input);\n    } else if (script.isPublicKeyOut()) {\n      txin = new Input.PublicKey(input);\n    } else {\n      throw new errors.Transaction.Input.UnsupportedScript(input.output.script);\n    }\n    self.addInput(txin);\n  });\n  _.each(transaction.outputs, function(output) {\n    self.addOutput(new Output(output));\n  });\n  if (transaction.changeIndex) {\n    this._changeIndex = transaction.changeIndex;\n  }\n  if (transaction.changeScript) {\n    this._changeScript = new Script(transaction.changeScript);\n  }\n  if (transaction.fee) {\n    this._fee = transaction.fee;\n  }\n  this.nLockTime = transaction.nLockTime;\n  this.version = transaction.version;\n  this._checkConsistency(arg);\n  return this;\n};\n\nTransaction.prototype._checkConsistency = function(arg) {\n  if (!_.isUndefined(this._changeIndex)) {\n    $.checkState(this._changeScript, 'Change script is expected.');\n    $.checkState(this.outputs[this._changeIndex], 'Change index points to undefined output.');\n    $.checkState(this.outputs[this._changeIndex].script.toString() ===\n      this._changeScript.toString(), 'Change output has an unexpected script.');\n  }\n  if (arg && arg.hash) {\n    $.checkState(arg.hash === this.hash, 'Hash in object does not match transaction hash.');\n  }\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired date(a\n * timestamp in seconds since UNIX epoch is also accepted)\n *\n * @param {Date | Number} time\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilDate = function(time) {\n  $.checkArgument(time);\n  if (_.isNumber(time) && time < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.LockTimeTooEarly();\n  }\n  if (_.isDate(time)) {\n    time = time.getTime() / 1000;\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n  this.nLockTime = time;\n  return this;\n};\n\n/**\n * Sets nLockTime so that transaction is not valid until the desired block\n * height.\n *\n * @param {Number} height\n * @return {Transaction} this\n */\nTransaction.prototype.lockUntilBlockHeight = function(height) {\n  $.checkArgument(_.isNumber(height));\n  if (height >= Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    throw new errors.Transaction.BlockHeightTooHigh();\n  }\n  if (height < 0) {\n    throw new errors.Transaction.NLockTimeOutOfRange();\n  }\n\n  for (var i = 0; i < this.inputs.length; i++) {\n    if (this.inputs[i].sequenceNumber === Input.DEFAULT_SEQNUMBER){\n      this.inputs[i].sequenceNumber = Input.DEFAULT_LOCKTIME_SEQNUMBER;\n    }\n  }\n\n\n  this.nLockTime = height;\n  return this;\n};\n\n/**\n *  Returns a semantic version of the transaction's nLockTime.\n *  @return {Number|Date}\n *  If nLockTime is 0, it returns null,\n *  if it is < 500000000, it returns a block height (number)\n *  else it returns a Date object.\n */\nTransaction.prototype.getLockTime = function() {\n  if (!this.nLockTime) {\n    return null;\n  }\n  if (this.nLockTime < Transaction.NLOCKTIME_BLOCKHEIGHT_LIMIT) {\n    return this.nLockTime;\n  }\n  return new Date(1000 * this.nLockTime);\n};\n\nTransaction.prototype.fromString = function(string) {\n  this.fromBuffer(buffer.Buffer.from(string, 'hex'));\n};\n\nTransaction.prototype._newTransaction = function() {\n  this.version = CURRENT_VERSION;\n  this.nLockTime = DEFAULT_NLOCKTIME;\n};\n\n/* Transaction creation interface */\n\n/**\n * @typedef {Object} Transaction~fromObject\n * @property {string} prevTxId\n * @property {number} outputIndex\n * @property {(Buffer|string|Script)} script\n * @property {number} satoshis\n */\n\n/**\n * Add an input to this transaction. This is a high level interface\n * to add an input, for more control, use @{link Transaction#addInput}.\n *\n * Can receive, as output information, the output of bitcoind's `listunspent` command,\n * and a slightly fancier format recognized by bitcore:\n *\n * ```\n * {\n *  address: 'mszYqVnqKoQx4jcTdJXxwKAissE3Jbrrc1',\n *  txId: 'a477af6b2667c29670467e4e0728b685ee07b240235771862318e29ddbe58458',\n *  outputIndex: 0,\n *  script: Script.empty(),\n *  satoshis: 1020000\n * }\n * ```\n * Where `address` can be either a string or a bitcore Address object. The\n * same is true for `script`, which can be a string or a bitcore Script.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @example\n * ```javascript\n * var transaction = new Transaction();\n *\n * // From a pay to public key hash output from bitcoind's listunspent\n * transaction.from({'txid': '0000...', vout: 0, amount: 0.1, scriptPubKey: 'OP_DUP ...'});\n *\n * // From a pay to public key hash output\n * transaction.from({'txId': '0000...', outputIndex: 0, satoshis: 1000, script: 'OP_DUP ...'});\n *\n * // From a multisig P2SH output\n * transaction.from({'txId': '0000...', inputIndex: 0, satoshis: 1000, script: '... OP_HASH'},\n *                  ['03000...', '02000...'], 2);\n * ```\n *\n * @param {(Array.<Transaction~fromObject>|Transaction~fromObject)} utxo\n * @param {Array=} pubkeys\n * @param {number=} threshold\n * @param {Object=} opts - Several options:\n *        - noSorting: defaults to false, if true and is multisig, don't\n *                      sort the given public keys before creating the script\n */\nTransaction.prototype.from = function(utxo, pubkeys, threshold, opts) {\n  if (_.isArray(utxo)) {\n    var self = this;\n    _.each(utxo, function(utxo) {\n      self.from(utxo, pubkeys, threshold, opts);\n    });\n    return this;\n  }\n  var exists = _.some(this.inputs, function(input) {\n    // TODO: Maybe prevTxId should be a string? Or defined as read only property?\n    return input.prevTxId.toString('hex') === utxo.txId && input.outputIndex === utxo.outputIndex;\n  });\n  if (exists) {\n    return this;\n  }\n  if (pubkeys && threshold) {\n    this._fromMultisigUtxo(utxo, pubkeys, threshold, opts);\n  } else {\n    this._fromNonP2SH(utxo);\n  }\n  return this;\n};\n\n/**\n * associateInputs - Update inputs with utxos, allowing you to specify value, and pubkey.\n * Populating these inputs allows for them to be signed with .sign(privKeys)\n *\n * @param {Array<Object>} utxos\n * @param {Array<string | PublicKey>} pubkeys\n * @param {number} threshold\n * @param {Object} opts\n * @returns {Array<number>}\n */\nTransaction.prototype.associateInputs = function(utxos, pubkeys, threshold, opts) {\n  let indexes = [];\n  for(let utxo of utxos) {\n    const index = this.inputs.findIndex(i => i.prevTxId.toString('hex') === utxo.txId && i.outputIndex === utxo.outputIndex);\n    indexes.push(index);\n    if(index >= 0) {\n      this.inputs[index] = this._getInputFrom(utxo, pubkeys, threshold, opts);\n    }\n  }\n  return indexes;\n}\n\n\nTransaction.prototype._selectInputType = function(utxo, pubkeys, threshold) {\n  var clazz;\n  utxo = new UnspentOutput(utxo);\n  if(pubkeys && threshold) {\n    if (utxo.script.isMultisigOut()) {\n      clazz = MultiSigInput;\n    } else if (utxo.script.isScriptHashOut() || utxo.script.isWitnessScriptHashOut()) {\n      clazz = MultiSigScriptHashInput;\n    }\n  } else if (utxo.script.isPublicKeyHashOut() || utxo.script.isWitnessPublicKeyHashOut() || utxo.script.isScriptHashOut()) {\n    clazz = PublicKeyHashInput;\n  } else if (utxo.script.isPublicKeyOut()) {\n    clazz = PublicKeyInput;\n  } else {\n    clazz = Input;\n  }\n  return clazz;\n}\n\n\nTransaction.prototype._getInputFrom = function(utxo, pubkeys, threshold, opts) {\n  utxo = new UnspentOutput(utxo);\n  const InputClass = this._selectInputType(utxo, pubkeys, threshold);\n  const input = {\n    output: new Output({\n      script: utxo.script,\n      satoshis: utxo.satoshis\n    }),\n    prevTxId: utxo.txId,\n    outputIndex: utxo.outputIndex,\n    sequenceNumber: utxo.sequenceNumber,\n    script: Script.empty()\n  };\n  let args = pubkeys && threshold ? [pubkeys, threshold, false, opts] : []\n  return new InputClass(input, ...args);\n}\n\nTransaction.prototype._fromNonP2SH = function(utxo) {\n  const input = this._getInputFrom(utxo);\n  this.addInput(input);\n};\n\nTransaction.prototype._fromMultisigUtxo = function(utxo, pubkeys, threshold, opts) {\n  $.checkArgument(threshold <= pubkeys.length,\n    'Number of required signatures must be greater than the number of public keys');\n  const input = this._getInputFrom(utxo, pubkeys, threshold, opts);\n  this.addInput(input);\n};\n\n/**\n * Add an input to this transaction. The input must be an instance of the `Input` class.\n * It should have information about the Output that it's spending, but if it's not already\n * set, two additional parameters, `outputScript` and `satoshis` can be provided.\n *\n * @param {Input} input\n * @param {String|Script} outputScript\n * @param {number} satoshis\n * @return Transaction this, for chaining\n */\nTransaction.prototype.addInput = function(input, outputScript, satoshis) {\n  $.checkArgumentType(input, Input, 'input');\n  if (!input.output && (_.isUndefined(outputScript) || _.isUndefined(satoshis))) {\n    throw new errors.Transaction.NeedMoreInfo('Need information about the UTXO script and satoshis');\n  }\n  if (!input.output && outputScript && !_.isUndefined(satoshis)) {\n    outputScript = outputScript instanceof Script ? outputScript : new Script(outputScript);\n    $.checkArgumentType(satoshis, 'number', 'satoshis');\n    input.output = new Output({\n      script: outputScript,\n      satoshis: satoshis\n    });\n  }\n  return this.uncheckedAddInput(input);\n};\n\n/**\n * Add an input to this transaction, without checking that the input has information about\n * the output that it's spending.\n *\n * @param {Input} input\n * @return Transaction this, for chaining\n */\nTransaction.prototype.uncheckedAddInput = function(input) {\n  $.checkArgumentType(input, Input, 'input');\n  this.inputs.push(input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Returns true if the transaction has enough info on all inputs to be correctly validated\n *\n * @return {boolean}\n */\nTransaction.prototype.hasAllUtxoInfo = function() {\n  return _.every(this.inputs.map(function(input) {\n    return !!input.output;\n  }));\n};\n\n/**\n * Manually set the fee for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.fee = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._fee = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per KB for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n *\n * @param {number} amount satoshis per KB to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerKb = function(amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerKb = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/**\n * Manually set the fee per Byte for this transaction. Beware that this resets all the signatures\n * for inputs (in further versions, SIGHASH_SINGLE or SIGHASH_NONE signatures will not\n * be reset).\n * fee per Byte will be ignored if fee per KB is set\n *\n * @param {number} amount satoshis per Byte to be sent\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.feePerByte = function (amount) {\n  $.checkArgument(_.isNumber(amount), 'amount must be a number');\n  this._feePerByte = amount;\n  this._updateChangeOutput();\n  return this;\n};\n\n/* Output management */\n\n/**\n * Set the change address for this transaction\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Address} address An address for change to be sent to.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.change = function(address) {\n  $.checkArgument(address, 'address is required');\n  this._changeScript = Script.fromAddress(address);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * @return {Output} change output, if it exists\n */\nTransaction.prototype.getChangeOutput = function() {\n  if (!_.isUndefined(this._changeIndex)) {\n    return this.outputs[this._changeIndex];\n  }\n  return null;\n};\n\n/**\n * @typedef {Object} Transaction~toObject\n * @property {(string|Address)} address\n * @property {number} satoshis\n */\n\n/**\n * Add an output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {(string|Address|Array.<Transaction~toObject>)} address\n * @param {number} amount in satoshis\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.to = function(address, amount) {\n  if (_.isArray(address)) {\n    var self = this;\n    _.each(address, function(to) {\n      self.to(to.address, to.satoshis);\n    });\n    return this;\n  }\n\n  $.checkArgument(\n    JSUtil.isNaturalNumber(amount),\n    'Amount is expected to be a positive integer'\n  );\n  this.addOutput(new Output({\n    script: Script(new Address(address)),\n    satoshis: amount\n  }));\n  return this;\n};\n\n/**\n * Add an OP_RETURN output to the transaction.\n *\n * Beware that this resets all the signatures for inputs (in further versions,\n * SIGHASH_SINGLE or SIGHASH_NONE signatures will not be reset).\n *\n * @param {Buffer|string} value the data to be stored in the OP_RETURN output.\n *    In case of a string, the UTF-8 representation will be stored\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addData = function(value) {\n  this.addOutput(new Output({\n    script: Script.buildDataOut(value),\n    satoshis: 0\n  }));\n  return this;\n};\n\n\n/**\n * Add an output to the transaction.\n *\n * @param {Output} output the output to add.\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.addOutput = function(output) {\n  $.checkArgumentType(output, Output, 'output');\n  this._addOutput(output);\n  this._updateChangeOutput();\n  return this;\n};\n\n\n/**\n * Remove all outputs from the transaction.\n *\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.clearOutputs = function() {\n  this.outputs = [];\n  this._clearSignatures();\n  this._outputAmount = undefined;\n  this._changeIndex = undefined;\n  this._updateChangeOutput();\n  return this;\n};\n\n\nTransaction.prototype._addOutput = function(output) {\n  this.outputs.push(output);\n  this._outputAmount = undefined;\n};\n\n\n/**\n * Calculates or gets the total output amount in satoshis\n *\n * @return {Number} the transaction total output amount\n */\nTransaction.prototype._getOutputAmount = function() {\n  if (_.isUndefined(this._outputAmount)) {\n    var self = this;\n    this._outputAmount = 0;\n    _.each(this.outputs, function(output) {\n      self._outputAmount += output.satoshis;\n    });\n  }\n  return this._outputAmount;\n};\n\n\n/**\n * Calculates or gets the total input amount in satoshis\n *\n * @return {Number} the transaction total input amount\n */\nTransaction.prototype._getInputAmount = function() {\n  if (_.isUndefined(this._inputAmount)) {\n    this._inputAmount = _.sumBy(this.inputs, function(input) {\n      if (_.isUndefined(input.output)) {\n        throw new errors.Transaction.Input.MissingPreviousOutput();\n      }\n      return input.output.satoshis;\n    });\n  }\n  return this._inputAmount;\n};\n\nTransaction.prototype._updateChangeOutput = function() {\n  if (!this._changeScript) {\n    return;\n  }\n  this._clearSignatures();\n  if (!_.isUndefined(this._changeIndex)) {\n    this._removeOutput(this._changeIndex);\n  }\n  var available = this._getUnspentValue();\n  var fee = this.getFee();\n  var changeAmount = available - fee;\n  if (changeAmount > 0) {\n    this._changeIndex = this.outputs.length;\n    this._addOutput(new Output({\n      script: this._changeScript,\n      satoshis: changeAmount\n    }));\n  } else {\n    this._changeIndex = undefined;\n  }\n};\n/**\n * Calculates the fee of the transaction.\n *\n * If there's a fixed fee set, return that.\n *\n * If there is no change output set, the fee is the\n * total value of the outputs minus inputs. Note that\n * a serialized transaction only specifies the value\n * of its outputs. (The value of inputs are recorded\n * in the previous transaction outputs being spent.)\n * This method therefore raises a \"MissingPreviousOutput\"\n * error when called on a serialized transaction.\n *\n * If there's no fee set and no change address,\n * estimate the fee based on size.\n *\n * @return {Number} fee of this transaction in satoshis\n */\nTransaction.prototype.getFee = function() {\n  if (this.isCoinbase()) {\n    return 0;\n  }\n  if (!_.isUndefined(this._fee)) {\n    return this._fee;\n  }\n  // if no change output is set, fees should equal all the unspent amount\n  if (!this._changeScript) {\n    return this._getUnspentValue();\n  }\n  return this._estimateFee();\n};\n\n/**\n * Estimates fee from serialized transaction size in bytes.\n */\nTransaction.prototype._estimateFee = function () {\n  var estimatedSize = this._estimateSize();\n  var available = this._getUnspentValue();\n  var feeRate = this._feePerByte || (this._feePerKb || Transaction.FEE_PER_KB) / 1000;\n  function getFee(size) {\n    return size * feeRate;\n  }\n  var fee = Math.ceil(getFee(estimatedSize));\n  var feeWithChange = Math.ceil(getFee(estimatedSize) + getFee(Transaction.CHANGE_OUTPUT_MAX_SIZE));\n  if (!this._changeScript || available <= feeWithChange) {\n    return fee;\n  }\n  return feeWithChange;\n};\n\nTransaction.prototype._getUnspentValue = function() {\n  return this._getInputAmount() - this._getOutputAmount();\n};\n\nTransaction.prototype._clearSignatures = function() {\n  _.each(this.inputs, function(input) {\n    input.clearSignatures();\n  });\n};\n\nTransaction.prototype._estimateSize = function() {\n  var result = Transaction.MAXIMUM_EXTRA_SIZE;\n  _.each(this.inputs, function(input) {\n    result += 32 + 4;  // prevout size:w\n    result += input._estimateSize();\n  });\n  _.each(this.outputs, function(output) {\n    result += output.script.toBuffer().length + 9;\n  });\n  return Math.ceil(result);\n};\n\nTransaction.prototype._removeOutput = function(index) {\n  var output = this.outputs[index];\n  this.outputs = _.without(this.outputs, output);\n  this._outputAmount = undefined;\n};\n\nTransaction.prototype.removeOutput = function(index) {\n  this._removeOutput(index);\n  this._updateChangeOutput();\n};\n\n/**\n * Sort a transaction's inputs and outputs according to BIP69\n *\n * @see {https://github.com/bitcoin/bips/blob/master/bip-0069.mediawiki}\n * @return {Transaction} this\n */\nTransaction.prototype.sort = function() {\n  this.sortInputs(function(inputs) {\n    var copy = Array.prototype.concat.apply([], inputs);\n    let i = 0;\n    copy.forEach((x) => { x.i = i++});\n    copy.sort(function(first, second) {\n     return compare(first.prevTxId, second.prevTxId)\n        || first.outputIndex - second.outputIndex\n        || first.i - second.i;  // to ensure stable sort\n    });\n    return copy;\n  });\n  this.sortOutputs(function(outputs) {\n    var copy = Array.prototype.concat.apply([], outputs);\n    let i = 0;\n    copy.forEach((x) => { x.i = i++});\n    copy.sort(function(first, second) {\n      return first.satoshis - second.satoshis\n        || compare(first.script.toBuffer(), second.script.toBuffer())\n        || first.i - second.i;  // to ensure stable sort\n    });\n    return copy;\n  });\n  return this;\n};\n\n/**\n * Randomize this transaction's outputs ordering. The shuffling algorithm is a\n * version of the Fisher-Yates shuffle, provided by lodash's _.shuffle().\n *\n * @return {Transaction} this\n */\nTransaction.prototype.shuffleOutputs = function() {\n  return this.sortOutputs(_.shuffle);\n};\n\n/**\n * Sort this transaction's outputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order. The argument function MUST NOT modify the order\n * of the original array\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortOutputs = function(sortingFunction) {\n  var outs = sortingFunction(this.outputs);\n  return this._newOutputOrder(outs);\n};\n\n/**\n * Sort this transaction's inputs, according to a given sorting function that\n * takes an array as argument and returns a new array, with the same elements\n * but with a different order.\n *\n * @param {Function} sortingFunction\n * @return {Transaction} this\n */\nTransaction.prototype.sortInputs = function(sortingFunction) {\n  this.inputs = sortingFunction(this.inputs);\n  this._clearSignatures();\n  return this;\n};\n\nTransaction.prototype._newOutputOrder = function(newOutputs) {\n  var isInvalidSorting = (this.outputs.length !== newOutputs.length ||\n                          _.difference(this.outputs, newOutputs).length !== 0);\n  if (isInvalidSorting) {\n    throw new errors.Transaction.InvalidSorting();\n  }\n\n  if (!_.isUndefined(this._changeIndex)) {\n    var changeOutput = this.outputs[this._changeIndex];\n    this._changeIndex = _.findIndex(newOutputs, changeOutput);\n  }\n\n  this.outputs = newOutputs;\n  return this;\n};\n\nTransaction.prototype.removeInput = function(txId, outputIndex) {\n  var index;\n  if (!outputIndex && _.isNumber(txId)) {\n    index = txId;\n  } else {\n    index = _.findIndex(this.inputs, function(input) {\n      return input.prevTxId.toString('hex') === txId && input.outputIndex === outputIndex;\n    });\n  }\n  if (index < 0 || index >= this.inputs.length) {\n    throw new errors.Transaction.InvalidIndex(index, this.inputs.length);\n  }\n  var input = this.inputs[index];\n  this.inputs = _.without(this.inputs, input);\n  this._inputAmount = undefined;\n  this._updateChangeOutput();\n};\n\n/* Signature handling */\n\n/**\n * Sign the transaction using one or more private keys.\n *\n * It tries to sign each input, verifying that the signature will be valid\n * (matches a public key).\n *\n * @param {Array|String|PrivateKey} privateKey\n * @param {number} sigtype\n * @param {String} signingMethod - method used to sign - 'ecdsa' or 'schnorr'\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.sign = function(privateKey, sigtype, signingMethod) {\n  $.checkState(this.hasAllUtxoInfo(), 'Not all utxo information is available to sign the transaction.');\n  var self = this;\n  if (_.isArray(privateKey)) {\n    _.each(privateKey, function(privateKey) {\n      self.sign(privateKey, sigtype, signingMethod);\n    });\n    return this;\n  }\n  _.each(this.getSignatures(privateKey, sigtype, signingMethod), function(signature) {\n    self.applySignature(signature, signingMethod);\n  });\n  return this;\n};\n\nTransaction.prototype.getSignatures = function(privKey, sigtype, signingMethod) {\n  privKey = new PrivateKey(privKey);\n  sigtype = sigtype || Signature.SIGHASH_ALL;\n  var transaction = this;\n  var results = [];\n  var hashData = Hash.sha256ripemd160(privKey.publicKey.toBuffer());\n  _.each(this.inputs, function forEachInput(input, index) {\n    _.each(input.getSignatures(transaction, privKey, index, sigtype, hashData, signingMethod), function(signature) {\n      results.push(signature);\n    });\n  });\n  return results;\n};\n\n/**\n * Add a signature to the transaction\n *\n * @param {Object} signature\n * @param {number} signature.inputIndex\n * @param {number} signature.sigtype\n * @param {PublicKey} signature.publicKey\n * @param {Signature} signature.signature\n * @param {String} signingMethod - 'ecdsa' to sign transaction\n * @return {Transaction} this, for chaining\n */\nTransaction.prototype.applySignature = function(signature, signingMethod) {\n  this.inputs[signature.inputIndex].addSignature(this, signature, signingMethod);\n  return this;\n};\n\nTransaction.prototype.isFullySigned = function() {\n  _.each(this.inputs, function(input) {\n    if (input.isFullySigned === Input.prototype.isFullySigned) {\n      throw new errors.Transaction.UnableToVerifySignature(\n        'Unrecognized script kind, or not enough information to execute script.' +\n        'This usually happens when creating a transaction from a serialized transaction'\n      );\n    }\n  });\n  return _.every(_.map(this.inputs, function(input) {\n    return input.isFullySigned();\n  }));\n};\n\nTransaction.prototype.isValidSignature = function(signature, signingMethod) {\n  var self = this;\n  if (this.inputs[signature.inputIndex].isValidSignature === Input.prototype.isValidSignature) {\n    throw new errors.Transaction.UnableToVerifySignature(\n      'Unrecognized script kind, or not enough information to execute script.' +\n      'This usually happens when creating a transaction from a serialized transaction'\n    );\n  }\n  return this.inputs[signature.inputIndex].isValidSignature(self, signature, signingMethod);\n};\n\n/**\n * @param {String} signingMethod method used to sign - 'ecdsa' or 'schnorr' (future signing method)\n * @returns {bool} whether the signature is valid for this transaction input\n */\nTransaction.prototype.verifySignature = function(sig, pubkey, nin, subscript, sigversion, satoshis, signingMethod) {\n\n  if (_.isUndefined(sigversion)) {\n    sigversion = 0;\n  }\n\n  if (sigversion === 1) {\n    var subscriptBuffer = subscript.toBuffer();\n    var scriptCodeWriter = new BufferWriter();\n    scriptCodeWriter.writeVarintNum(subscriptBuffer.length);\n    scriptCodeWriter.write(subscriptBuffer);\n\n    var satoshisBuffer;\n    if (satoshis) {\n      $.checkState(JSUtil.isNaturalNumber(satoshis));\n      satoshisBuffer = new BufferWriter().writeUInt64LEBN(new BN(satoshis)).toBuffer();\n    } else {\n      satoshisBuffer = this.inputs[nin].getSatoshisBuffer();\n    }\n    var verified = SighashWitness.verify(\n      this,\n      sig,\n      pubkey,\n      nin,\n      scriptCodeWriter.toBuffer(),\n      satoshisBuffer,\n      signingMethod\n    );\n    return verified;\n  }\n\n  return Sighash.verify(this, sig, pubkey, nin, subscript, signingMethod);\n};\n\n/**\n * Check that a transaction passes basic sanity tests. If not, return a string\n * describing the error. This function contains the same logic as\n * CheckTransaction in bitcoin core.\n */\nTransaction.prototype.verify = function() {\n  // Basic checks that don't depend on any context\n  if (this.inputs.length === 0) {\n    return 'transaction txins empty';\n  }\n\n  if (this.outputs.length === 0) {\n    return 'transaction txouts empty';\n  }\n\n  // Check for negative or overflow output values\n  var valueoutbn = new BN(0);\n  for (var i = 0; i < this.outputs.length; i++) {\n    var txout = this.outputs[i];\n\n    if (txout.invalidSatoshis()) {\n      return 'transaction txout ' + i + ' satoshis is invalid';\n    }\n    if (txout._satoshisBN.gt(new BN(Transaction.MAX_MONEY, 10))) {\n      return 'transaction txout ' + i + ' greater than MAX_MONEY';\n    }\n    valueoutbn = valueoutbn.add(txout._satoshisBN);\n    if (valueoutbn.gt(new BN(Transaction.MAX_MONEY))) {\n      return 'transaction txout ' + i + ' total output greater than MAX_MONEY';\n    }\n  }\n\n  // Size limits\n  if (this.toBuffer().length > MAX_BLOCK_SIZE) {\n    return 'transaction over the maximum block size';\n  }\n\n  // Check for duplicate inputs\n  var txinmap = {};\n  for (i = 0; i < this.inputs.length; i++) {\n    var txin = this.inputs[i];\n\n    var inputid = txin.prevTxId + ':' + txin.outputIndex;\n    if (!_.isUndefined(txinmap[inputid])) {\n      return 'transaction input ' + i + ' duplicate input';\n    }\n    txinmap[inputid] = true;\n  }\n\n  var isCoinbase = this.isCoinbase();\n  if (isCoinbase) {\n    var buf = this.inputs[0]._scriptBuffer;\n    if (buf.length < 2 || buf.length > 100) {\n      return 'coinbase transaction script size invalid';\n    }\n  } else {\n    for (i = 0; i < this.inputs.length; i++) {\n      if (this.inputs[i].isNull()) {\n        return 'transaction input ' + i + ' has null input';\n      }\n    }\n  }\n  return true;\n};\n\n/**\n * Analogous to bitcoind's IsCoinBase function in transaction.h\n */\nTransaction.prototype.isCoinbase = function() {\n  return (this.inputs.length === 1 && this.inputs[0].isNull());\n};\n\n/**\n * Determines if this transaction can be replaced in the mempool with another\n * transaction that provides a sufficiently higher fee (RBF).\n */\nTransaction.prototype.isRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber < Input.MAXINT - 1) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Enable this transaction to be replaced in the mempool (RBF) if a transaction\n * includes a sufficiently higher fee. It will set the sequenceNumber to\n * DEFAULT_RBF_SEQNUMBER for all inputs if the sequence number does not\n * already enable RBF.\n */\nTransaction.prototype.enableRBF = function() {\n  for (var i = 0; i < this.inputs.length; i++) {\n    var input = this.inputs[i];\n    if (input.sequenceNumber >= Input.MAXINT - 1) {\n      input.sequenceNumber = Input.DEFAULT_RBF_SEQNUMBER;\n    }\n  }\n  return this;\n};\n\nTransaction.prototype.setVersion = function(version) {\n  $.checkArgument(\n    JSUtil.isNaturalNumber(version) && version <= CURRENT_VERSION,\n    'Wrong version number');\n  this.version = version;\n  return this;\n};\n\n\n\nmodule.exports = Transaction;\n", "module.exports = require('./transaction');\n\nmodule.exports.Input = require('./input');\nmodule.exports.Output = require('./output');\nmodule.exports.UnspentOutput = require('./unspentoutput');\nmodule.exports.Signature = require('./signature');\nmodule.exports.Sighash = require('./sighash');\nmodule.exports.SighashWitness = require('./sighashwitness');\n", "'use strict';\n\nvar _ = require('lodash');\n\nvar Script = require('./script');\nvar Opcode = require('../opcode');\nvar BN = require('../crypto/bn');\nvar Hash = require('../crypto/hash');\nvar Signature = require('../crypto/signature');\nvar PublicKey = require('../publickey');\n\n/**\n * Bitcoin transactions contain scripts. Each input has a script called the\n * scriptSig, and each output has a script called the scriptPubkey. To validate\n * an input, the input's script is concatenated with the referenced output script,\n * and the result is executed. If at the end of execution the stack contains a\n * \"true\" value, then the transaction is valid.\n *\n * The primary way to use this class is via the verify function.\n * e.g., Interpreter().verify( ... );\n */\nvar Interpreter = function Interpreter(obj) {\n  if (!(this instanceof Interpreter)) {\n    return new Interpreter(obj);\n  }\n  if (obj) {\n    this.initialize();\n    this.set(obj);\n  } else {\n    this.initialize();\n  }\n};\n\nInterpreter.prototype.verifyWitnessProgram = function(version, program, witness, satoshis, flags) {\n\n  var scriptPubKey = new Script();\n  var stack = [];\n\n  if (version === 0) {\n    if (program.length === 32) {\n      if (witness.length === 0) {\n        this.errstr = 'SCRIPT_ERR_WITNESS_PROGRAM_WITNESS_EMPTY';\n        return false;\n      }\n\n      var scriptPubKeyBuffer = witness[witness.length - 1];\n      scriptPubKey = new Script(scriptPubKeyBuffer);\n      var hash = Hash.sha256(scriptPubKeyBuffer);\n      if (hash.toString('hex') !== program.toString('hex')) {\n        this.errstr = 'SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH';\n        return false;\n      }\n\n      stack = witness.slice(0, -1);\n    } else if (program.length === 20) {\n      if (witness.length !== 2) {\n        this.errstr = 'SCRIPT_ERR_WITNESS_PROGRAM_MISMATCH';\n        return false;\n      }\n\n      scriptPubKey.add(Opcode.OP_DUP);\n      scriptPubKey.add(Opcode.OP_HASH160);\n      scriptPubKey.add(program);\n      scriptPubKey.add(Opcode.OP_EQUALVERIFY);\n      scriptPubKey.add(Opcode.OP_CHECKSIG);\n\n      stack = witness;\n\n    } else {\n      this.errstr = 'SCRIPT_ERR_WITNESS_PROGRAM_WRONG_LENGTH';\n      return false;\n    }\n  } else if ((flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM)) {\n    this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM';\n    return false;\n  } else {\n    return true;\n  }\n\n  this.initialize();\n\n  this.set({\n    script: scriptPubKey,\n    stack: stack,\n    sigversion: 1,\n    satoshis: satoshis,\n    flags: flags,\n  });\n\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length !== 1) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  return true;\n};\n\n\n\n/**\n * Verifies a Script by executing it and returns true if it is valid.\n * This function needs to be provided with the scriptSig and the scriptPubkey\n * separately.\n * @param {Script} scriptSig - the script's first part (corresponding to the tx input)\n * @param {Script} scriptPubkey - the script's last part (corresponding to the tx output)\n * @param {Transaction=} tx - the Transaction containing the scriptSig in one input (used\n *    to check signature validity for some opcodes like OP_CHECKSIG)\n * @param {number} nin - index of the transaction input containing the scriptSig verified.\n * @param {number} flags - evaluation flags. See Interpreter.SCRIPT_* constants\n * @param {number} witness - array of witness data\n * @param {number} satoshis - number of satoshis created by this output\n *\n * Translated from bitcoind's VerifyScript\n */\nInterpreter.prototype.verify = function(scriptSig, scriptPubkey, tx, nin, flags, witness, satoshis) {\n\n  var Transaction = require('../transaction');\n  if (_.isUndefined(tx)) {\n    tx = new Transaction();\n  }\n  if (_.isUndefined(nin)) {\n    nin = 0;\n  }\n  if (_.isUndefined(flags)) {\n    flags = 0;\n  }\n  if (_.isUndefined(witness)) {\n    witness = null;\n  }\n  if (_.isUndefined(satoshis)) {\n    satoshis = 0;\n  }\n\n  this.set({\n    script: scriptSig,\n    tx: tx,\n    nin: nin,\n    sigversion: 0,\n    satoshis: 0,\n    flags: flags\n  });\n  var stackCopy;\n\n  if ((flags & Interpreter.SCRIPT_VERIFY_SIGPUSHONLY) !== 0 && !scriptSig.isPushOnly()) {\n    this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n    return false;\n  }\n\n  // evaluate scriptSig\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (flags & Interpreter.SCRIPT_VERIFY_P2SH) {\n    stackCopy = this.stack.slice();\n  }\n\n  var stack = this.stack;\n  this.initialize();\n  this.set({\n    script: scriptPubkey,\n    stack: stack,\n    tx: tx,\n    nin: nin,\n    flags: flags\n  });\n\n  // evaluate scriptPubkey\n  if (!this.evaluate()) {\n    return false;\n  }\n\n  if (this.stack.length === 0) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_RESULT';\n    return false;\n  }\n\n  var buf = this.stack[this.stack.length - 1];\n  if (!Interpreter.castToBool(buf)) {\n    this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_STACK';\n    return false;\n  }\n\n  var hadWitness = false;\n  if ((flags & Interpreter.SCRIPT_VERIFY_WITNESS)) {\n    var witnessValues = {};\n    if (scriptPubkey.isWitnessProgram(witnessValues)) {\n      hadWitness = true;\n      if (scriptSig.toBuffer().length !== 0) {\n        return false;\n      }\n      if (!this.verifyWitnessProgram(witnessValues.version, witnessValues.program, witness, satoshis, this.flags)) {\n        return false;\n      }\n    }\n  }\n\n  // Additional validation for spend-to-script-hash transactions:\n  if ((flags & Interpreter.SCRIPT_VERIFY_P2SH) && scriptPubkey.isScriptHashOut()) {\n    // scriptSig must be literals-only or validation fails\n    if (!scriptSig.isPushOnly()) {\n      this.errstr = 'SCRIPT_ERR_SIG_PUSHONLY';\n      return false;\n    }\n\n    // stackCopy cannot be empty here, because if it was the\n    // P2SH  HASH <> EQUAL  scriptPubKey would be evaluated with\n    // an empty stack and the EvalScript above would return false.\n    if (stackCopy.length === 0) {\n      throw new Error('internal error - stack copy empty');\n    }\n\n    var redeemScriptSerialized = stackCopy[stackCopy.length - 1];\n    var redeemScript = Script.fromBuffer(redeemScriptSerialized);\n    stackCopy.pop();\n\n    this.initialize();\n    this.set({\n      script: redeemScript,\n      stack: stackCopy,\n      tx: tx,\n      nin: nin,\n      flags: flags\n    });\n\n    // evaluate redeemScript\n    if (!this.evaluate()) {\n      return false;\n    }\n\n    if (stackCopy.length === 0) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_NO_P2SH_STACK';\n      return false;\n    }\n\n    if (!Interpreter.castToBool(stackCopy[stackCopy.length - 1])) {\n      this.errstr = 'SCRIPT_ERR_EVAL_FALSE_IN_P2SH_STACK';\n      return false;\n    }\n    if ((flags & Interpreter.SCRIPT_VERIFY_WITNESS)) {\n      var p2shWitnessValues = {};\n      if (redeemScript.isWitnessProgram(p2shWitnessValues)) {\n        hadWitness = true;\n        var redeemScriptPush = new Script();\n        redeemScriptPush.add(redeemScript.toBuffer());\n        if (scriptSig.toHex() !== redeemScriptPush.toHex()) {\n          this.errstr = 'SCRIPT_ERR_WITNESS_MALLEATED_P2SH';\n          return false;\n        }\n\n        if (!this.verifyWitnessProgram(p2shWitnessValues.version, p2shWitnessValues.program, witness, satoshis, this.flags)) {\n          return false;\n        }\n        // Bypass the cleanstack check at the end. The actual stack is obviously not clean\n        // for witness programs.\n        stack = [stack[0]];\n      }\n    }\n  }\n\n  // The CLEANSTACK check is only performed after potential P2SH evaluation,\n  // as the non-P2SH evaluation of a P2SH script will obviously not result in\n  // a clean stack (the P2SH inputs remain). The same holds for witness\n  // evaluation.\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_CLEANSTACK) != 0) {\n      // Disallow CLEANSTACK without P2SH, as otherwise a switch\n      // CLEANSTACK->P2SH+CLEANSTACK would be possible, which is not a\n      // softfork (and P2SH should be one).\n      if ((this.flags & Interpreter.SCRIPT_VERIFY_P2SH) == 0)\n        throw 'flags & SCRIPT_VERIFY_P2SH';\n\n      if (stackCopy.length != 1) {\n        this.errstr = 'SCRIPT_ERR_CLEANSTACK';\n        return false;\n      }\n  }\n\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_WITNESS)) {\n    if (!hadWitness && witness.length > 0) {\n      this.errstr = 'SCRIPT_ERR_WITNESS_UNEXPECTED';\n      return false;\n    }\n  }\n\n  return true;\n};\n\nmodule.exports = Interpreter;\n\nInterpreter.prototype.initialize = function(obj) {\n  this.stack = [];\n  this.altstack = [];\n  this.pc = 0;\n  this.satoshis = 0;\n  this.sigversion = 0;\n  this.pbegincodehash = 0;\n  this.nOpCount = 0;\n  this.vfExec = [];\n  this.errstr = '';\n  this.flags = 0;\n};\n\nInterpreter.prototype.set = function(obj) {\n  this.script = obj.script || this.script;\n  this.tx = obj.tx || this.tx;\n  this.nin = typeof obj.nin !== 'undefined' ? obj.nin : this.nin;\n  this.stack = obj.stack || this.stack;\n  this.altstack = obj.altack || this.altstack;\n  this.pc = typeof obj.pc !== 'undefined' ? obj.pc : this.pc;\n  this.pbegincodehash = typeof obj.pbegincodehash !== 'undefined' ? obj.pbegincodehash : this.pbegincodehash;\n  this.sigversion = typeof obj.sigversion !== 'undefined' ? obj.sigversion : this.sigversion;\n  this.satoshis = typeof obj.satoshis !== 'undefined' ? obj.satoshis : this.satoshis;\n  this.nOpCount = typeof obj.nOpCount !== 'undefined' ? obj.nOpCount : this.nOpCount;\n  this.vfExec = obj.vfExec || this.vfExec;\n  this.errstr = obj.errstr || this.errstr;\n  this.flags = typeof obj.flags !== 'undefined' ? obj.flags : this.flags;\n};\n\nInterpreter.true = Buffer.from([1]);\nInterpreter.false = Buffer.from([]);\n\nInterpreter.MAX_SCRIPT_ELEMENT_SIZE = 520;\n\nInterpreter.LOCKTIME_THRESHOLD = 500000000;\nInterpreter.LOCKTIME_THRESHOLD_BN = new BN(Interpreter.LOCKTIME_THRESHOLD);\n\n// flags taken from bitcoind\n// bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\nInterpreter.SCRIPT_VERIFY_NONE = 0;\n\n// Making v1-v16 witness program non-standard\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_WITNESS_PROGRAM = (1 << 12);\n\n// Evaluate P2SH subscripts (softfork safe, BIP16).\nInterpreter.SCRIPT_VERIFY_P2SH = (1 << 0);\n\n// Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.\n// Passing a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) to checksig causes that pubkey to be\n// skipped (not softfork safe: this flag can widen the validity of OP_CHECKSIG OP_NOT).\nInterpreter.SCRIPT_VERIFY_STRICTENC = (1 << 1);\n\n// Passing a non-strict-DER signature to a checksig operation causes script failure (softfork safe, BIP62 rule 1)\nInterpreter.SCRIPT_VERIFY_DERSIG = (1 << 2);\n\n// Passing a non-strict-DER signature or one with S > order/2 to a checksig operation causes script failure\n// (softfork safe, BIP62 rule 5).\nInterpreter.SCRIPT_VERIFY_LOW_S = (1 << 3);\n\n// verify dummy stack item consumed by CHECKMULTISIG is of zero-length (softfork safe, BIP62 rule 7).\nInterpreter.SCRIPT_VERIFY_NULLDUMMY = (1 << 4);\n\n// Using a non-push operator in the scriptSig causes script failure (softfork safe, BIP62 rule 2).\nInterpreter.SCRIPT_VERIFY_SIGPUSHONLY = (1 << 5);\n\n// Require minimal encodings for all push operations (OP_0... OP_16, OP_1NEGATE where possible, direct\n// pushes up to 75 bytes, OP_PUSHDATA up to 255 bytes, OP_PUSHDATA2 for anything larger). Evaluating\n// any other push causes the script to fail (BIP62 rule 3).\n// In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).\n// (softfork safe)\nInterpreter.SCRIPT_VERIFY_MINIMALDATA = (1 << 6);\n\n// Discourage use of NOPs reserved for upgrades (NOP1-10)\n//\n// Provided so that nodes can avoid accepting or mining transactions\n// containing executed NOP's whose meaning may change after a soft-fork,\n// thus rendering the script invalid; with this flag set executing\n// discouraged NOPs fails the script. This verification flag will never be\n// a mandatory flag applied to scripts in a block. NOPs that are not\n// executed, e.g.  within an unexecuted IF ENDIF block, are *not* rejected.\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 7);\n\n\n// Require that only a single stack element remains after evaluation. This\n// changes the success criterion from \"At least one stack element must\n// remain, and when interpreted as a boolean, it must be true\" to \"Exactly\n// one stack element must remain, and when interpreted as a boolean, it must\n// be true\".\n// (softfork safe, BIP62 rule 6)\n// Note: CLEANSTACK should never be used without P2SH or WITNESS.\nInterpreter.SCRIPT_VERIFY_CLEANSTACK = (1 << 8),\n\n// CLTV See BIP65 for details.\nInterpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1 << 9);\nInterpreter.SCRIPT_VERIFY_WITNESS = (1 << 10);\nInterpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS = (1 << 11);\n\n// support CHECKSEQUENCEVERIFY opcode\n//\n// See BIP112 for details\nInterpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY = (1 << 10);\n\n//\n// Segwit script only: Require the argument of OP_IF/NOTIF to be exactly\n// 0x01 or empty vector\n//\nInterpreter.SCRIPT_VERIFY_MINIMALIF = (1 << 13);\n\n\n// Signature(s) must be empty vector if an CHECK(MULTI)SIG operation failed\n//\nInterpreter.SCRIPT_VERIFY_NULLFAIL = (1 << 14);\n\n// Public keys in scripts must be compressed\n//\nInterpreter.SCRIPT_VERIFY_WITNESS_PUBKEYTYPE = (1 << 15);\n\n// Do we accept signature using SIGHASH_FORKID\n//\nInterpreter.SCRIPT_ENABLE_SIGHASH_FORKID = (1 << 16);\n\n// Do we accept activate replay protection using a different fork id.\n//\nInterpreter.SCRIPT_ENABLE_REPLAY_PROTECTION = (1 << 17);\n\n// Enable new opcodes.\n//\nInterpreter.SCRIPT_ENABLE_MONOLITH_OPCODES = (1 << 18);\n\n\n\n/* Below flags apply in the context of BIP 68*/\n/**\n * If this flag set, CTxIn::nSequence is NOT interpreted as a relative\n * lock-time.\n */\nInterpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31);\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time and this flag is set,\n * the relative lock-time has units of 512 seconds, otherwise it specifies\n * blocks with a granularity of 1.\n */\nInterpreter.SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22);\n\n/**\n * If CTxIn::nSequence encodes a relative lock-time, this mask is applied to\n * extract that lock-time from the sequence field.\n */\nInterpreter.SEQUENCE_LOCKTIME_MASK = 0x0000ffff;\n\n\nInterpreter.castToBool = function(buf) {\n  for (var i = 0; i < buf.length; i++) {\n    if (buf[i] !== 0) {\n      // can be negative zero\n      if (i === buf.length - 1 && buf[i] === 0x80) {\n        return false;\n      }\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Translated from bitcoind's CheckSignatureEncoding\n */\nInterpreter.prototype.checkSignatureEncoding = function(buf) {\n  var sig;\n\n    // Empty signature. Not strictly DER encoded, but allowed to provide a\n    // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n    if (buf.length == 0) {\n        return true;\n    }\n\n  if ((this.flags & (Interpreter.SCRIPT_VERIFY_DERSIG | Interpreter.SCRIPT_VERIFY_LOW_S | Interpreter.SCRIPT_VERIFY_STRICTENC)) !== 0 && !Signature.isTxDER(buf)) {\n    this.errstr = 'SCRIPT_ERR_SIG_DER_INVALID_FORMAT';\n    return false;\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_LOW_S) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasLowS()) {\n      this.errstr = 'SCRIPT_ERR_SIG_DER_HIGH_S';\n      return false;\n    }\n  } else if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0) {\n    sig = Signature.fromTxFormat(buf);\n    if (!sig.hasDefinedHashtype()) {\n      this.errstr = 'SCRIPT_ERR_SIG_HASHTYPE';\n      return false;\n    }\n  }\n\n  return true;\n};\n\n/**\n * Translated from bitcoind's CheckPubKeyEncoding\n */\nInterpreter.prototype.checkPubkeyEncoding = function(buf) {\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_STRICTENC) !== 0 && !PublicKey.isValid(buf)) {\n    this.errstr = 'SCRIPT_ERR_PUBKEYTYPE';\n    return false;\n  }\n\n  // Only compressed keys are accepted in segwit\n  if ((this.flags & Interpreter.SCRIPT_VERIFY_WITNESS_PUBKEYTYPE) != 0 && this.sigversion == 1 && !PublicKey.fromBuffer(buf).compressed) {\n    this.errstr = 'SCRIPT_ERR_WITNESS_PUBKEYTYPE';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Based on bitcoind's EvalScript function, with the inner loop moved to\n * Interpreter.prototype.step()\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.evaluate = function() {\n  if (this.script.toBuffer().length > 10000) {\n    this.errstr = 'SCRIPT_ERR_SCRIPT_SIZE';\n    return false;\n  }\n\n  try {\n    while (this.pc < this.script.chunks.length) {\n      var fSuccess = this.step();\n      if (!fSuccess) {\n        return false;\n      }\n    }\n\n    // Size limits\n    if (this.stack.length + this.altstack.length > 1000) {\n      this.errstr = 'SCRIPT_ERR_STACK_SIZE';\n      return false;\n    }\n  } catch (e) {\n    this.errstr = 'SCRIPT_ERR_UNKNOWN_ERROR: ' + e;\n    return false;\n  }\n\n  if (this.vfExec.length > 0) {\n    this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Checks a locktime parameter with the transaction's locktime.\n * There are two times of nLockTime: lock-by-blockheight and lock-by-blocktime,\n * distinguished by whether nLockTime < LOCKTIME_THRESHOLD = 500000000\n *\n * See the corresponding code on bitcoin core:\n * https://github.com/bitcoin/bitcoin/blob/ffd75adce01a78b3461b3ff05bcc2b530a9ce994/src/script/interpreter.cpp#L1129\n *\n * @param {BN} nLockTime the locktime read from the script\n * @return {boolean} true if the transaction's locktime is less than or equal to\n *                   the transaction's locktime\n */\nInterpreter.prototype.checkLockTime = function(nLockTime) {\n\n  // We want to compare apples to apples, so fail the script\n  // unless the type of nLockTime being tested is the same as\n  // the nLockTime in the transaction.\n  if (!(\n    (this.tx.nLockTime <  Interpreter.LOCKTIME_THRESHOLD && nLockTime.lt(Interpreter.LOCKTIME_THRESHOLD_BN)) ||\n    (this.tx.nLockTime >= Interpreter.LOCKTIME_THRESHOLD && nLockTime.gte(Interpreter.LOCKTIME_THRESHOLD_BN))\n  )) {\n    return false;\n  }\n\n  // Now that we know we're comparing apples-to-apples, the\n  // comparison is a simple numeric one.\n  if (nLockTime.gt(new BN(this.tx.nLockTime))) {\n    return false;\n  }\n\n  // Finally the nLockTime feature can be disabled and thus\n  // CHECKLOCKTIMEVERIFY bypassed if every txin has been\n  // finalized by setting nSequence to maxint. The\n  // transaction would be allowed into the blockchain, making\n  // the opcode ineffective.\n  //\n  // Testing if this vin is not final is sufficient to\n  // prevent this condition. Alternatively we could test all\n  // inputs, but testing just this input minimizes the data\n  // required to prove correct CHECKLOCKTIMEVERIFY execution.\n  if (!this.tx.inputs[this.nin].isFinal()) {\n    return false;\n  }\n\n  return true;\n}\n\n\n/**\n * Checks a sequence parameter with the transaction's sequence.\n * @param {BN} nSequence the sequence read from the script\n * @return {boolean} true if the transaction's sequence is less than or equal to\n *                   the transaction's sequence \n */\nInterpreter.prototype.checkSequence = function(nSequence) {\n\n    // Relative lock times are supported by comparing the passed in operand to\n    // the sequence number of the input.\n    var txToSequence = this.tx.inputs[this.nin].sequenceNumber;\n\n    // Fail if the transaction's version number is not set high enough to\n    // trigger BIP 68 rules.\n    if (this.tx.version < 2) {\n        return false;\n    }\n\n    // Sequence numbers with their most significant bit set are not consensus\n    // constrained. Testing that the transaction's sequence number do not have\n    // this bit set prevents using this property to get around a\n    // CHECKSEQUENCEVERIFY check.\n    if (txToSequence & SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n        return false;\n    }\n\n    // Mask off any bits that do not have consensus-enforced meaning before\n    // doing the integer comparisons\n    var nLockTimeMask =\n        Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG | Interpreter.SEQUENCE_LOCKTIME_MASK;\n    var txToSequenceMasked = new BN(txToSequence & nLockTimeMask);\n    var nSequenceMasked = nSequence.and(nLockTimeMask);\n\n    // There are two kinds of nSequence: lock-by-blockheight and\n    // lock-by-blocktime, distinguished by whether nSequenceMasked <\n    // CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG.\n    //\n    // We want to compare apples to apples, so fail the script unless the type\n    // of nSequenceMasked being tested is the same as the nSequenceMasked in the\n    // transaction.\n    var SEQUENCE_LOCKTIME_TYPE_FLAG_BN = new BN(Interpreter.SEQUENCE_LOCKTIME_TYPE_FLAG);\n    \n    if (!((txToSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)  &&\n           nSequenceMasked.lt(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)) ||\n          (txToSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN) &&\n           nSequenceMasked.gte(SEQUENCE_LOCKTIME_TYPE_FLAG_BN)))) {\n        return false;\n    }\n\n    // Now that we know we're comparing apples-to-apples, the comparison is a\n    // simple numeric one.\n    if (nSequenceMasked.gt(txToSequenceMasked)) {\n        return false;\n    }\n    return true;\n  }\n\n/** \n * Based on the inner loop of bitcoind's EvalScript function\n * bitcoind commit: b5d1b1092998bc95313856d535c632ea5a8f9104\n */\nInterpreter.prototype.step = function() {\n  var fRequireMinimal = (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALDATA) !== 0;\n\n  //bool fExec = !count(vfExec.begin(), vfExec.end(), false);\n  var fExec = (this.vfExec.indexOf(false) === -1);\n  var buf, buf1, buf2, spliced, n, x1, x2, bn, bn1, bn2, bufSig, bufPubkey, subscript;\n  var sig, pubkey;\n  var fValue, fSuccess;\n\n  // Read instruction\n  var chunk = this.script.chunks[this.pc];\n  this.pc++;\n  var opcodenum = chunk.opcodenum;\n  if (_.isUndefined(opcodenum)) {\n    this.errstr = 'SCRIPT_ERR_UNDEFINED_OPCODE';\n    return false;\n  }\n  if (chunk.buf && chunk.buf.length > Interpreter.MAX_SCRIPT_ELEMENT_SIZE) {\n    this.errstr = 'SCRIPT_ERR_PUSH_SIZE';\n    return false;\n  }\n\n  // Note how Opcode.OP_RESERVED does not count towards the opcode limit.\n  if (opcodenum > Opcode.OP_16 && ++(this.nOpCount) > 201) {\n    this.errstr = 'SCRIPT_ERR_OP_COUNT';\n    return false;\n  }\n\n\n  if (opcodenum === Opcode.OP_CAT ||\n    opcodenum === Opcode.OP_SUBSTR ||\n    opcodenum === Opcode.OP_LEFT ||\n    opcodenum === Opcode.OP_RIGHT ||\n    opcodenum === Opcode.OP_INVERT ||\n    opcodenum === Opcode.OP_AND ||\n    opcodenum === Opcode.OP_OR ||\n    opcodenum === Opcode.OP_XOR ||\n    opcodenum === Opcode.OP_2MUL ||\n    opcodenum === Opcode.OP_2DIV ||\n    opcodenum === Opcode.OP_MUL ||\n    opcodenum === Opcode.OP_DIV ||\n    opcodenum === Opcode.OP_MOD ||\n    opcodenum === Opcode.OP_LSHIFT ||\n    opcodenum === Opcode.OP_RSHIFT) {\n    this.errstr = 'SCRIPT_ERR_DISABLED_OPCODE';\n    return false;\n  }\n\n  if (fExec && 0 <= opcodenum && opcodenum <= Opcode.OP_PUSHDATA4) {\n    if (fRequireMinimal && !this.script.checkMinimalPush(this.pc - 1)) {\n      this.errstr = 'SCRIPT_ERR_MINIMALDATA';\n      return false;\n    }\n    if (!chunk.buf) {\n      this.stack.push(Interpreter.false);\n    } else if (chunk.len !== chunk.buf.length) {\n      throw new Error('Length of push value not equal to length of data');\n    } else {\n      this.stack.push(chunk.buf);\n    }\n  } else if (fExec || (Opcode.OP_IF <= opcodenum && opcodenum <= Opcode.OP_ENDIF)) {\n    switch (opcodenum) {\n      // Push value\n      case Opcode.OP_1NEGATE:\n      case Opcode.OP_1:\n      case Opcode.OP_2:\n      case Opcode.OP_3:\n      case Opcode.OP_4:\n      case Opcode.OP_5:\n      case Opcode.OP_6:\n      case Opcode.OP_7:\n      case Opcode.OP_8:\n      case Opcode.OP_9:\n      case Opcode.OP_10:\n      case Opcode.OP_11:\n      case Opcode.OP_12:\n      case Opcode.OP_13:\n      case Opcode.OP_14:\n      case Opcode.OP_15:\n      case Opcode.OP_16:\n        {\n          // ( -- value)\n          // ScriptNum bn((int)opcode - (int)(Opcode.OP_1 - 1));\n          n = opcodenum - (Opcode.OP_1 - 1);\n          buf = new BN(n).toScriptNumBuffer();\n          this.stack.push(buf);\n          // The result of these opcodes should always be the minimal way to push the data\n          // they push, so no need for a CheckMinimalPush here.\n        }\n        break;\n\n\n        //\n        // Control\n        //\n      case Opcode.OP_NOP:\n        break;\n\n      case Opcode.OP_NOP2:\n      case Opcode.OP_CHECKLOCKTIMEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY)) {\n          // not enabled; treat as a NOP2\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n        // Note that elsewhere numeric opcodes are limited to\n        // operands in the range -2**31+1 to 2**31-1, however it is\n        // legal for opcodes to produce results exceeding that\n        // range. This limitation is implemented by CScriptNum's\n        // default 4-byte limit.\n        //\n        // If we kept to that limit we'd have a year 2038 problem,\n        // even though the nLockTime field in transactions\n        // themselves is uint32 which only becomes meaningless\n        // after the year 2106.\n        //\n        // Thus as a special case we tell CScriptNum to accept up\n        // to 5-byte bignums, which are good until 2**39-1, well\n        // beyond the 2**32-1 limit of the nLockTime field itself.\n        var nLockTime = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKLOCKTIMEVERIFY.\n        if (nLockTime.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkLockTime(nLockTime)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n      case Opcode.OP_NOP3:\n      case Opcode.OP_CHECKSEQUENCEVERIFY:\n\n        if (!(this.flags & Interpreter.SCRIPT_VERIFY_CHECKSEQUENCEVERIFY)) {\n          // not enabled; treat as a NOP3\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n          break;\n        }\n\n        if (this.stack.length < 1) {\n          this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n          return false;\n        }\n\n\n        // nSequence, like nLockTime, is a 32-bit unsigned\n        // integer field. See the comment in CHECKLOCKTIMEVERIFY\n        // regarding 5-byte numeric operands.\n\n        var nSequence = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal, 5);\n\n\n        // In the rare event that the argument may be < 0 due to\n        // some arithmetic being done first, you can always use\n        // 0 MAX CHECKSEQUENCEVERIFY.\n        if (nSequence.lt(new BN(0))) {\n          this.errstr = 'SCRIPT_ERR_NEGATIVE_LOCKTIME';\n          return false;\n        }\n\n        // To provide for future soft-fork extensibility, if the\n        // operand has the disabled lock-time flag set,\n        // CHECKSEQUENCEVERIFY behaves as a NOP.\n        if ((nSequence &\n          Interpreter.SEQUENCE_LOCKTIME_DISABLE_FLAG) != 0) {\n          break;\n        }\n\n        // Actually compare the specified lock time with the transaction.\n        if (!this.checkSequence(nSequence)) {\n          this.errstr = 'SCRIPT_ERR_UNSATISFIED_LOCKTIME';\n          return false;\n        }\n        break;\n\n\n\n      case Opcode.OP_NOP1:\n      case Opcode.OP_NOP4:\n      case Opcode.OP_NOP5:\n      case Opcode.OP_NOP6:\n      case Opcode.OP_NOP7:\n      case Opcode.OP_NOP8:\n      case Opcode.OP_NOP9:\n      case Opcode.OP_NOP10:\n        {\n          if (this.flags & Interpreter.SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS) {\n            this.errstr = 'SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_IF:\n      case Opcode.OP_NOTIF:\n        {\n          // <expression> if [statements] [else [statements]] endif\n          // bool fValue = false;\n          fValue = false;\n          if (fExec) {\n            if (this.stack.length < 1) {\n              this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n              return false;\n            }\n\n            buf = this.stack[this.stack.length - 1];\n\n            if (this.flags & Interpreter.SCRIPT_VERIFY_MINIMALIF) {\n              buf = this.stack[this.stack.length - 1];\n              if (buf.length > 1) {\n                this.errstr = 'SCRIPT_ERR_MINIMALIF';\n                return false;\n              }\n              if (buf.length == 1 && buf[0]!=1) {\n                this.errstr = 'SCRIPT_ERR_MINIMALIF';\n                return false;\n              }\n            }\n            fValue = Interpreter.castToBool(buf);\n            if (opcodenum === Opcode.OP_NOTIF) {\n              fValue = !fValue;\n            }\n            this.stack.pop();\n          }\n          this.vfExec.push(fValue);\n        }\n        break;\n\n      case Opcode.OP_ELSE:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec[this.vfExec.length - 1] = !this.vfExec[this.vfExec.length - 1];\n        }\n        break;\n\n      case Opcode.OP_ENDIF:\n        {\n          if (this.vfExec.length === 0) {\n            this.errstr = 'SCRIPT_ERR_UNBALANCED_CONDITIONAL';\n            return false;\n          }\n          this.vfExec.pop();\n        }\n        break;\n\n      case Opcode.OP_VERIFY:\n        {\n          // (true -- ) or\n          // (false -- false) and return\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.pop();\n          } else {\n            this.errstr = 'SCRIPT_ERR_VERIFY';\n            return false;\n          }\n        }\n        break;\n\n      case Opcode.OP_RETURN:\n        {\n          this.errstr = 'SCRIPT_ERR_OP_RETURN';\n          return false;\n        }\n        break;\n\n\n        //\n        // Stack ops\n        //\n      case Opcode.OP_TOALTSTACK:\n        {\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.altstack.push(this.stack.pop());\n        }\n        break;\n\n      case Opcode.OP_FROMALTSTACK:\n        {\n          if (this.altstack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_ALTSTACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.altstack.pop());\n        }\n        break;\n\n      case Opcode.OP_2DROP:\n        {\n          // (x1 x2 -- )\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_2DUP:\n        {\n          // (x1 x2 -- x1 x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_3DUP:\n        {\n          // (x1 x2 x3 -- x1 x2 x3 x1 x2 x3)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 3];\n          buf2 = this.stack[this.stack.length - 2];\n          var buf3 = this.stack[this.stack.length - 1];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n          this.stack.push(buf3);\n        }\n        break;\n\n      case Opcode.OP_2OVER:\n        {\n          // (x1 x2 x3 x4 -- x1 x2 x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 4];\n          buf2 = this.stack[this.stack.length - 3];\n          this.stack.push(buf1);\n          this.stack.push(buf2);\n        }\n        break;\n\n      case Opcode.OP_2ROT:\n        {\n          // (x1 x2 x3 x4 x5 x6 -- x3 x4 x5 x6 x1 x2)\n          if (this.stack.length < 6) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 6, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_2SWAP:\n        {\n          // (x1 x2 x3 x4 -- x3 x4 x1 x2)\n          if (this.stack.length < 4) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          spliced = this.stack.splice(this.stack.length - 4, 2);\n          this.stack.push(spliced[0]);\n          this.stack.push(spliced[1]);\n        }\n        break;\n\n      case Opcode.OP_IFDUP:\n        {\n          // (x - 0 | x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          fValue = Interpreter.castToBool(buf);\n          if (fValue) {\n            this.stack.push(buf);\n          }\n        }\n        break;\n\n      case Opcode.OP_DEPTH:\n        {\n          // -- stacksize\n          buf = new BN(this.stack.length).toScriptNumBuffer();\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_DROP:\n        {\n          // (x -- )\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.pop();\n        }\n        break;\n\n      case Opcode.OP_DUP:\n        {\n          // (x -- x x)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 1]);\n        }\n        break;\n\n      case Opcode.OP_NIP:\n        {\n          // (x1 x2 -- x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 1);\n        }\n        break;\n\n      case Opcode.OP_OVER:\n        {\n          // (x1 x2 -- x1 x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.push(this.stack[this.stack.length - 2]);\n        }\n        break;\n\n      case Opcode.OP_PICK:\n      case Opcode.OP_ROLL:\n        {\n          // (xn ... x2 x1 x0 n - xn ... x2 x1 x0 xn)\n          // (xn ... x2 x1 x0 n - ... x2 x1 x0 xn)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          n = bn.toNumber();\n          this.stack.pop();\n          if (n < 0 || n >= this.stack.length) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - n - 1];\n          if (opcodenum === Opcode.OP_ROLL) {\n            this.stack.splice(this.stack.length - n - 1, 1);\n          }\n          this.stack.push(buf);\n        }\n        break;\n\n      case Opcode.OP_ROT:\n        {\n          // (x1 x2 x3 -- x2 x3 x1)\n          //  x2 x1 x3  after first swap\n          //  x2 x3 x1  after second swap\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 3];\n          x2 = this.stack[this.stack.length - 2];\n          var x3 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 3] = x2;\n          this.stack[this.stack.length - 2] = x3;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_SWAP:\n        {\n          // (x1 x2 -- x2 x1)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          x1 = this.stack[this.stack.length - 2];\n          x2 = this.stack[this.stack.length - 1];\n          this.stack[this.stack.length - 2] = x2;\n          this.stack[this.stack.length - 1] = x1;\n        }\n        break;\n\n      case Opcode.OP_TUCK:\n        {\n          // (x1 x2 -- x2 x1 x2)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          this.stack.splice(this.stack.length - 2, 0, this.stack[this.stack.length - 1]);\n        }\n        break;\n\n\n      case Opcode.OP_SIZE:\n        {\n          // (in -- in size)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn = new BN(this.stack[this.stack.length - 1].length);\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n\n        //\n        // Bitwise logic\n        //\n      case Opcode.OP_EQUAL:\n      case Opcode.OP_EQUALVERIFY:\n        //case Opcode.OP_NOTEQUAL: // use Opcode.OP_NUMNOTEQUAL\n        {\n          // (x1 x2 - bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf1 = this.stack[this.stack.length - 2];\n          buf2 = this.stack[this.stack.length - 1];\n          var fEqual = buf1.toString('hex') === buf2.toString('hex');\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fEqual ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_EQUALVERIFY) {\n            if (fEqual) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_EQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n\n        //\n        // Numeric\n        //\n      case Opcode.OP_1ADD:\n      case Opcode.OP_1SUB:\n      case Opcode.OP_NEGATE:\n      case Opcode.OP_ABS:\n      case Opcode.OP_NOT:\n      case Opcode.OP_0NOTEQUAL:\n        {\n          // (in -- out)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          bn = BN.fromScriptNumBuffer(buf, fRequireMinimal);\n          switch (opcodenum) {\n            case Opcode.OP_1ADD:\n              bn = bn.add(BN.One);\n              break;\n            case Opcode.OP_1SUB:\n              bn = bn.sub(BN.One);\n              break;\n            case Opcode.OP_NEGATE:\n              bn = bn.neg();\n              break;\n            case Opcode.OP_ABS:\n              if (bn.cmp(BN.Zero) < 0) {\n                bn = bn.neg();\n              }\n              break;\n            case Opcode.OP_NOT:\n              bn = new BN((bn.cmp(BN.Zero) === 0) + 0);\n              break;\n            case Opcode.OP_0NOTEQUAL:\n              bn = new BN((bn.cmp(BN.Zero) !== 0) + 0);\n              break;\n              //default:      assert(!'invalid opcode'); break; // TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n        }\n        break;\n\n      case Opcode.OP_ADD:\n      case Opcode.OP_SUB:\n      case Opcode.OP_BOOLAND:\n      case Opcode.OP_BOOLOR:\n      case Opcode.OP_NUMEQUAL:\n      case Opcode.OP_NUMEQUALVERIFY:\n      case Opcode.OP_NUMNOTEQUAL:\n      case Opcode.OP_LESSTHAN:\n      case Opcode.OP_GREATERTHAN:\n      case Opcode.OP_LESSTHANOREQUAL:\n      case Opcode.OP_GREATERTHANOREQUAL:\n      case Opcode.OP_MIN:\n      case Opcode.OP_MAX:\n        {\n          // (x1 x2 -- out)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          bn = new BN(0);\n\n          switch (opcodenum) {\n            case Opcode.OP_ADD:\n              bn = bn1.add(bn2);\n              break;\n\n            case Opcode.OP_SUB:\n              bn = bn1.sub(bn2);\n              break;\n\n              // case Opcode.OP_BOOLAND:       bn = (bn1 != bnZero && bn2 != bnZero); break;\n            case Opcode.OP_BOOLAND:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) && (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_BOOLOR:        bn = (bn1 != bnZero || bn2 != bnZero); break;\n            case Opcode.OP_BOOLOR:\n              bn = new BN(((bn1.cmp(BN.Zero) !== 0) || (bn2.cmp(BN.Zero) !== 0)) + 0);\n              break;\n              // case Opcode.OP_NUMEQUAL:      bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUAL:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMEQUALVERIFY:    bn = (bn1 == bn2); break;\n            case Opcode.OP_NUMEQUALVERIFY:\n              bn = new BN((bn1.cmp(bn2) === 0) + 0);\n              break;\n              // case Opcode.OP_NUMNOTEQUAL:     bn = (bn1 != bn2); break;\n            case Opcode.OP_NUMNOTEQUAL:\n              bn = new BN((bn1.cmp(bn2) !== 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHAN:      bn = (bn1 < bn2); break;\n            case Opcode.OP_LESSTHAN:\n              bn = new BN((bn1.cmp(bn2) < 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHAN:     bn = (bn1 > bn2); break;\n            case Opcode.OP_GREATERTHAN:\n              bn = new BN((bn1.cmp(bn2) > 0) + 0);\n              break;\n              // case Opcode.OP_LESSTHANOREQUAL:   bn = (bn1 <= bn2); break;\n            case Opcode.OP_LESSTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) <= 0) + 0);\n              break;\n              // case Opcode.OP_GREATERTHANOREQUAL:  bn = (bn1 >= bn2); break;\n            case Opcode.OP_GREATERTHANOREQUAL:\n              bn = new BN((bn1.cmp(bn2) >= 0) + 0);\n              break;\n            case Opcode.OP_MIN:\n              bn = (bn1.cmp(bn2) < 0 ? bn1 : bn2);\n              break;\n            case Opcode.OP_MAX:\n              bn = (bn1.cmp(bn2) > 0 ? bn1 : bn2);\n              break;\n              // default:           assert(!'invalid opcode'); break; //TODO: does this ever occur?\n          }\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(bn.toScriptNumBuffer());\n\n          if (opcodenum === Opcode.OP_NUMEQUALVERIFY) {\n            // if (CastToBool(stacktop(-1)))\n            if (Interpreter.castToBool(this.stack[this.stack.length - 1])) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_NUMEQUALVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_WITHIN:\n        {\n          // (x min max -- out)\n          if (this.stack.length < 3) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          bn1 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 3], fRequireMinimal);\n          bn2 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 2], fRequireMinimal);\n          var bn3 = BN.fromScriptNumBuffer(this.stack[this.stack.length - 1], fRequireMinimal);\n          //bool fValue = (bn2 <= bn1 && bn1 < bn3);\n          fValue = (bn2.cmp(bn1) <= 0) && (bn1.cmp(bn3) < 0);\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.pop();\n          this.stack.push(fValue ? Interpreter.true : Interpreter.false);\n        }\n        break;\n\n\n        //\n        // Crypto\n        //\n      case Opcode.OP_RIPEMD160:\n      case Opcode.OP_SHA1:\n      case Opcode.OP_SHA256:\n      case Opcode.OP_HASH160:\n      case Opcode.OP_HASH256:\n        {\n          // (in -- hash)\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          buf = this.stack[this.stack.length - 1];\n          //valtype vchHash((opcode == Opcode.OP_RIPEMD160 ||\n          //                 opcode == Opcode.OP_SHA1 || opcode == Opcode.OP_HASH160) ? 20 : 32);\n          var bufHash;\n          if (opcodenum === Opcode.OP_RIPEMD160) {\n            bufHash = Hash.ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_SHA1) {\n            bufHash = Hash.sha1(buf);\n          } else if (opcodenum === Opcode.OP_SHA256) {\n            bufHash = Hash.sha256(buf);\n          } else if (opcodenum === Opcode.OP_HASH160) {\n            bufHash = Hash.sha256ripemd160(buf);\n          } else if (opcodenum === Opcode.OP_HASH256) {\n            bufHash = Hash.sha256sha256(buf);\n          }\n          this.stack.pop();\n          this.stack.push(bufHash);\n        }\n        break;\n\n      case Opcode.OP_CODESEPARATOR:\n        {\n          // Hash starts after the code separator\n          this.pbegincodehash = this.pc;\n        }\n        break;\n\n      case Opcode.OP_CHECKSIG:\n      case Opcode.OP_CHECKSIGVERIFY:\n        {\n          // (sig pubkey -- bool)\n          if (this.stack.length < 2) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          bufSig = this.stack[this.stack.length - 2];\n          bufPubkey = this.stack[this.stack.length - 1];\n          if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          // CScript scriptCode(pbegincodehash, pend);\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signature, since there's no way for a signature to sign itself\n          var tmpScript = new Script().add(bufSig);\n          subscript.findAndDelete(tmpScript);\n\n          try {\n            sig = Signature.fromTxFormat(bufSig);\n            pubkey = PublicKey.fromBuffer(bufPubkey, false);\n            fSuccess = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.sigversion, this.satoshis);\n          } catch (e) {\n            //invalid sig or pubkey\n            fSuccess = false;\n          }\n\n          if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n            bufSig.length) {\n            this.errstr = 'SCRIPT_ERR_NULLFAIL';\n            return false;\n          }\n\n          this.stack.pop();\n          this.stack.pop();\n\n          // stack.push_back(fSuccess ? vchTrue : vchFalse);\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n          if (opcodenum === Opcode.OP_CHECKSIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKSIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      case Opcode.OP_CHECKMULTISIG:\n      case Opcode.OP_CHECKMULTISIGVERIFY:\n        {\n          // ([sig ...] num_of_signatures [pubkey ...] num_of_pubkeys -- bool)\n\n          var i = 1;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nKeysCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nKeysCount < 0 || nKeysCount > 20) {\n            this.errstr = 'SCRIPT_ERR_PUBKEY_COUNT';\n            return false;\n          }\n          this.nOpCount += nKeysCount;\n          if (this.nOpCount > 201) {\n            this.errstr = 'SCRIPT_ERR_OP_COUNT';\n            return false;\n          }\n          // int ikey = ++i;\n          var ikey = ++i;\n          i += nKeysCount;\n\n          // ikey2 is the position of last non-signature item in\n          // the stack. Top stack item = 1. With\n          // SCRIPT_VERIFY_NULLFAIL, this is used for cleanup if\n          // operation fails.\n          var ikey2 = nKeysCount + 2;\n\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          var nSigsCount = BN.fromScriptNumBuffer(this.stack[this.stack.length - i], fRequireMinimal).toNumber();\n          if (nSigsCount < 0 || nSigsCount > nKeysCount) {\n            this.errstr = 'SCRIPT_ERR_SIG_COUNT';\n            return false;\n          }\n          // int isig = ++i;\n          var isig = ++i;\n          i += nSigsCount;\n          if (this.stack.length < i) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n\n          // Subset of script starting at the most recent codeseparator\n          subscript = new Script().set({\n            chunks: this.script.chunks.slice(this.pbegincodehash)\n          });\n\n          // Drop the signatures, since there's no way for a signature to sign itself\n          for (var k = 0; k < nSigsCount; k++) {\n            bufSig = this.stack[this.stack.length - isig - k];\n            subscript.findAndDelete(new Script().add(bufSig));\n          }\n\n          fSuccess = true;\n          while (fSuccess && nSigsCount > 0) {\n            // valtype& vchSig  = stacktop(-isig);\n            bufSig = this.stack[this.stack.length - isig];\n            // valtype& vchPubKey = stacktop(-ikey);\n            bufPubkey = this.stack[this.stack.length - ikey];\n\n            if (!this.checkSignatureEncoding(bufSig) || !this.checkPubkeyEncoding(bufPubkey)) {\n              return false;\n            }\n\n            var fOk;\n            try {\n              sig = Signature.fromTxFormat(bufSig);\n              pubkey = PublicKey.fromBuffer(bufPubkey, false);\n              fOk = this.tx.verifySignature(sig, pubkey, this.nin, subscript, this.sigversion, this.satoshis);\n            } catch (e) {\n              //invalid sig or pubkey\n              fOk = false;\n            }\n\n            if (fOk) {\n              isig++;\n              nSigsCount--;\n            }\n            ikey++;\n            nKeysCount--;\n\n            // If there are more signatures left than keys left,\n            // then too many signatures have failed\n            if (nSigsCount > nKeysCount) {\n              fSuccess = false;\n            }\n          }\n\n\n          // Clean up stack of actual arguments\n          while (i-- > 1) {\n            if (!fSuccess && (this.flags & Interpreter.SCRIPT_VERIFY_NULLFAIL) &&\n              !ikey2 && this.stack[this.stack.length - 1].length) {\n\n              this.errstr = 'SCRIPT_ERR_NULLFAIL';\n              return false;\n            }\n\n            if (ikey2 > 0) {\n              ikey2--;\n            }\n\n            this.stack.pop();\n          }\n\n          // A bug causes CHECKMULTISIG to consume one extra argument\n          // whose contents were not checked in any way.\n          //\n          // Unfortunately this is a potential source of mutability,\n          // so optionally verify it is exactly equal to zero prior\n          // to removing it from the stack.\n          if (this.stack.length < 1) {\n            this.errstr = 'SCRIPT_ERR_INVALID_STACK_OPERATION';\n            return false;\n          }\n          if ((this.flags & Interpreter.SCRIPT_VERIFY_NULLDUMMY) && this.stack[this.stack.length - 1].length) {\n            this.errstr = 'SCRIPT_ERR_SIG_NULLDUMMY';\n            return false;\n          }\n          this.stack.pop();\n\n          this.stack.push(fSuccess ? Interpreter.true : Interpreter.false);\n\n          if (opcodenum === Opcode.OP_CHECKMULTISIGVERIFY) {\n            if (fSuccess) {\n              this.stack.pop();\n            } else {\n              this.errstr = 'SCRIPT_ERR_CHECKMULTISIGVERIFY';\n              return false;\n            }\n          }\n        }\n        break;\n\n      default:\n        this.errstr = 'SCRIPT_ERR_BAD_OPCODE';\n        return false;\n    }\n  }\n\n  return true;\n};\n\n", "module.exports = require('./script');\n\nmodule.exports.Interpreter = require('./interpreter');\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('./util/preconditions');\nvar errors = require('./errors');\nvar Base58Check = require('./encoding/base58check');\nvar Bech32 = require('./encoding/bech32');\nvar Networks = require('./networks');\nvar Hash = require('./crypto/hash');\nvar JSUtil = require('./util/js');\nvar PublicKey = require('./publickey');\n\n/**\n * Instantiate an address from an address String or Buffer, a public key or script hash Buffer,\n * or an instance of {@link PublicKey} or {@link Script}.\n *\n * This is an immutable class, and if the first parameter provided to this constructor is an\n * `Address` instance, the same argument will be returned.\n *\n * An address has two key properties: `network` and `type`. The type is one of\n * `Address.PayToPublicKeyHash` (value is the `'pubkeyhash'` string),\n * `Address.PayToScriptHash` (the string `'scripthash'`),\n * `Address.PayToWitnessPublicKeyHash` (the string `'witnesspubkeyhash'`),\n * or `Address.PayToWitnessScriptHash` (the string `'witnessscripthash'`).\n * The network is an instance of {@link Network}.\n * You can quickly check whether an address is of a given kind by using the methods\n * `isPayToPublicKeyHash`, `isPayToScriptHash`, `isPayToWitnessPublicKeyHash`,\n * and `isPayToWitnessScriptHash`.\n *\n * @example\n * ```javascript\n * // validate that an input field is valid\n * var error = Address.getValidationError(input, 'testnet');\n * if (!error) {\n *   var address = Address(input, 'testnet');\n * } else {\n *   // invalid network or checksum (typo?)\n *   var message = error.messsage;\n * }\n *\n * // get an address from a public key\n * var address = Address(publicKey, 'testnet').toString();\n * ```\n *\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'scripthash', 'pubkeyhash', witnessscripthash or 'witnesspubkeyhash'\n * @param {string=} multisigType - The type of multisig: 'scripthash' or 'witnessscripthash'\n * @returns {Address} A new valid and frozen instance of an Address\n * @constructor\n */\nfunction Address(data, network, type, multisigType) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n\n  if (!(this instanceof Address)) {\n    return new Address(data, network, type);\n  }\n\n  if (_.isArray(data) && _.isNumber(network)) {\n    return Address.createMultisig(data, network, type, false, multisigType);\n  }\n\n  if (data instanceof Address) {\n    // Immutable instance\n    return data;\n  }\n\n  $.checkArgument(data, 'First argument is required, please include address data.', 'guide/address.html');\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Second argument must be \"livenet\" or \"testnet\".');\n  }\n\n  if (type && (\n    type !== Address.PayToPublicKeyHash\n    && type !== Address.PayToScriptHash\n    && type !== Address.PayToWitnessPublicKeyHash\n    && type !== Address.PayToWitnessScriptHash)) {\n    throw new TypeError('Third argument must be \"pubkeyhash\", \"scripthash\", \"witnesspubkeyhash\", or \"witnessscripthash\".');\n  }\n\n  var info = this._classifyArguments(data, network, type);\n\n  // set defaults if not set\n  info.network = info.network || Networks.get(network) || Networks.defaultNetwork;\n  info.type = info.type || type || Address.PayToPublicKeyHash;\n\n  JSUtil.defineImmutable(this, {\n    hashBuffer: info.hashBuffer,\n    network: info.network,\n    type: info.type\n  });\n\n  return this;\n}\n\n/**\n * Internal function used to split different kinds of arguments of the constructor\n * @param {*} data - The encoded data in various formats\n * @param {Network|String|number=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Object} An \"info\" object with \"type\", \"network\", and \"hashBuffer\"\n */\nAddress.prototype._classifyArguments = function(data, network, type) {\n  /* jshint maxcomplexity: 10 */\n  // transform and validate input data\n  if ((data instanceof Buffer || data instanceof Uint8Array) && (data.length === 20 || data.length === 32)) {\n    return Address._transformHash(data, network, type);\n  } else if ((data instanceof Buffer || data instanceof Uint8Array) && data.length >= 21) {\n    return Address._transformBuffer(data, network, type);\n  } else if (data instanceof PublicKey) {\n    return Address._transformPublicKey(data, network, type);\n  } else if (data instanceof Script) {\n    return Address._transformScript(data, network);\n  } else if (typeof(data) === 'string') {\n    return Address._transformString(data, network, type);\n  } else if (_.isObject(data)) {\n    return Address._transformObject(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n};\n\n/** @static */\nAddress.PayToPublicKeyHash = 'pubkeyhash';\n/** @static */\nAddress.PayToScriptHash = 'scripthash';\n/** @static */\nAddress.PayToWitnessPublicKeyHash = 'witnesspubkeyhash';\n/** @static */\nAddress.PayToWitnessScriptHash = 'witnessscripthash';\n\n/**\n * @param {Buffer} hash - An instance of a hash Buffer\n * @param {string} type - either 'pubkeyhash', 'scripthash', 'witnesspubkeyhash', or 'witnessscripthash'\n * @param {Network=} network - the name of the network associated\n * @returns {Object} An object with keys: hashBuffer\n * @private\n */\nAddress._transformHash = function(hash, network, type) {\n  var info = {};\n  if (!(hash instanceof Buffer) && !(hash instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n  if (hash.length !== 20 && hash.length !== 32) {\n    throw new TypeError('Address hashbuffers must be either 20 or 32 bytes.');\n  }\n  info.hashBuffer = hash;\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.type = type;\n  return info;\n};\n\n/**\n * Deserializes an address serialized through `Address#toObject()`\n * @param {Object} data\n * @param {string} data.hash - the hash that this address encodes\n * @param {string} data.type - either 'pubkeyhash', 'scripthash', 'witnesspubkeyhash', or 'witnessscripthash'\n * @param {Network=} data.network - the name of the network associated\n * @return {Address}\n */\nAddress._transformObject = function(data) {\n  $.checkArgument(data.hash || data.hashBuffer, 'Must provide a `hash` or `hashBuffer` property');\n  $.checkArgument(data.type, 'Must provide a `type` property');\n  return {\n    hashBuffer: data.hash ? Buffer.from(data.hash, 'hex') : data.hashBuffer,\n    network: Networks.get(data.network) || Networks.defaultNetwork,\n    type: data.type\n  };\n};\n\n/**\n * Internal function to discover the network and type based on the first data byte\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @returns {Object} An object with keys: network and type\n * @private\n */\nAddress._classifyFromVersion = function(buffer) {\n  var version = {};\n\n  if (buffer.length > 21) {\n    var info = Bech32.decode(buffer.toString('utf8'));\n    if (info.version !== 0) {\n      throw new TypeError('Only witness v0 addresses are supported.');\n    }\n    if (info.data.length === 20) {\n      version.type = Address.PayToWitnessPublicKeyHash;\n    } else if (info.data.length === 32) {\n      version.type = Address.PayToWitnessScriptHash;\n    } else {\n      throw new TypeError('Witness data must be either 20 or 32 bytes.')\n    }\n    version.network = Networks.get(info.prefix, 'bech32prefix');\n  } else {\n\n    var pubkeyhashNetwork = Networks.get(buffer[0], 'pubkeyhash');\n    var scripthashNetwork = Networks.get(buffer[0], 'scripthash');\n\n    if (pubkeyhashNetwork) {\n      version.network = pubkeyhashNetwork;\n      version.type = Address.PayToPublicKeyHash;\n    } else if (scripthashNetwork) {\n      version.network = scripthashNetwork;\n      version.type = Address.PayToScriptHash;\n    }\n  }\n\n  return version;\n};\n\n/**\n * Internal function to transform a bitcoin address buffer\n *\n * @param {Buffer} buffer - An instance of a hex encoded address Buffer\n * @param {string=} network - The network: 'livenet' or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash', 'scripthash', 'witnesspubkeyhash', or 'witnessscripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformBuffer = function(buffer, network, type) {\n  /* jshint maxcomplexity: 9 */\n  var info = {};\n  if (!(buffer instanceof Buffer) && !(buffer instanceof Uint8Array)) {\n    throw new TypeError('Address supplied is not a buffer.');\n  }\n\n  if (buffer.length < 21) {\n    throw new TypeError('Address buffer is incorrect length.');\n  }\n\n  var networkObj = Networks.get(network);\n  var bufferVersion = Address._classifyFromVersion(buffer);\n\n  if (network && !networkObj) {\n    throw new TypeError('Unknown network');\n  }\n\n  if (!bufferVersion.network || (networkObj && networkObj.xpubkey !== bufferVersion.network.xpubkey)) {\n    throw new TypeError('Address has mismatched network type.');\n  }\n\n  if (!bufferVersion.type || (type && type !== bufferVersion.type)) {\n    throw new TypeError('Address has mismatched type.');\n  }\n\n  if (buffer.length > 21) {\n    info.hashBuffer = Bech32.decode(buffer.toString('utf8')).data;\n  } else {\n    info.hashBuffer = buffer.slice(1);\n  }\n  info.network = bufferVersion.network;\n  info.type = bufferVersion.type;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link PublicKey}\n *\n * @param {PublicKey} pubkey - An instance of PublicKey\n * @param {string} type - Either 'pubkeyhash', 'witnesspubkeyhash', or 'scripthash'\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformPublicKey = function(pubkey, network, type) {\n  var info = {};\n  if (!(pubkey instanceof PublicKey)) {\n    throw new TypeError('Address must be an instance of PublicKey.');\n  }\n  if (type && type !== Address.PayToScriptHash && type !== Address.PayToWitnessPublicKeyHash && type !== Address.PayToPublicKeyHash) {\n    throw new TypeError('Type must be either pubkeyhash, witnesspubkeyhash, or scripthash to transform public key.');\n  }\n  if (!pubkey.compressed && (type === Address.PayToScriptHash || type === Address.PayToWitnessPublicKeyHash)) {\n    throw new TypeError('Witness addresses must use compressed public keys.');\n  }\n  if (type === Address.PayToScriptHash) {\n    info.hashBuffer = Hash.sha256ripemd160(Script.buildWitnessV0Out(pubkey).toBuffer());\n  } else {\n    info.hashBuffer = Hash.sha256ripemd160(pubkey.toBuffer());\n  }\n  info.type = type || Address.PayToPublicKeyHash;\n  return info;\n};\n\n/**\n * Internal function to transform a {@link Script} into a `info` object.\n *\n * @param {Script} script - An instance of Script\n * @returns {Object} An object with keys: hashBuffer, type\n * @private\n */\nAddress._transformScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = script.getAddressInfo(network);\n  if (!info) {\n    throw new errors.Script.CantDeriveAddress(script);\n  }\n  return info;\n};\n\n/**\n * Creates a P2SH address from a set of public keys and a threshold.\n *\n * The addresses will be sorted lexicographically, as that is the trend in bitcoin.\n * To create an address from unsorted public keys, use the {@link Script#buildMultisigOut}\n * interface.\n *\n * @param {Array} publicKeys - a set of public keys to create an address\n * @param {number} threshold - the number of signatures needed to release the funds\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {boolean=} nestedWitness - if the address uses a nested p2sh witness\n * @param {string} type - Either 'scripthash' or 'witnessscripthash'. If nestedWitness is set, then this is ignored\n * @return {Address}\n */\nAddress.createMultisig = function(publicKeys, threshold, network, nestedWitness, type) {\n  network = network || publicKeys[0].network || Networks.defaultNetwork;\n  if (type && type !== Address.PayToScriptHash && type !== Address.PayToWitnessScriptHash) {\n    throw new TypeError('Type must be either scripthash or witnessscripthash to create multisig.');\n  }\n  if (nestedWitness || type === Address.PayToWitnessScriptHash) {\n    publicKeys = _.map(publicKeys, PublicKey);\n    for (var i = 0; i < publicKeys.length; i++) {\n      if (!publicKeys[i].compressed) {\n        throw new TypeError('Witness addresses must use compressed public keys.');\n      }\n    }\n  }\n  var redeemScript = Script.buildMultisigOut(publicKeys, threshold);\n  if (nestedWitness) {\n    return Address.payingTo(Script.buildWitnessMultisigOutFromScript(redeemScript), network);\n  }\n  return Address.payingTo(redeemScript, network, type);\n};\n\n/**\n * Internal function to transform a bitcoin address string\n *\n * @param {string} data\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type: 'pubkeyhash', 'scripthash', 'witnesspubkeyhash', or 'witnessscripthash'\n * @returns {Object} An object with keys: hashBuffer, network and type\n * @private\n */\nAddress._transformString = function(data, network, type) {\n  if (typeof(data) !== 'string') {\n    throw new TypeError('data parameter supplied is not a string.');\n  }\n\n  if(data.length > 100) {\n    throw new TypeError('address string is too long');\n  }\n\n  if (network && !Networks.get(network)) {\n    throw new TypeError('Unknown network');\n  }\n\n  data = data.trim();\n\n  try {\n    var info = Address._transformBuffer(Buffer.from(data, 'utf8'), network, type);\n    return info;\n  } catch (e) {\n    if (type === Address.PayToWitnessPublicKeyHash || type === Address.PayToWitnessScriptHash) {\n      throw e;\n    }\n  }\n\n  var addressBuffer = Base58Check.decode(data);\n  var info = Address._transformBuffer(addressBuffer, network, type);\n  return info;\n};\n\n/**\n * Instantiate an address from a PublicKey instance\n *\n * @param {PublicKey} data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - Either 'pubkeyhash', 'witnesspubkeyhash', or 'scripthash'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKey = function(data, network, type) {\n  var info = Address._transformPublicKey(data, network, type);\n  network = network || Networks.defaultNetwork;\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a ripemd160 public key hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromPublicKeyHash = function(hash, network) {\n  var info = Address._transformHash(hash);\n  return new Address(info.hashBuffer, network, Address.PayToPublicKeyHash);\n};\n\n/**\n * Instantiate an address from a ripemd160 script hash\n *\n * @param {Buffer} hash - An instance of buffer of the hash\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - Either 'scripthash' or 'witnessscripthash'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScriptHash = function(hash, network, type) {\n  $.checkArgument(hash, 'hash parameter is required');\n  var info = Address._transformHash(hash);\n  if (type === Address.PayToWitnessScriptHash && hash.length !== 32) {\n      throw new TypeError('Address hashbuffer must be exactly 32 bytes for v0 witness script hash.');\n  }\n  var type = type || Address.PayToScriptHash;\n  return new Address(info.hashBuffer, network, type);\n};\n\n/**\n * Builds a p2sh address paying to script. This will hash the script and\n * use that to create the address.\n * If you want to extract an address associated with a script instead,\n * see {{Address#fromScript}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - Either 'scripthash' or 'witnessscripthash'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.payingTo = function(script, network, type) {\n  $.checkArgument(script, 'script is required');\n  $.checkArgument(script instanceof Script, 'script must be instance of Script');\n  var hash;\n  if (type === Address.PayToWitnessScriptHash) {\n    hash = Hash.sha256(script.toBuffer());\n  } else {\n    hash = Hash.sha256ripemd160(script.toBuffer());\n  }\n  var type = type || Address.PayToScriptHash;\n  return Address.fromScriptHash(hash, network, type);\n};\n\n/**\n * Extract address from a Script. The script must be of one\n * of the following types: p2pkh input, p2pkh output, p2sh input\n * or p2sh output.\n * This will analyze the script and extract address information from it.\n * If you want to transform any script to a p2sh Address paying\n * to that script's hash instead, use {{Address#payingTo}}\n *\n * @param {Script} script - An instance of Script\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromScript = function(script, network) {\n  $.checkArgument(script instanceof Script, 'script must be a Script instance');\n  var info = Address._transformScript(script, network);\n  return new Address(info.hashBuffer, network, info.type);\n};\n\n/**\n * Instantiate an address from a buffer of the address\n *\n * @param {Buffer} buffer - An instance of buffer of the address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromBuffer = function(buffer, network, type) {\n  var info = Address._transformBuffer(buffer, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an address string\n *\n * @param {string} str - An string of the bitcoin address\n * @param {String|Network=} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string=} type - The type of address: 'script' or 'pubkey'\n * @returns {Address} A new valid and frozen instance of an Address\n */\nAddress.fromString = function(str, network, type) {\n  var info = Address._transformString(str, network, type);\n  return new Address(info.hashBuffer, info.network, info.type);\n};\n\n/**\n * Instantiate an address from an Object\n *\n * @param {string} json - An JSON string or Object with keys: hash, network and type\n * @returns {Address} A new valid instance of an Address\n */\nAddress.fromObject = function fromObject(obj) {\n  $.checkState(\n    JSUtil.isHexa(obj.hash),\n    'Unexpected hash property, \"' + obj.hash + '\", expected to be hex.'\n  );\n  var hashBuffer = Buffer.from(obj.hash, 'hex');\n  return new Address(hashBuffer, obj.network, obj.type);\n};\n\n/**\n * Will return a validation error if exists\n *\n * @example\n * ```javascript\n * // a network mismatch error\n * var error = Address.getValidationError('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'testnet');\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {null|Error} The corresponding error message\n */\nAddress.getValidationError = function(data, network, type) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new Address(data, network, type);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Will return a boolean if an address is valid\n *\n * @example\n * ```javascript\n * assert(Address.isValid('15vkcKf7gB23wLAnZLmbVuMiiVDc1Nm4a2', 'livenet'));\n * ```\n *\n * @param {string} data - The encoded data\n * @param {String|Network} network - either a Network instance, 'livenet', or 'testnet'\n * @param {string} type - The type of address: 'script' or 'pubkey'\n * @returns {boolean} The corresponding error message\n */\nAddress.isValid = function(data, network, type) {\n  return !Address.getValidationError(data, network, type);\n};\n\n/**\n * Returns true if an address is of pay to public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToPublicKeyHash = function() {\n  return this.type === Address.PayToPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to script hash type\n * @return boolean\n */\nAddress.prototype.isPayToScriptHash = function() {\n  return this.type === Address.PayToScriptHash;\n};\n\n/**\n * Returns true if an address is of pay to witness public key hash type\n * @return boolean\n */\nAddress.prototype.isPayToWitnessPublicKeyHash = function() {\n  return this.type === Address.PayToWitnessPublicKeyHash;\n};\n\n/**\n * Returns true if an address is of pay to witness script hash type\n * @return boolean\n */\nAddress.prototype.isPayToWitnessScriptHash = function() {\n  return this.type === Address.PayToWitnessScriptHash;\n};\n\n/**\n * Will return a buffer representation of the address\n *\n * @returns {Buffer} Bitcoin address buffer\n */\nAddress.prototype.toBuffer = function() {\n  if (this.isPayToWitnessPublicKeyHash() || this.isPayToWitnessScriptHash()) {\n    return Buffer.from(this.toString(), 'utf8')\n  }\n  var version = Buffer.from([this.network[this.type]]);\n  return Buffer.concat([version, this.hashBuffer]);\n};\n\n/**\n * @returns {Object} A plain object with the address information\n */\nAddress.prototype.toObject = Address.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hashBuffer.toString('hex'),\n    type: this.type,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a the string representation of the address\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.toString = function() {\n  if (this.isPayToWitnessPublicKeyHash() || this.isPayToWitnessScriptHash()) {\n    var prefix = this.network.bech32prefix;\n    var version = 0; // Only supporting segwit v0 for now\n    return Bech32.encode(prefix, version, this.hashBuffer);\n  }\n  return Base58Check.encode(this.toBuffer());\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin address\n */\nAddress.prototype.inspect = function() {\n  return '<Address: ' + this.toString() + ', type: ' + this.type + ', network: ' + this.network + '>';\n};\n\nmodule.exports = Address;\n\nvar Script = require('./script');\n", "'use strict';\n\nfunction Random() {\n}\n\n/* secure random bytes that sometimes throws an error due to lack of entropy */\nRandom.getRandomBuffer = function(size) {\n  if (process.browser)\n    return Random.getRandomBufferBrowser(size);\n  else\n    return Random.getRandomBufferNode(size);\n};\n\nRandom.getRandomBufferNode = function(size) {\n  var crypto = require('crypto');\n  return crypto.randomBytes(size);\n};\n\nRandom.getRandomBufferBrowser = function(size) {\n  if (!window.crypto && !window.msCrypto)\n    throw new Error('window.crypto not available');\n\n  if (window.crypto && window.crypto.getRandomValues)\n    var crypto = window.crypto;\n  else if (window.msCrypto && window.msCrypto.getRandomValues) //internet explorer\n    var crypto = window.msCrypto;\n  else\n    throw new Error('window.crypto.getRandomValues not available');\n\n  var bbuf = new Uint8Array(size);\n  crypto.getRandomValues(bbuf);\n  var buf = Buffer.from(bbuf);\n\n  return buf;\n};\n\n/* insecure random bytes, but it never fails */\nRandom.getPseudoRandomBuffer = function(size) {\n  var b32 = 0x100000000;\n  var b = Buffer.alloc(size);\n  var r;\n\n  for (var i = 0; i <= size; i++) {\n    var j = Math.floor(i / 4);\n    var k = i - j * 4;\n    if (k === 0) {\n      r = Math.random() * b32;\n      b[i] = r & 0xff;\n    } else {\n      b[i] = (r = r >>> 8) & 0xff;\n    }\n  }\n\n  return b;\n};\n\nmodule.exports = Random;\n", "'use strict';\n\nvar _ = require('lodash');\nvar Address = require('./address');\nvar Base58Check = require('./encoding/base58check');\nvar BN = require('./crypto/bn');\nvar JSUtil = require('./util/js');\nvar Networks = require('./networks');\nvar Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\nvar Random = require('./crypto/random');\nvar $ = require('./util/preconditions');\n\n/**\n * Instantiate a PrivateKey from a BN, Buffer and WIF.\n *\n * @example\n * ```javascript\n * // generate a new random key\n * var key = PrivateKey();\n *\n * // get the associated address\n * var address = key.toAddress();\n *\n * // encode into wallet export format\n * var exported = key.toWIF();\n *\n * // instantiate from the exported (and saved) private key\n * var imported = PrivateKey.fromWIF(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {PrivateKey} A new valid instance of an PrivateKey\n * @constructor\n */\nfunction PrivateKey(data, network) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 8 */\n\n  if (!(this instanceof PrivateKey)) {\n    return new PrivateKey(data, network);\n  }\n  if (data instanceof PrivateKey) {\n    return data;\n  }\n\n  var info = this._classifyArguments(data, network);\n\n  // validation\n  if (!info.bn || info.bn.cmp(new BN(0)) === 0){\n    throw new TypeError('Number can not be equal to zero, undefined, null or false');\n  }\n  if (!info.bn.lt(Point.getN())) {\n    throw new TypeError('Number must be less than N');\n  }\n  if (typeof(info.network) === 'undefined') {\n    throw new TypeError('Must specify the network (\"livenet\" or \"testnet\")');\n  }\n\n  JSUtil.defineImmutable(this, {\n    bn: info.bn,\n    compressed: info.compressed,\n    network: info.network\n  });\n\n  Object.defineProperty(this, 'publicKey', {\n    configurable: false,\n    enumerable: true,\n    get: this.toPublicKey.bind(this)\n  });\n\n  return this;\n\n};\n\n/**\n * Internal helper to instantiate PrivateKey internal `info` object from\n * different kinds of arguments passed to the constructor.\n *\n * @param {*} data\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @return {Object}\n */\nPrivateKey.prototype._classifyArguments = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: true,\n    network: network ? Networks.get(network) : Networks.defaultNetwork\n  };\n\n  // detect type of data\n  if (_.isUndefined(data) || _.isNull(data)){\n    info.bn = PrivateKey._getRandomBN();\n  } else if (data instanceof BN) {\n    info.bn = data;\n  } else if (data instanceof Buffer || data instanceof Uint8Array) {\n    info = PrivateKey._transformBuffer(data, network);\n  } else if (data.bn && data.network){\n    info = PrivateKey._transformObject(data);\n  } else if (!network && Networks.get(data)) {\n    info.bn = PrivateKey._getRandomBN();\n    info.network = Networks.get(data);\n  } else if (typeof(data) === 'string'){\n    if (JSUtil.isHexa(data)) {\n      info.bn = new BN(Buffer.from(data, 'hex'));\n    } else {\n      info = PrivateKey._transformWIF(data, network);\n    }\n  } else {\n    throw new TypeError('First argument is an unrecognized data type.');\n  }\n  return info;\n};\n\n/**\n * Internal function to get a random Big Number (BN)\n *\n * @returns {BN} A new randomly generated BN\n * @private\n */\nPrivateKey._getRandomBN = function(){\n  var condition;\n  var bn;\n  do {\n    var privbuf = Random.getRandomBuffer(32);\n    bn = BN.fromBuffer(privbuf);\n    condition = bn.lt(Point.getN());\n  } while (!condition);\n  return bn;\n};\n\n/**\n * Internal function to transform a WIF Buffer into a private key\n *\n * @param {Buffer} buf - An WIF string\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformBuffer = function(buf, network) {\n\n  var info = {};\n\n  if (buf.length === 32) {\n    return PrivateKey._transformBNBuffer(buf, network);\n  }\n\n  info.network = Networks.get(buf[0], 'privatekey');\n\n  if (!info.network) {\n    throw new Error('Invalid network');\n  }\n\n  if (network && info.network !== Networks.get(network)) {\n    throw new TypeError('Private key network mismatch');\n  }\n\n  if (buf.length === 1 + 32 + 1 && buf[1 + 32 + 1 - 1] === 1) {\n    info.compressed = true;\n  } else if (buf.length === 1 + 32) {\n    info.compressed = false;\n  } else {\n    throw new Error('Length of buffer must be 33 (uncompressed) or 34 (compressed)');\n  }\n\n  info.bn = BN.fromBuffer(buf.slice(1, 32 + 1));\n\n  return info;\n};\n\n/**\n * Internal function to transform a BN buffer into a private key\n *\n * @param {Buffer} buf\n * @param {Network|string=} network - a {@link Network} object, or a string with the network name\n * @returns {object} an Object with keys: bn, network, and compressed\n * @private\n */\nPrivateKey._transformBNBuffer = function(buf, network) {\n  var info = {};\n  info.network = Networks.get(network) || Networks.defaultNetwork;\n  info.bn = BN.fromBuffer(buf);\n  info.compressed = false;\n  return info;\n};\n\n/**\n * Internal function to transform a WIF string into a private key\n *\n * @param {string} buf - An WIF string\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformWIF = function(str, network) {\n  return PrivateKey._transformBuffer(Base58Check.decode(str), network);\n};\n\n/**\n * Instantiate a PrivateKey from a Buffer with the DER or WIF representation\n *\n * @param {Buffer} arg\n * @param {Network} network\n * @return {PrivateKey}\n */\nPrivateKey.fromBuffer = function(arg, network) {\n  return new PrivateKey(arg, network);\n};\n\n/**\n * Internal function to transform a JSON string on plain object into a private key\n * return this.\n *\n * @param {string} json - A JSON string or plain object\n * @returns {Object} An object with keys: bn, network and compressed\n * @private\n */\nPrivateKey._transformObject = function(json) {\n  var bn = new BN(json.bn, 'hex');\n  var network = Networks.get(json.network);\n  return {\n    bn: bn,\n    network: network,\n    compressed: json.compressed\n  };\n};\n\n/**\n * Instantiate a PrivateKey from a WIF string\n *\n * @param {string} str - The WIF encoded private key string\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromString = PrivateKey.fromWIF = function(str) {\n  $.checkArgument(_.isString(str), 'First argument is expected to be a string.');\n  return new PrivateKey(str);\n};\n\n/**\n * Instantiate a PrivateKey from a plain JavaScript object\n *\n * @param {Object} obj - The output from privateKey.toObject()\n */\nPrivateKey.fromObject = function(obj) {\n  $.checkArgument(_.isObject(obj), 'First argument is expected to be an object.');\n  return new PrivateKey(obj);\n};\n\n/**\n * Instantiate a PrivateKey from random bytes\n *\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {PrivateKey} A new valid instance of PrivateKey\n */\nPrivateKey.fromRandom = function(network) {\n  var bn = PrivateKey._getRandomBN();\n  return new PrivateKey(bn, network);\n};\n\n/**\n * Check if there would be any errors when initializing a PrivateKey\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {null|Error} An error if exists\n */\n\nPrivateKey.getValidationError = function(data, network) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PrivateKey(data, network);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @param {string=} network - Either \"livenet\" or \"testnet\"\n * @returns {Boolean} If the private key is would be valid\n */\nPrivateKey.isValid = function(data, network){\n  if (!data) {\n    return false;\n  }\n  return !PrivateKey.getValidationError(data, network);\n};\n\n/**\n * Will output the PrivateKey encoded as hex string\n *\n * @returns {string}\n */\nPrivateKey.prototype.toString = function() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * Will output the PrivateKey to a WIF string\n *\n * @returns {string} A WIP representation of the private key\n */\nPrivateKey.prototype.toWIF = function() {\n  var network = this.network;\n  var compressed = this.compressed;\n\n  var buf;\n  if (compressed) {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n                         this.bn.toBuffer({size: 32}),\n                         Buffer.from([0x01])]);\n  } else {\n    buf = Buffer.concat([Buffer.from([network.privatekey]),\n                         this.bn.toBuffer({size: 32})]);\n  }\n\n  return Base58Check.encode(buf);\n};\n\n/**\n * Will return the private key as a BN instance\n *\n * @returns {BN} A BN instance of the private key\n */\nPrivateKey.prototype.toBigNumber = function(){\n  return this.bn;\n};\n\n/**\n * Will return the private key as a BN buffer\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBuffer = function(){\n  return this.bn.toBuffer({size: 32});\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Will return the private key as a BN buffer without leading zero padding\n *\n * @returns {Buffer} A buffer of the private key\n */\nPrivateKey.prototype.toBufferNoPadding = function() {\n  return this.bn.toBuffer();\n};\n\n/**\n * Will return the corresponding public key\n *\n * @returns {PublicKey} A public key generated from the private key\n */\nPrivateKey.prototype.toPublicKey = function(){\n  if (!this._pubkey) {\n    this._pubkey = PublicKey.fromPrivateKey(this);\n  }\n  return this._pubkey;\n};\n\n/**\n * Will return an address for the private key\n * @param {Network=} network - optional parameter specifying\n * @param {string} type - Either 'pubkeyhash', 'witnesspubkeyhash', or 'scripthash'\n * the desired network for the address\n *\n * @returns {Address} An address generated from the private key\n */\nPrivateKey.prototype.toAddress = function(network, type) {\n  var pubkey = this.toPublicKey();\n  return Address.fromPublicKey(pubkey, network || this.network, type);\n};\n\n/**\n * @returns {Object} A plain object representation\n */\nPrivateKey.prototype.toObject = PrivateKey.prototype.toJSON = function toObject() {\n  return {\n    bn: this.bn.toString('hex'),\n    compressed: this.compressed,\n    network: this.network.toString()\n  };\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Private key\n */\nPrivateKey.prototype.inspect = function() {\n  var uncompressed = !this.compressed ? ', uncompressed' : '';\n  return '<PrivateKey: ' + this.toString() + ', network: ' + this.network + uncompressed + '>';\n};\n\nmodule.exports = PrivateKey;\n", "'use strict';\n\nvar BN = require('./crypto/bn');\nvar Point = require('./crypto/point');\nvar Hash = require('./crypto/hash');\nvar JSUtil = require('./util/js');\nvar Network = require('./networks');\nvar _ = require('lodash');\nvar $ = require('./util/preconditions');\n\n/**\n * Instantiate a PublicKey from a {@link PrivateKey}, {@link Point}, `string`, or `Buffer`.\n *\n * There are two internal properties, `network` and `compressed`, that deal with importing\n * a PublicKey from a PrivateKey in WIF format. More details described on {@link PrivateKey}\n *\n * @example\n * ```javascript\n * // instantiate from a private key\n * var key = PublicKey(privateKey, true);\n *\n * // export to as a DER hex encoded string\n * var exported = key.toString();\n *\n * // import the public key\n * var imported = PublicKey.fromString(exported);\n * ```\n *\n * @param {string} data - The encoded data in various formats\n * @param {Object} extra - additional options\n * @param {Network=} extra.network - Which network should the address for this public key be for\n * @param {String=} extra.compressed - If the public key is compressed\n * @returns {PublicKey} A new valid instance of an PublicKey\n * @constructor\n */\nfunction PublicKey(data, extra) {\n\n  if (!(this instanceof PublicKey)) {\n    return new PublicKey(data, extra);\n  }\n\n  $.checkArgument(data, 'First argument is required, please include public key data.');\n\n  if (data instanceof PublicKey) {\n    // Return copy, but as it's an immutable object, return same argument\n    return data;\n  }\n  extra = extra || {};\n\n  var info = this._classifyArgs(data, extra);\n\n  // validation\n  info.point.validate();\n\n  JSUtil.defineImmutable(this, {\n    point: info.point,\n    compressed: info.compressed,\n    network: info.network || Network.defaultNetwork\n  });\n\n  return this;\n};\n\n/**\n * Internal function to differentiate between arguments passed to the constructor\n * @param {*} data\n * @param {Object} extra\n */\nPublicKey.prototype._classifyArgs = function(data, extra) {\n  /* jshint maxcomplexity: 10 */\n  var info = {\n    compressed: _.isUndefined(extra.compressed) || extra.compressed\n  };\n\n  // detect type of data\n  if (data instanceof Point) {\n    info.point = data;\n  } else if (data.x && data.y) {\n    info = PublicKey._transformObject(data);\n  } else if (typeof(data) === 'string') {\n    info = PublicKey._transformDER(Buffer.from(data, 'hex'));\n  } else if (PublicKey._isBuffer(data)) {\n    info = PublicKey._transformDER(data);\n  } else if (PublicKey._isPrivateKey(data)) {\n    info = PublicKey._transformPrivateKey(data);\n  } else {\n    throw new TypeError('First argument is an unrecognized data format.');\n  }\n  if (!info.network) {\n    info.network = _.isUndefined(extra.network) ? undefined : Network.get(extra.network);\n  }\n  return info;\n};\n\n/**\n * Internal function to detect if an object is a {@link PrivateKey}\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isPrivateKey = function(param) {\n  var PrivateKey = require('./privatekey');\n  return param instanceof PrivateKey;\n};\n\n/**\n * Internal function to detect if an object is a Buffer\n *\n * @param {*} param - object to test\n * @returns {boolean}\n * @private\n */\nPublicKey._isBuffer = function(param) {\n  return (param instanceof Buffer) || (param instanceof Uint8Array);\n};\n\n/**\n * Internal function to transform a private key into a public key point\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = {};\n  info.point = Point.getG().mul(privkey.bn);\n  info.compressed = privkey.compressed;\n  info.network = privkey.network;\n  return info;\n};\n\n/**\n * Internal function to transform DER into a public key point\n *\n * @param {Buffer} buf - An hex encoded buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformDER = function(buf, strict) {\n  /* jshint maxstatements: 30 */\n  /* jshint maxcomplexity: 12 */\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = {};\n\n  strict = _.isUndefined(strict) ? true : strict;\n\n  var x;\n  var y;\n  var xbuf;\n  var ybuf;\n\n  if (buf[0] === 0x04 || (!strict && (buf[0] === 0x06 || buf[0] === 0x07))) {\n    xbuf = buf.slice(1, 33);\n    ybuf = buf.slice(33, 65);\n    if (xbuf.length !== 32 || ybuf.length !== 32 || buf.length !== 65) {\n      throw new TypeError('Length of x and y must be 32 bytes');\n    }\n    x = new BN(xbuf);\n    y = new BN(ybuf);\n    info.point = new Point(x, y);\n    info.compressed = false;\n  } else if (buf[0] === 0x03) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(true, x);\n    info.compressed = true;\n  } else if (buf[0] === 0x02) {\n    xbuf = buf.slice(1);\n    x = new BN(xbuf);\n    info = PublicKey._transformX(false, x);\n    info.compressed = true;\n  } else {\n    throw new TypeError('Invalid DER format public key');\n  }\n  return info;\n};\n\n/**\n * Internal function to transform X into a public key point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformX = function(odd, x) {\n  $.checkArgument(typeof odd === 'boolean', 'Must specify whether y is odd or not (true or false)');\n  var info = {};\n  info.point = Point.fromX(odd, x);\n  return info;\n};\n\n/**\n * Internal function to transform a JSON into a public key point\n *\n * @param {String|Object} json - a JSON string or plain object\n * @returns {Object} An object with keys: point and compressed\n * @private\n */\nPublicKey._transformObject = function(json) {\n  var x = new BN(json.x, 'hex');\n  var y = new BN(json.y, 'hex');\n  var point = new Point(x, y);\n  return new PublicKey(point, {\n    compressed: json.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a PrivateKey\n *\n * @param {PrivateKey} privkey - An instance of PrivateKey\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPrivateKey = function(privkey) {\n  $.checkArgument(PublicKey._isPrivateKey(privkey), 'Must be an instance of PrivateKey');\n  var info = PublicKey._transformPrivateKey(privkey);\n  return new PublicKey(info.point, {\n    compressed: info.compressed,\n    network: info.network\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Buffer\n * @param {Buffer} buf - A DER hex buffer\n * @param {bool=} strict - if set to false, will loosen some conditions\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromDER = PublicKey.fromBuffer = function(buf, strict) {\n  $.checkArgument(PublicKey._isBuffer(buf), 'Must be a hex buffer of DER encoded public key');\n  var info = PublicKey._transformDER(buf, strict);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a Point\n *\n * @param {Point} point - A Point instance\n * @param {boolean=} compressed - whether to store this public key as compressed format\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromPoint = function(point, compressed) {\n  $.checkArgument(point instanceof Point, 'First argument must be an instance of Point.');\n  return new PublicKey(point, {\n    compressed: compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from a DER hex encoded string\n *\n * @param {string} str - A DER hex string\n * @param {String=} encoding - The type of string encoding\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromString = function(str, encoding) {\n  var buf = Buffer.from(str, encoding || 'hex');\n  var info = PublicKey._transformDER(buf);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Instantiate a PublicKey from an X Point\n *\n * @param {Boolean} odd - If the point is above or below the x axis\n * @param {Point} x - The x point\n * @returns {PublicKey} A new valid instance of PublicKey\n */\nPublicKey.fromX = function(odd, x) {\n  var info = PublicKey._transformX(odd, x);\n  return new PublicKey(info.point, {\n    compressed: info.compressed\n  });\n};\n\n/**\n * Check if there would be any errors when initializing a PublicKey\n *\n * @param {string} data - The encoded data in various formats\n * @returns {null|Error} An error if exists\n */\nPublicKey.getValidationError = function(data) {\n  var error;\n  try {\n    /* jshint nonew: false */\n    new PublicKey(data);\n  } catch (e) {\n    error = e;\n  }\n  return error;\n};\n\n/**\n * Check if the parameters are valid\n *\n * @param {string} data - The encoded data in various formats\n * @returns {Boolean} If the public key would be valid\n */\nPublicKey.isValid = function(data) {\n  return !PublicKey.getValidationError(data);\n};\n\n/**\n * @returns {Object} A plain object of the PublicKey\n */\nPublicKey.prototype.toObject = PublicKey.prototype.toJSON = function toObject() {\n  return {\n    x: this.point.getX().toString('hex', 2),\n    y: this.point.getY().toString('hex', 2),\n    compressed: this.compressed\n  };\n};\n\n/**\n * Will output the PublicKey to a DER Buffer\n *\n * @returns {Buffer} A DER hex encoded buffer\n */\nPublicKey.prototype.toBuffer = PublicKey.prototype.toDER = function() {\n  var x = this.point.getX();\n  var y = this.point.getY();\n\n  var xbuf = x.toBuffer({\n    size: 32\n  });\n  var ybuf = y.toBuffer({\n    size: 32\n  });\n\n  var prefix;\n  if (!this.compressed) {\n    prefix = Buffer.from([0x04]);\n    return Buffer.concat([prefix, xbuf, ybuf]);\n  } else {\n    var odd = ybuf[ybuf.length - 1] % 2;\n    if (odd) {\n      prefix = Buffer.from([0x03]);\n    } else {\n      prefix = Buffer.from([0x02]);\n    }\n    return Buffer.concat([prefix, xbuf]);\n  }\n};\n\n/**\n * Will return a sha256 + ripemd160 hash of the serialized public key\n * @see https://github.com/bitcoin/bitcoin/blob/master/src/pubkey.h#L141\n * @returns {Buffer}\n */\nPublicKey.prototype._getID = function _getID() {\n  return Hash.sha256ripemd160(this.toBuffer());\n};\n\n/**\n * Will return an address for the public key\n *\n * @param {String|Network=} network - Which network should the address be for\n * @param {string} type - Either 'pubkeyhash', 'witnesspubkeyhash', or 'scripthash'\n * @returns {Address} An address generated from the public key\n */\nPublicKey.prototype.toAddress = function(network, type) {\n  var Address = require('./address');\n  return Address.fromPublicKey(this, network || this.network, type);\n};\n\n/**\n * Will output the PublicKey to a DER encoded hex string\n *\n * @returns {string} A DER hex encoded string\n */\nPublicKey.prototype.toString = function() {\n  return this.toDER().toString('hex');\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Public key\n */\nPublicKey.prototype.inspect = function() {\n  return '<PublicKey: ' + this.toString() +\n    (this.compressed ? '' : ', uncompressed') + '>';\n};\n\n\nmodule.exports = PublicKey;\n", "'use strict';\n\nvar BN = require('./bn');\nvar Point = require('./point');\nvar Signature = require('./signature');\nvar PublicKey = require('../publickey');\nvar Random = require('./random');\nvar Hash = require('./hash');\nvar BufferUtil = require('../util/buffer');\nvar _ = require('lodash');\nvar $ = require('../util/preconditions');\n\nvar ECDSA = function ECDSA(obj) {\n  if (!(this instanceof ECDSA)) {\n    return new ECDSA(obj);\n  }\n  if (obj) {\n    this.set(obj);\n  }\n};\n\n/* jshint maxcomplexity: 9 */\nECDSA.prototype.set = function(obj) {\n  this.hashbuf = obj.hashbuf || this.hashbuf;\n  this.endian = obj.endian || this.endian; //the endianness of hashbuf\n  this.privkey = obj.privkey || this.privkey;\n  this.pubkey = obj.pubkey || (this.privkey ? this.privkey.publicKey : this.pubkey);\n  this.sig = obj.sig || this.sig;\n  this.k = obj.k || this.k;\n  this.verified = obj.verified || this.verified;\n  return this;\n};\n\nECDSA.prototype.privkey2pubkey = function() {\n  this.pubkey = this.privkey.toPublicKey();\n};\n\nECDSA.prototype.calci = function() {\n  for (var i = 0; i < 4; i++) {\n    this.sig.i = i;\n    var Qprime;\n    try {\n      Qprime = this.toPublicKey();\n    } catch (e) {\n      console.error(e);\n      continue;\n    }\n\n    if (Qprime.point.eq(this.pubkey.point)) {\n      this.sig.compressed = this.pubkey.compressed;\n      return this;\n    }\n  }\n\n  this.sig.i = undefined;\n  throw new Error('Unable to find valid recovery factor');\n};\n\nECDSA.fromString = function(str) {\n  var obj = JSON.parse(str);\n  return new ECDSA(obj);\n};\n\nECDSA.prototype.randomK = function() {\n  var N = Point.getN();\n  var k;\n  do {\n    k = BN.fromBuffer(Random.getRandomBuffer(32));\n  } while (!(k.lt(N) && k.gt(BN.Zero)));\n  this.k = k;\n  return this;\n};\n\n\n// https://tools.ietf.org/html/rfc6979#section-3.2\nECDSA.prototype.deterministicK = function(badrs) {\n  /* jshint maxstatements: 25 */\n  // if r or s were invalid when this function was used in signing,\n  // we do not want to actually compute r, s here for efficiency, so,\n  // we can increment badrs. explained at end of RFC 6979 section 3.2\n  if (_.isUndefined(badrs)) {\n    badrs = 0;\n  }\n  var v = Buffer.alloc(32);\n  v.fill(0x01);\n  var k = Buffer.alloc(32);\n  k.fill(0x00);\n  var x = this.privkey.bn.toBuffer({\n    size: 32\n  });\n  var hashbuf = this.endian === 'little' ? BufferUtil.reverse(this.hashbuf) : this.hashbuf\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x01]), x, hashbuf]), k);\n  v = Hash.sha256hmac(v, k);\n  v = Hash.sha256hmac(v, k);\n  var T = BN.fromBuffer(v);\n  var N = Point.getN();\n\n  // also explained in 3.2, we must ensure T is in the proper range (0, N)\n  for (var i = 0; i < badrs || !(T.lt(N) && T.gt(BN.Zero)); i++) {\n    k = Hash.sha256hmac(Buffer.concat([v, Buffer.from([0x00])]), k);\n    v = Hash.sha256hmac(v, k);\n    v = Hash.sha256hmac(v, k);\n    T = BN.fromBuffer(v);\n  }\n\n  this.k = T;\n  return this;\n};\n\n// Information about public key recovery:\n// https://bitcointalk.org/index.php?topic=6430.0\n// http://stackoverflow.com/questions/19665491/how-do-i-get-an-ecdsa-public-key-from-just-a-bitcoin-signature-sec1-4-1-6-k\nECDSA.prototype.toPublicKey = function() {\n  /* jshint maxstatements: 25 */\n  var i = this.sig.i;\n  $.checkArgument(i === 0 || i === 1 || i === 2 || i === 3, new Error('i must be equal to 0, 1, 2, or 3'));\n\n  var e = BN.fromBuffer(this.hashbuf);\n  var r = this.sig.r;\n  var s = this.sig.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = i & 1;\n\n  // The more significant bit specifies whether we should use the\n  // first or second candidate key.\n  var isSecondKey = i >> 1;\n\n  var n = Point.getN();\n  var G = Point.getG();\n\n  // 1.1 Let x = r + jn\n  var x = isSecondKey ? r.add(n) : r;\n  var R = Point.fromX(isYOdd, x);\n\n  // 1.4 Check that nR is at infinity\n  var nR = R.mul(n);\n\n  if (!nR.isInfinity()) {\n    throw new Error('nR is not a valid curve point');\n  }\n\n  // Compute -e from e\n  var eNeg = e.neg().umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR - eG)\n  // Q = r^-1 (sR + -eG)\n  var rInv = r.invm(n);\n\n  //var Q = R.multiplyTwo(s, G, eNeg).mul(rInv);\n  var Q = R.mul(s).add(G.mul(eNeg)).mul(rInv);\n\n  var pubkey = PublicKey.fromPoint(Q, this.sig.compressed);\n\n  return pubkey;\n};\n\nECDSA.prototype.sigError = function() {\n  /* jshint maxstatements: 25 */\n  if (!BufferUtil.isBuffer(this.hashbuf) || this.hashbuf.length !== 32) {\n    return 'hashbuf must be a 32 byte buffer';\n  }\n\n  var r = this.sig.r;\n  var s = this.sig.s;\n  if (!(r.gt(BN.Zero) && r.lt(Point.getN())) || !(s.gt(BN.Zero) && s.lt(Point.getN()))) {\n    return 'r and s not in range';\n  }\n\n  var e = BN.fromBuffer(this.hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n  var n = Point.getN();\n  var sinv = s.invm(n);\n  var u1 = sinv.mul(e).umod(n);\n  var u2 = sinv.mul(r).umod(n);\n\n  var p = Point.getG().mulAdd(u1, this.pubkey.point, u2);\n  if (p.isInfinity()) {\n    return 'p is infinity';\n  }\n\n  if (p.getX().umod(n).cmp(r) !== 0) {\n    return 'Invalid signature';\n  } else {\n    return false;\n  }\n};\n\nECDSA.toLowS = function(s) {\n  //enforce low s\n  //see BIP 62, \"low S values in signatures\"\n  if (s.gt(BN.fromBuffer(Buffer.from('7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0', 'hex')))) {\n    s = Point.getN().sub(s);\n  }\n  return s;\n};\n\nECDSA.prototype._findSignature = function(d, e) {\n  var N = Point.getN();\n  var G = Point.getG();\n  // try different values of k until r, s are valid\n  var badrs = 0;\n  var k, Q, r, s;\n  do {\n    if (!this.k || badrs > 0) {\n      this.deterministicK(badrs);\n    }\n    badrs++;\n    k = this.k;\n    Q = G.mul(k);\n    r = Q.x.umod(N);\n    s = k.invm(N).mul(e.add(d.mul(r))).umod(N);\n  } while (r.cmp(BN.Zero) <= 0 || s.cmp(BN.Zero) <= 0);\n\n  s = ECDSA.toLowS(s);\n  return {\n    s: s,\n    r: r\n  };\n\n};\n\nECDSA.prototype.sign = function() {\n  var hashbuf = this.hashbuf;\n  var privkey = this.privkey;\n  var d = privkey.bn;\n\n  $.checkState(hashbuf && privkey && d, new Error('invalid parameters'));\n  $.checkState(BufferUtil.isBuffer(hashbuf) && hashbuf.length === 32, new Error('hashbuf must be a 32 byte buffer'));\n\n  var e = BN.fromBuffer(hashbuf, this.endian ? {\n    endian: this.endian\n  } : undefined);\n\n  var obj = this._findSignature(d, e);\n  obj.compressed = this.pubkey.compressed;\n\n  this.sig = new Signature(obj);\n  return this;\n};\n\nECDSA.prototype.signRandomK = function() {\n  this.randomK();\n  return this.sign();\n};\n\nECDSA.prototype.toString = function() {\n  var obj = {};\n  if (this.hashbuf) {\n    obj.hashbuf = this.hashbuf.toString('hex');\n  }\n  if (this.privkey) {\n    obj.privkey = this.privkey.toString();\n  }\n  if (this.pubkey) {\n    obj.pubkey = this.pubkey.toString();\n  }\n  if (this.sig) {\n    obj.sig = this.sig.toString();\n  }\n  if (this.k) {\n    obj.k = this.k.toString();\n  }\n  return JSON.stringify(obj);\n};\n\nECDSA.prototype.verify = function() {\n  if (!this.sigError()) {\n    this.verified = true;\n  } else {\n    this.verified = false;\n  }\n  return this;\n};\n\nECDSA.sign = function(hashbuf, privkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    privkey: privkey\n  }).sign().sig;\n};\n\nECDSA.verify = function(hashbuf, sig, pubkey, endian) {\n  return ECDSA().set({\n    hashbuf: hashbuf,\n    endian: endian,\n    sig: sig,\n    pubkey: pubkey\n  }).verify().verified;\n};\n\nmodule.exports = ECDSA;\n", "'use strict';\n\nvar BufferWriter = require('./bufferwriter');\nvar BufferReader = require('./bufferreader');\nvar BN = require('../crypto/bn');\n\nvar Varint = function Varint(buf) {\n  if (!(this instanceof Varint))\n    return new Varint(buf);\n  if (Buffer.isBuffer(buf)) {\n    this.buf = buf;\n  } else if (typeof buf === 'number') {\n    var num = buf;\n    this.fromNumber(num);\n  } else if (buf instanceof BN) {\n    var bn = buf;\n    this.fromBN(bn);\n  } else if (buf) {\n    var obj = buf;\n    this.set(obj);\n  }\n};\n\nVarint.prototype.set = function(obj) {\n  this.buf = obj.buf || this.buf;\n  return this;\n};\n\nVarint.prototype.fromString = function(str) {\n  this.set({\n    buf: Buffer.from(str, 'hex')\n  });\n  return this;\n};\n\nVarint.prototype.toString = function() {\n  return this.buf.toString('hex');\n};\n\nVarint.prototype.fromBuffer = function(buf) {\n  this.buf = buf;\n  return this;\n};\n\nVarint.prototype.fromBufferReader = function(br) {\n  this.buf = br.readVarintBuf();\n  return this;\n};\n\nVarint.prototype.fromBN = function(bn) {\n  this.buf = BufferWriter().writeVarintBN(bn).concat();\n  return this;\n};\n\nVarint.prototype.fromNumber = function(num) {\n  this.buf = BufferWriter().writeVarintNum(num).concat();\n  return this;\n};\n\nVarint.prototype.toBuffer = function() {\n  return this.buf;\n};\n\nVarint.prototype.toBN = function() {\n  return BufferReader(this.buf).readVarintBN();\n};\n\nVarint.prototype.toNumber = function() {\n  return BufferReader(this.buf).readVarintNum();\n};\n\nmodule.exports = Varint;\n", "'use strict';\n\nvar _ = require('lodash');\nvar BN = require('../crypto/bn');\nvar BufferUtil = require('../util/buffer');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Hash = require('../crypto/hash');\nvar JSUtil = require('../util/js');\nvar $ = require('../util/preconditions');\n\nvar GENESIS_BITS = 0x1d00ffff;\n\n/**\n * Instantiate a BlockHeader from a Buffer, JSON object, or Object with\n * the properties of the BlockHeader\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {BlockHeader} - An instance of block header\n * @constructor\n */\nvar BlockHeader = function BlockHeader(arg) {\n  if (!(this instanceof BlockHeader)) {\n    return new BlockHeader(arg);\n  }\n  var info = BlockHeader._from(arg);\n  this.version = info.version;\n  this.prevHash = info.prevHash;\n  this.merkleRoot = info.merkleRoot;\n  this.time = info.time;\n  this.timestamp = info.time;\n  this.bits = info.bits;\n  this.nonce = info.nonce;\n\n  if (info.hash) {\n    $.checkState(\n      this.hash === info.hash,\n      'Argument object hash property does not match block hash.'\n    );\n  }\n\n  return this;\n};\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block header data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlockHeader._from = function _from(arg) {\n  var info = {};\n  if (BufferUtil.isBuffer(arg)) {\n    info = BlockHeader._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    info = BlockHeader._fromObject(arg);\n  } else {\n    throw new TypeError('Unrecognized argument for BlockHeader');\n  }\n  return info;\n};\n\n/**\n * @param {Object} - A JSON string\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromObject = function _fromObject(data) {\n  $.checkArgument(data, 'data is required');\n  var prevHash = data.prevHash;\n  var merkleRoot = data.merkleRoot;\n  if (_.isString(data.prevHash)) {\n    prevHash = BufferUtil.reverse(Buffer.from(data.prevHash, 'hex'));\n  }\n  if (_.isString(data.merkleRoot)) {\n    merkleRoot = BufferUtil.reverse(Buffer.from(data.merkleRoot, 'hex'));\n  }\n  var info = {\n    hash: data.hash,\n    version: data.version,\n    prevHash: prevHash,\n    merkleRoot: merkleRoot,\n    time: data.time,\n    timestamp: data.time,\n    bits: data.bits,\n    nonce: data.nonce\n  };\n  return info;\n};\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromObject = function fromObject(obj) {\n  var info = BlockHeader._fromObject(obj);\n  return new BlockHeader(info);\n};\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromRawBlock = function fromRawBlock(data) {\n  if (!BufferUtil.isBuffer(data)) {\n    data = Buffer.from(data, 'binary');\n  }\n  var br = BufferReader(data);\n  br.pos = BlockHeader.Constants.START_OF_HEADER;\n  var info = BlockHeader._fromBufferReader(br);\n  return new BlockHeader(info);\n};\n\n/**\n * @param {Buffer} - A buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBuffer = function fromBuffer(buf) {\n  var info = BlockHeader._fromBufferReader(BufferReader(buf));\n  return new BlockHeader(info);\n};\n\n/**\n * @param {string} - A hex encoded buffer of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromString = function fromString(str) {\n  var buf = Buffer.from(str, 'hex');\n  return BlockHeader.fromBuffer(buf);\n};\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {Object} - An object representing block header data\n * @private\n */\nBlockHeader._fromBufferReader = function _fromBufferReader(br) {\n  var info = {};\n  info.version = br.readInt32LE();\n  info.prevHash = br.read(32);\n  info.merkleRoot = br.read(32);\n  info.time = br.readUInt32LE();\n  info.bits = br.readUInt32LE();\n  info.nonce = br.readUInt32LE();\n  return info;\n};\n\n/**\n * @param {BufferReader} - A BufferReader of the block header\n * @returns {BlockHeader} - An instance of block header\n */\nBlockHeader.fromBufferReader = function fromBufferReader(br) {\n  var info = BlockHeader._fromBufferReader(br);\n  return new BlockHeader(info);\n};\n\n/**\n * @returns {Object} - A plain object of the BlockHeader\n */\nBlockHeader.prototype.toObject = BlockHeader.prototype.toJSON = function toObject() {\n  return {\n    hash: this.hash,\n    version: this.version,\n    prevHash: BufferUtil.reverse(this.prevHash).toString('hex'),\n    merkleRoot: BufferUtil.reverse(this.merkleRoot).toString('hex'),\n    time: this.time,\n    bits: this.bits,\n    nonce: this.nonce\n  };\n};\n\n/**\n * @returns {Buffer} - A Buffer of the BlockHeader\n */\nBlockHeader.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n\n/**\n * @returns {string} - A hex encoded string of the BlockHeader\n */\nBlockHeader.prototype.toString = function toString() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * @param {BufferWriter} - An existing instance BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the BlockHeader\n */\nBlockHeader.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n  bw.writeInt32LE(this.version);\n  bw.write(this.prevHash);\n  bw.write(this.merkleRoot);\n  bw.writeUInt32LE(this.time);\n  bw.writeUInt32LE(this.bits);\n  bw.writeUInt32LE(this.nonce);\n  return bw;\n};\n\n/**\n * Returns the target difficulty for this block\n * @param {Number} bits\n * @returns {BN} An instance of BN with the decoded difficulty bits\n */\nBlockHeader.prototype.getTargetDifficulty = function getTargetDifficulty(bits) {\n  bits = bits || this.bits;\n\n  var target = new BN(bits & 0xffffff);\n  var mov = 8 * ((bits >>> 24) - 3);\n  while (mov-- > 0) {\n    target = target.mul(new BN(2));\n  }\n  return target;\n};\n\n/**\n * @link https://en.bitcoin.it/wiki/Difficulty\n * @return {Number}\n */\nBlockHeader.prototype.getDifficulty = function getDifficulty() {\n  var difficulty1TargetBN = this.getTargetDifficulty(GENESIS_BITS).mul(new BN(Math.pow(10, 8)));\n  var currentTargetBN = this.getTargetDifficulty();\n\n  var difficultyString = difficulty1TargetBN.div(currentTargetBN).toString(10);\n  var decimalPos = difficultyString.length - 8;\n  difficultyString = difficultyString.slice(0, decimalPos) + '.' + difficultyString.slice(decimalPos);\n\n  return parseFloat(difficultyString);\n};\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlockHeader.prototype._getHash = function hash() {\n  var buf = this.toBuffer();\n  return Hash.sha256sha256(buf);\n};\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function() {\n    if (!this._id) {\n      this._id = BufferReader(this._getHash()).readReverse().toString('hex');\n    }\n    return this._id;\n  },\n  set: _.noop\n};\nObject.defineProperty(BlockHeader.prototype, 'id', idProperty);\nObject.defineProperty(BlockHeader.prototype, 'hash', idProperty);\n\n/**\n * @returns {Boolean} - If timestamp is not too far in the future\n */\nBlockHeader.prototype.validTimestamp = function validTimestamp() {\n  var currentTime = Math.round(new Date().getTime() / 1000);\n  if (this.time > currentTime + BlockHeader.Constants.MAX_TIME_OFFSET) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * @returns {Boolean} - If the proof-of-work hash satisfies the target difficulty\n */\nBlockHeader.prototype.validProofOfWork = function validProofOfWork() {\n  var pow = new BN(this.id, 'hex');\n  var target = this.getTargetDifficulty();\n\n  if (pow.cmp(target) > 0) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlockHeader.prototype.inspect = function inspect() {\n  return '<BlockHeader ' + this.id + '>';\n};\n\nBlockHeader.Constants = {\n  START_OF_HEADER: 8, // Start buffer position in raw block data\n  MAX_TIME_OFFSET: 2 * 60 * 60, // The max a timestamp can be in the future\n  LARGEST_HASH: new BN('10000000000000000000000000000000000000000000000000000000000000000', 'hex')\n};\n\nmodule.exports = BlockHeader;\n", "'use strict';\n\nvar _ = require('lodash');\nvar BlockHeader = require('./blockheader');\nvar BN = require('../crypto/bn');\nvar BufferUtil = require('../util/buffer');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Hash = require('../crypto/hash');\nvar Transaction = require('../transaction');\nvar $ = require('../util/preconditions');\n\n/**\n * Instantiate a Block from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object\n * @returns {Block}\n * @constructor\n */\nfunction Block(arg) {\n  if (!(this instanceof Block)) {\n    return new Block(arg);\n  }\n  _.extend(this, Block._from(arg));\n  return this;\n}\n\n// https://github.com/bitcoin/bitcoin/blob/b5fa132329f0377d787a4a21c1686609c2bfaece/src/primitives/block.h#L14\nBlock.MAX_BLOCK_SIZE = 1000000;\n\n/**\n * @param {*} - A Buffer, JSON string or Object\n * @returns {Object} - An object representing block data\n * @throws {TypeError} - If the argument was not recognized\n * @private\n */\nBlock._from = function _from(arg) {\n  var info = {};\n  if (BufferUtil.isBuffer(arg)) {\n    info = Block._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    info = Block._fromObject(arg);\n  } else {\n    throw new TypeError('Unrecognized argument for Block');\n  }\n  return info;\n};\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Object} - An object representing block data\n * @private\n */\nBlock._fromObject = function _fromObject(data) {\n  var transactions = [];\n  data.transactions.forEach(function(tx) {\n    if (tx instanceof Transaction) {\n      transactions.push(tx);\n    } else {\n      transactions.push(Transaction().fromObject(tx));\n    }\n  });\n  var info = {\n    header: BlockHeader.fromObject(data.header),\n    transactions: transactions\n  };\n  return info;\n};\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nBlock.fromObject = function fromObject(obj) {\n  var info = Block._fromObject(obj);\n  return new Block(info);\n};\n\n/**\n * @param {BufferReader} - Block data\n * @returns {Object} - An object representing the block data\n * @private\n */\nBlock._fromBufferReader = function _fromBufferReader(br) {\n  var info = {};\n  $.checkState(!br.finished(), 'No block data received');\n  info.header = BlockHeader.fromBufferReader(br);\n  var transactions = br.readVarintNum();\n  info.transactions = [];\n  for (var i = 0; i < transactions; i++) {\n    info.transactions.push(Transaction().fromBufferReader(br));\n  }\n  return info;\n};\n\n/**\n * @param {BufferReader} - A buffer reader of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBufferReader = function fromBufferReader(br) {\n  $.checkArgument(br, 'br is required');\n  var info = Block._fromBufferReader(br);\n  return new Block(info);\n};\n\n/**\n * @param {Buffer} - A buffer of the block\n * @returns {Block} - An instance of block\n */\nBlock.fromBuffer = function fromBuffer(buf) {\n  return Block.fromBufferReader(new BufferReader(buf));\n};\n\n/**\n * @param {string} - str - A hex encoded string of the block\n * @returns {Block} - A hex encoded string of the block\n */\nBlock.fromString = function fromString(str) {\n  var buf = Buffer.from(str, 'hex');\n  return Block.fromBuffer(buf);\n};\n\n/**\n * @param {Binary} - Raw block binary data or buffer\n * @returns {Block} - An instance of block\n */\nBlock.fromRawBlock = function fromRawBlock(data) {\n  if (!BufferUtil.isBuffer(data)) {\n    data = Buffer.from(data, 'binary');\n  }\n  var br = BufferReader(data);\n  br.pos = Block.Values.START_OF_BLOCK;\n  var info = Block._fromBufferReader(br);\n  return new Block(info);\n};\n\n/**\n * @returns {Object} - A plain object with the block properties\n */\nBlock.prototype.toObject = Block.prototype.toJSON = function toObject() {\n  var transactions = [];\n  this.transactions.forEach(function(tx) {\n    transactions.push(tx.toObject());\n  });\n  return {\n    header: this.header.toObject(),\n    transactions: transactions\n  };\n};\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nBlock.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n\n/**\n * @returns {string} - A hex encoded string of the block\n */\nBlock.prototype.toString = function toString() {\n  return this.toBuffer().toString('hex');\n};\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the Block\n */\nBlock.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n  bw.write(this.header.toBuffer());\n  bw.writeVarintNum(this.transactions.length);\n  for (var i = 0; i < this.transactions.length; i++) {\n    this.transactions[i].toBufferWriter(bw);\n  }\n  return bw;\n};\n\n/**\n * Will iterate through each transaction and return an array of hashes\n * @returns {Array} - An array with transaction hashes\n */\nBlock.prototype.getTransactionHashes = function getTransactionHashes() {\n  var hashes = [];\n  if (this.transactions.length === 0) {\n    return [Block.Values.NULL_HASH];\n  }\n  for (var t = 0; t < this.transactions.length; t++) {\n    hashes.push(this.transactions[t]._getHash());\n  }\n  return hashes;\n};\n\n/**\n * Will build a merkle tree of all the transactions, ultimately arriving at\n * a single point, the merkle root.\n * @link https://en.bitcoin.it/wiki/Protocol_specification#Merkle_Trees\n * @returns {Array} - An array with each level of the tree after the other.\n */\nBlock.prototype.getMerkleTree = function getMerkleTree() {\n\n  var tree = this.getTransactionHashes();\n\n  var j = 0;\n  for (var size = this.transactions.length; size > 1; size = Math.floor((size + 1) / 2)) {\n    for (var i = 0; i < size; i += 2) {\n      var i2 = Math.min(i + 1, size - 1);\n      var buf = Buffer.concat([tree[j + i], tree[j + i2]]);\n      tree.push(Hash.sha256sha256(buf));\n    }\n    j += size;\n  }\n\n  return tree;\n};\n\n/**\n * Calculates the merkleRoot from the transactions.\n * @returns {Buffer} - A buffer of the merkle root hash\n */\nBlock.prototype.getMerkleRoot = function getMerkleRoot() {\n  var tree = this.getMerkleTree();\n  return tree[tree.length - 1];\n};\n\n/**\n * Verifies that the transactions in the block match the header merkle root\n * @returns {Boolean} - If the merkle roots match\n */\nBlock.prototype.validMerkleRoot = function validMerkleRoot() {\n\n  var h = new BN(this.header.merkleRoot.toString('hex'), 'hex');\n  var c = new BN(this.getMerkleRoot().toString('hex'), 'hex');\n\n  if (h.cmp(c) !== 0) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * @returns {Buffer} - The little endian hash buffer of the header\n */\nBlock.prototype._getHash = function() {\n  return this.header._getHash();\n};\n\nvar idProperty = {\n  configurable: false,\n  enumerable: true,\n  /**\n   * @returns {string} - The big endian hash buffer of the header\n   */\n  get: function() {\n    if (!this._id) {\n      this._id = this.header.id;\n    }\n    return this._id;\n  },\n  set: _.noop\n};\nObject.defineProperty(Block.prototype, 'id', idProperty);\nObject.defineProperty(Block.prototype, 'hash', idProperty);\n\n/**\n * @returns {string} - A string formatted for the console\n */\nBlock.prototype.inspect = function inspect() {\n  return '<Block ' + this.id + '>';\n};\n\nBlock.Values = {\n  START_OF_BLOCK: 8, // Start of block in raw block data\n  NULL_HASH: Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex')\n};\n\nmodule.exports = Block;\n", "'use strict';\n\nvar _ = require('lodash');\nvar BlockHeader = require('./blockheader');\nvar BufferUtil = require('../util/buffer');\nvar BufferReader = require('../encoding/bufferreader');\nvar BufferWriter = require('../encoding/bufferwriter');\nvar Hash = require('../crypto/hash');\nvar JSUtil = require('../util/js');\nvar Transaction = require('../transaction');\nvar errors = require('../errors');\nvar $ = require('../util/preconditions');\n\n/**\n * Instantiate a MerkleBlock from a Buffer, JSON object, or Object with\n * the properties of the Block\n *\n * @param {*} - A Buffer, JSON string, or Object representing a MerkleBlock\n * @returns {MerkleBlock}\n * @constructor\n */\nfunction MerkleBlock(arg) {\n  /* jshint maxstatements: 18 */\n\n  if (!(this instanceof MerkleBlock)) {\n    return new MerkleBlock(arg);\n  }\n\n  var info = {};\n  if (BufferUtil.isBuffer(arg)) {\n    info = MerkleBlock._fromBufferReader(BufferReader(arg));\n  } else if (_.isObject(arg)) {\n    var header;\n    if(arg.header instanceof BlockHeader) {\n      header = arg.header;\n    } else {\n      header = BlockHeader.fromObject(arg.header);\n    }\n    info = {\n      /**\n       * @name MerkleBlock#header\n       * @type {BlockHeader}\n       */\n      header: header,\n      /**\n       * @name MerkleBlock#numTransactions\n       * @type {Number}\n       */\n      numTransactions: arg.numTransactions,\n      /**\n       * @name MerkleBlock#hashes\n       * @type {String[]}\n       */\n      hashes: arg.hashes,\n      /**\n       * @name MerkleBlock#flags\n       * @type {Number[]}\n       */\n      flags: arg.flags\n    };\n  } else {\n    throw new TypeError('Unrecognized argument for MerkleBlock');\n  }\n  _.extend(this,info);\n  this._flagBitsUsed = 0;\n  this._hashesUsed = 0;\n\n  return this;\n}\n\n/**\n * @param {Buffer} - MerkleBlock data in a Buffer object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBuffer = function fromBuffer(buf) {\n  return MerkleBlock.fromBufferReader(BufferReader(buf));\n};\n\n/**\n * @param {BufferReader} - MerkleBlock data in a BufferReader object\n * @returns {MerkleBlock} - A MerkleBlock object\n */\nMerkleBlock.fromBufferReader = function fromBufferReader(br) {\n  return new MerkleBlock(MerkleBlock._fromBufferReader(br));\n};\n\n/**\n * @returns {Buffer} - A buffer of the block\n */\nMerkleBlock.prototype.toBuffer = function toBuffer() {\n  return this.toBufferWriter().concat();\n};\n\n/**\n * @param {BufferWriter} - An existing instance of BufferWriter\n * @returns {BufferWriter} - An instance of BufferWriter representation of the MerkleBlock\n */\nMerkleBlock.prototype.toBufferWriter = function toBufferWriter(bw) {\n  if (!bw) {\n    bw = new BufferWriter();\n  }\n  bw.write(this.header.toBuffer());\n  bw.writeUInt32LE(this.numTransactions);\n  bw.writeVarintNum(this.hashes.length);\n  for (var i = 0; i < this.hashes.length; i++) {\n    bw.write(Buffer.from(this.hashes[i], 'hex'));\n  }\n  bw.writeVarintNum(this.flags.length);\n  for (i = 0; i < this.flags.length; i++) {\n    bw.writeUInt8(this.flags[i]);\n  }\n  return bw;\n};\n\n/**\n * @returns {Object} - A plain object with the MerkleBlock properties\n */\nMerkleBlock.prototype.toObject = MerkleBlock.prototype.toJSON = function toObject() {\n  return {\n    header: this.header.toObject(),\n    numTransactions: this.numTransactions,\n    hashes: this.hashes,\n    flags: this.flags\n  };\n};\n\n/**\n * Verify that the MerkleBlock is valid\n * @returns {Boolean} - True/False whether this MerkleBlock is Valid\n */\nMerkleBlock.prototype.validMerkleTree = function validMerkleTree() {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array');\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array');\n\n  // Can't have more hashes than numTransactions\n  if(this.hashes.length > this.numTransactions) {\n    return false;\n  }\n\n  // Can't have more flag bits than num hashes\n  if(this.flags.length * 8 < this.hashes.length) {\n    return false;\n  }\n\n  var height = this._calcTreeHeight();\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 };\n  var root = this._traverseMerkleTree(height, 0, opts);\n  if(opts.hashesUsed !== this.hashes.length) {\n    return false;\n  }\n  return BufferUtil.equals(root, this.header.merkleRoot);\n};\n\n/**\n * Return a list of all the txs hash that match the filter\n * @returns {Array} - txs hash that match the filter\n */\nMerkleBlock.prototype.filterdTxsHash = function filterdTxsHash() {\n  $.checkState(_.isArray(this.flags), 'MerkleBlock flags is not an array');\n  $.checkState(_.isArray(this.hashes), 'MerkleBlock hashes is not an array');\n\n  // Can't have more hashes than numTransactions\n  if(this.hashes.length > this.numTransactions) {\n    throw new errors.MerkleBlock.InvalidMerkleTree();\n  }\n\n  // Can't have more flag bits than num hashes\n  if(this.flags.length * 8 < this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree();\n  }\n\n  // If there is only one hash the filter do not match any txs in the block\n  if(this.hashes.length === 1) {\n    return [];\n  };\n\n  var height = this._calcTreeHeight();\n  var opts = { hashesUsed: 0, flagBitsUsed: 0 };\n  var txs = this._traverseMerkleTree(height, 0, opts, true);\n  if(opts.hashesUsed !== this.hashes.length) {\n    throw new errors.MerkleBlock.InvalidMerkleTree();\n  }\n  return txs;\n};\n\n/**\n * Traverse a the tree in this MerkleBlock, validating it along the way\n * Modeled after Bitcoin Core merkleblock.cpp TraverseAndExtract()\n * @param {Number} - depth - Current height\n * @param {Number} - pos - Current position in the tree\n * @param {Object} - opts - Object with values that need to be mutated throughout the traversal\n * @param {Boolean} - checkForTxs - if true return opts.txs else return the Merkle Hash\n * @param {Number} - opts.flagBitsUsed - Number of flag bits used, should start at 0\n * @param {Number} - opts.hashesUsed - Number of hashes used, should start at 0\n * @param {Array} - opts.txs - Will finish populated by transactions found during traversal that match the filter\n * @returns {Buffer|null} - Buffer containing the Merkle Hash for that height\n * @returns {Array} - transactions found during traversal that match the filter\n * @private\n */\nMerkleBlock.prototype._traverseMerkleTree = function traverseMerkleTree(depth, pos, opts, checkForTxs) {\n  /* jshint maxcomplexity:  12*/\n  /* jshint maxstatements: 20 */\n\n  opts = opts || {};\n  opts.txs = opts.txs || [];\n  opts.flagBitsUsed = opts.flagBitsUsed || 0;\n  opts.hashesUsed = opts.hashesUsed || 0;\n  var checkForTxs = checkForTxs || false;\n\n  if(opts.flagBitsUsed > this.flags.length * 8) {\n    return null;\n  }\n  var isParentOfMatch = (this.flags[opts.flagBitsUsed >> 3] >>> (opts.flagBitsUsed++ & 7)) & 1;\n  if(depth === 0 || !isParentOfMatch) {\n    if(opts.hashesUsed >= this.hashes.length) {\n      return null;\n    }\n    var hash = this.hashes[opts.hashesUsed++];\n    if(depth === 0 && isParentOfMatch) {\n      opts.txs.push(hash);\n    }\n    return Buffer.from(hash, 'hex');\n  } else {\n    var left = this._traverseMerkleTree(depth-1, pos*2, opts);\n    var right = left;\n    if(pos*2+1 < this._calcTreeWidth(depth-1)) {\n      right = this._traverseMerkleTree(depth-1, pos*2+1, opts);\n    }\n    if (checkForTxs){\n      return opts.txs;\n    } else {\n      return Hash.sha256sha256(new Buffer.concat([left, right]));\n    };\n  }\n};\n\n/** Calculates the width of a merkle tree at a given height.\n *  Modeled after Bitcoin Core merkleblock.h CalcTreeWidth()\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Width of the tree at a given height\n * @private\n */\nMerkleBlock.prototype._calcTreeWidth = function calcTreeWidth(height) {\n  return (this.numTransactions + (1 << height) - 1) >> height;\n};\n\n/** Calculates the height of the merkle tree in this MerkleBlock\n * @param {Number} - Height at which we want the tree width\n * @returns {Number} - Height of the merkle tree in this MerkleBlock\n * @private\n */\nMerkleBlock.prototype._calcTreeHeight = function calcTreeHeight() {\n  var height = 0;\n  while (this._calcTreeWidth(height) > 1) {\n    height++;\n  }\n  return height;\n};\n\n/**\n * @param {Transaction|String} - Transaction or Transaction ID Hash\n * @returns {Boolean} - return true/false if this MerkleBlock has the TX or not\n * @private\n */\nMerkleBlock.prototype.hasTransaction = function hasTransaction(tx) {\n  $.checkArgument(!_.isUndefined(tx), 'tx cannot be undefined');\n  $.checkArgument(tx instanceof Transaction || typeof tx === 'string',\n      'Invalid tx given, tx must be a \"string\" or \"Transaction\"');\n\n  var hash = tx;\n  if(tx instanceof Transaction) {\n    // We need to reverse the id hash for the lookup\n    hash = BufferUtil.reverse(Buffer.from(tx.id, 'hex')).toString('hex');\n  }\n\n  var txs = [];\n  var height = this._calcTreeHeight();\n  this._traverseMerkleTree(height, 0, { txs: txs });\n  return txs.indexOf(hash) !== -1;\n};\n\n/**\n * @param {Buffer} - MerkleBlock data\n * @returns {Object} - An Object representing merkleblock data\n * @private\n */\nMerkleBlock._fromBufferReader = function _fromBufferReader(br) {\n  $.checkState(!br.finished(), 'No merkleblock data received');\n  var info = {};\n  info.header = BlockHeader.fromBufferReader(br);\n  info.numTransactions = br.readUInt32LE();\n  var numHashes = br.readVarintNum();\n  info.hashes = [];\n  for (var i = 0; i < numHashes; i++) {\n    info.hashes.push(br.read(32).toString('hex'));\n  }\n  var numFlags = br.readVarintNum();\n  info.flags = [];\n  for (i = 0; i < numFlags; i++) {\n    info.flags.push(br.readUInt8());\n  }\n  return info;\n};\n\n/**\n * @param {Object} - A plain JavaScript object\n * @returns {Block} - An instance of block\n */\nMerkleBlock.fromObject = function fromObject(obj) {\n  return new MerkleBlock(obj);\n};\n\nmodule.exports = MerkleBlock;\n", "module.exports = require('./block');\n\nmodule.exports.BlockHeader = require('./blockheader');\nmodule.exports.MerkleBlock = require('./merkleblock');\n", "'use strict';\n\nvar _ = require('lodash');\nvar $ = require('./util/preconditions');\n\nvar BN = require('./crypto/bn');\nvar Base58 = require('./encoding/base58');\nvar Base58Check = require('./encoding/base58check');\nvar Hash = require('./crypto/hash');\nvar HDPrivateKey = require('./hdprivatekey');\nvar Network = require('./networks');\nvar Point = require('./crypto/point');\nvar PublicKey = require('./publickey');\n\nvar bitcoreErrors = require('./errors');\nvar errors = bitcoreErrors;\nvar hdErrors = bitcoreErrors.HDPublicKey;\nvar assert = require('assert');\n\nvar JSUtil = require('./util/js');\nvar BufferUtil = require('./util/buffer');\n\n/**\n * The representation of an hierarchically derived public key.\n *\n * See https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {Object|string|Buffer} arg\n */\nfunction HDPublicKey(arg) {\n  /* jshint maxcomplexity: 12 */\n  /* jshint maxstatements: 20 */\n  if (arg instanceof HDPublicKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPublicKey)) {\n    return new HDPublicKey(arg);\n  }\n  if (arg) {\n    if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n      var error = HDPublicKey.getSerializedError(arg);\n      if (!error) {\n        return this._buildFromSerialized(arg);\n      } else if (BufferUtil.isBuffer(arg) && !HDPublicKey.getSerializedError(arg.toString())) {\n        return this._buildFromSerialized(arg.toString());\n      } else {\n        if (error instanceof hdErrors.ArgumentIsPrivateExtended) {\n          return new HDPrivateKey(arg).hdPublicKey;\n        }\n        throw error;\n      }\n    } else {\n      if (_.isObject(arg)) {\n        if (arg instanceof HDPrivateKey) {\n          return this._buildFromPrivate(arg);\n        } else {\n          return this._buildFromObject(arg);\n        }\n      } else {\n        throw new hdErrors.UnrecognizedArgument(arg);\n      }\n    }\n  } else {\n    throw new hdErrors.MustSupplyArgument();\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @return {boolean}\n */\nHDPublicKey.isValidPath = function(arg) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPublicKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    return arg >= 0 && arg < HDPublicKey.Hardened;\n  }\n\n  return false;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild instead.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.derive(0).derive(1).derive(2);\n * var copy_of_child_0_1_2 = parent.derive(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.derive = function(arg, hardened) {\n  return this.deriveChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derivated child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same public key), \"m/0/1/40/2/1000\".\n *\n * Note that hardened keys can't be derived from a public extended key.\n *\n * If the first argument is a number, the child with that index will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPublicKey('xpub...');\n * var child_0_1_2 = parent.deriveChild(0).deriveChild(1).deriveChild(2);\n * var copy_of_child_0_1_2 = parent.deriveChild(\"m/0/1/2\");\n * assert(child_0_1_2.xprivkey === copy_of_child_0_1_2);\n * ```\n *\n * @param {string|number} arg\n */\nHDPublicKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPublicKey.prototype._deriveWithNumber = function(index, hardened) {\n  if (index >= HDPublicKey.Hardened || hardened) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  }\n  if (index < 0) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {size: 32});\n  var chainCode = hash.slice(32, 64);\n\n  var publicKey;\n  try {\n    publicKey = PublicKey.fromPoint(Point.getG().mul(leftPart).add(this.publicKey.point));\n  } catch (e) {\n    return this._deriveWithNumber(index + 1);\n  }\n\n  var derived = new HDPublicKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    publicKey: publicKey\n  });\n\n  return derived;\n};\n\nHDPublicKey.prototype._deriveFromString = function(path) {\n  /* jshint maxcomplexity: 8 */\n  if (_.includes(path, \"'\")) {\n    throw new hdErrors.InvalidIndexCantDeriveHardened();\n  } else if (!HDPublicKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized public key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPublicKey.isValidSerialized = function(data, network) {\n  return _.isNull(HDPublicKey.getSerializedError(data, network));\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized public key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized public key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors|null}\n */\nHDPublicKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  /* jshint maxstatements: 20 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('expected buffer or string');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPublicKey.DataSize) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPublicKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  var version = BufferUtil.integerFromBuffer(data.slice(0, 4));\n  if (version === Network.livenet.xprivkey || version === Network.testnet.xprivkey ) {\n    return new hdErrors.ArgumentIsPrivateExtended();\n  }\n  return null;\n};\n\nHDPublicKey._validateNetwork = function(data, networkArg) {\n  var network = Network.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd);\n  if (BufferUtil.integerFromBuffer(version) !== network.xpubkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPublicKey.prototype._buildFromPrivate = function (arg) {\n  var args = _.clone(arg._buffers);\n  var point = Point.getG().mul(BN.fromBuffer(args.privateKey));\n  args.publicKey = Point.pointToCompressed(point);\n  args.version = BufferUtil.integerAsBuffer(Network.get(BufferUtil.integerFromBuffer(args.version)).xpubkey);\n  args.privateKey = undefined;\n  args.checksum = undefined;\n  args.xprivkey = undefined;\n  return this._buildFromBuffers(args);\n};\n\nHDPublicKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 10 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Network.get(arg.network).xpubkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode,'hex') : arg.chainCode,\n    publicKey: _.isString(arg.publicKey) ? Buffer.from(arg.publicKey,'hex') :\n      BufferUtil.isBuffer(arg.publicKey) ? arg.publicKey : arg.publicKey.toBuffer(),\n    checksum: _.isNumber(arg.checksum) ? BufferUtil.integerAsBuffer(arg.checksum) : arg.checksum\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPublicKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPublicKey.VersionStart, HDPublicKey.VersionEnd),\n    depth: decoded.slice(HDPublicKey.DepthStart, HDPublicKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPublicKey.ParentFingerPrintStart,\n                                     HDPublicKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPublicKey.ChildIndexStart, HDPublicKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPublicKey.ChainCodeStart, HDPublicKey.ChainCodeEnd),\n    publicKey: decoded.slice(HDPublicKey.PublicKeyStart, HDPublicKey.PublicKeyEnd),\n    checksum: decoded.slice(HDPublicKey.ChecksumStart, HDPublicKey.ChecksumEnd),\n    xpubkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.publicKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xpubkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPublicKey} this\n */\nHDPublicKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPublicKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    arg.publicKey\n  ];\n  var concat = BufferUtil.concat(sequence);\n  var checksum = Base58Check.checksum(concat);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = checksum;\n  } else {\n    if (arg.checksum.toString('hex') !== checksum.toString('hex')) {\n      throw new errors.InvalidB58Checksum(concat, checksum);\n    }\n  }\n  var network = Network.get(BufferUtil.integerFromBuffer(arg.version));\n\n  var xpubkey;\n  xpubkey = Base58Check.encode(BufferUtil.concat(sequence));\n  arg.xpubkey = Buffer.from(xpubkey);\n\n  var publicKey = new PublicKey(arg.publicKey, {network: network});\n  var size = HDPublicKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xpubkey: xpubkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  return this;\n};\n\nHDPublicKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer, it\\'s ' + typeof buff);\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPublicKey.VersionSize);\n  checkBuffer('depth', HDPublicKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPublicKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPublicKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPublicKey.ChainCodeSize);\n  checkBuffer('publicKey', HDPublicKey.PublicKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPublicKey.CheckSumSize);\n  }\n};\n\nHDPublicKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPublicKey(arg);\n};\n\nHDPublicKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPublicKey(arg);\n};\n\n/**\n * Returns the base58 checked representation of the public key\n * @return {string} a string starting with \"xpub...\" in livenet\n */\nHDPublicKey.prototype.toString = function() {\n  return this.xpubkey;\n};\n\n/**\n * Returns the console representation of this extended public key.\n * @return string\n */\nHDPublicKey.prototype.inspect = function() {\n  return '<HDPublicKey: ' + this.xpubkey + '>';\n};\n\n/**\n * Returns a plain JavaScript object with information to reconstruct a key.\n *\n * Fields are: <ul>\n *  <li> network: 'livenet' or 'testnet'\n *  <li> depth: a number from 0 to 255, the depth to the master extended key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of the public key\n *  <li> fingerPrint: a number of 32 bits taken from the hash of this key's\n *  <li>     parent's public key\n *  <li> childIndex: index with which this key was derived\n *  <li> chainCode: string in hexa encoding used for derivation\n *  <li> publicKey: string, hexa encoded, in compressed key format\n *  <li> checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n *  <li> xpubkey: the string with the base58 representation of this extended key\n *  <li> checksum: the base58 checksum of xpubkey\n * </ul>\n */\nHDPublicKey.prototype.toObject = HDPublicKey.prototype.toJSON = function toObject() {\n  return {\n    network: Network.get(BufferUtil.integerFromBuffer(this._buffers.version)).name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    publicKey: this.publicKey.toString(),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xpubkey: this.xpubkey\n  };\n};\n\n/**\n * Create a HDPublicKey from a buffer argument\n *\n * @param {Buffer} arg\n * @return {HDPublicKey}\n */\nHDPublicKey.fromBuffer = function(arg) {\n  return new HDPublicKey(arg);\n};\n\n/**\n * Return a buffer representation of the xpubkey\n *\n * @return {Buffer}\n */\nHDPublicKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xpubkey);\n};\n\nHDPublicKey.Hardened = 0x80000000;\nHDPublicKey.RootElementAlias = ['m', 'M'];\n\nHDPublicKey.VersionSize = 4;\nHDPublicKey.DepthSize = 1;\nHDPublicKey.ParentFingerPrintSize = 4;\nHDPublicKey.ChildIndexSize = 4;\nHDPublicKey.ChainCodeSize = 32;\nHDPublicKey.PublicKeySize = 33;\nHDPublicKey.CheckSumSize = 4;\n\nHDPublicKey.DataSize = 78;\nHDPublicKey.SerializedByteSize = 82;\n\nHDPublicKey.VersionStart           = 0;\nHDPublicKey.VersionEnd             = HDPublicKey.VersionStart + HDPublicKey.VersionSize;\nHDPublicKey.DepthStart             = HDPublicKey.VersionEnd;\nHDPublicKey.DepthEnd               = HDPublicKey.DepthStart + HDPublicKey.DepthSize;\nHDPublicKey.ParentFingerPrintStart = HDPublicKey.DepthEnd;\nHDPublicKey.ParentFingerPrintEnd   = HDPublicKey.ParentFingerPrintStart + HDPublicKey.ParentFingerPrintSize;\nHDPublicKey.ChildIndexStart        = HDPublicKey.ParentFingerPrintEnd;\nHDPublicKey.ChildIndexEnd          = HDPublicKey.ChildIndexStart + HDPublicKey.ChildIndexSize;\nHDPublicKey.ChainCodeStart         = HDPublicKey.ChildIndexEnd;\nHDPublicKey.ChainCodeEnd           = HDPublicKey.ChainCodeStart + HDPublicKey.ChainCodeSize;\nHDPublicKey.PublicKeyStart         = HDPublicKey.ChainCodeEnd;\nHDPublicKey.PublicKeyEnd           = HDPublicKey.PublicKeyStart + HDPublicKey.PublicKeySize;\nHDPublicKey.ChecksumStart          = HDPublicKey.PublicKeyEnd;\nHDPublicKey.ChecksumEnd            = HDPublicKey.ChecksumStart + HDPublicKey.CheckSumSize;\n\nassert(HDPublicKey.PublicKeyEnd === HDPublicKey.DataSize);\nassert(HDPublicKey.ChecksumEnd === HDPublicKey.SerializedByteSize);\n\nmodule.exports = HDPublicKey;\n", "'use strict';\n\n\nvar assert = require('assert');\nvar buffer = require('buffer');\nvar _ = require('lodash');\nvar $ = require('./util/preconditions');\n\nvar BN = require('./crypto/bn');\nvar Base58 = require('./encoding/base58');\nvar Base58Check = require('./encoding/base58check');\nvar Hash = require('./crypto/hash');\nvar Network = require('./networks');\nvar Point = require('./crypto/point');\nvar PrivateKey = require('./privatekey');\nvar Random = require('./crypto/random');\n\nvar errors = require('./errors');\nvar hdErrors = errors.HDPrivateKey;\nvar BufferUtil = require('./util/buffer');\nvar JSUtil = require('./util/js');\n\nvar MINIMUM_ENTROPY_BITS = 128;\nvar BITS_TO_BYTES = 1 / 8;\nvar MAXIMUM_ENTROPY_BITS = 512;\n\n\n/**\n * Represents an instance of an hierarchically derived private key.\n *\n * More info on https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki\n *\n * @constructor\n * @param {string|Buffer|Object} arg\n */\nfunction HDPrivateKey(arg) {\n  /* jshint maxcomplexity: 10 */\n  if (arg instanceof HDPrivateKey) {\n    return arg;\n  }\n  if (!(this instanceof HDPrivateKey)) {\n    return new HDPrivateKey(arg);\n  }\n  if (!arg) {\n    return this._generateRandomly();\n  }\n\n  if (Network.get(arg)) {\n    return this._generateRandomly(arg);\n  } else if (_.isString(arg) || BufferUtil.isBuffer(arg)) {\n    if (HDPrivateKey.isValidSerialized(arg)) {\n      this._buildFromSerialized(arg);\n    } else if (JSUtil.isValidJSON(arg)) {\n      this._buildFromJSON(arg);\n    } else if (BufferUtil.isBuffer(arg) && HDPrivateKey.isValidSerialized(arg.toString())) {\n      this._buildFromSerialized(arg.toString());\n    } else {\n      throw HDPrivateKey.getSerializedError(arg);\n    }\n  } else if (_.isObject(arg)) {\n    this._buildFromObject(arg);\n  } else {\n    throw new hdErrors.UnrecognizedArgument(arg);\n  }\n}\n\n/**\n * Verifies that a given path is valid.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n * @return {boolean}\n */\nHDPrivateKey.isValidPath = function(arg, hardened) {\n  if (_.isString(arg)) {\n    var indexes = HDPrivateKey._getDerivationIndexes(arg);\n    return indexes !== null && _.every(indexes, HDPrivateKey.isValidPath);\n  }\n\n  if (_.isNumber(arg)) {\n    if (arg < HDPrivateKey.Hardened && hardened === true) {\n      arg += HDPrivateKey.Hardened;\n    }\n    return arg >= 0 && arg < HDPrivateKey.MaxIndex;\n  }\n\n  return false;\n};\n\n/**\n * Internal function that splits a string path into a derivation index array.\n * It will return null if the string path is malformed.\n * It does not validate if indexes are in bounds.\n *\n * @param {string} path\n * @return {Array}\n */\nHDPrivateKey._getDerivationIndexes = function(path) {\n  var steps = path.split('/');\n\n  // Special cases:\n  if (_.includes(HDPrivateKey.RootElementAlias, path)) {\n    return [];\n  }\n\n  if (!_.includes(HDPrivateKey.RootElementAlias, steps[0])) {\n    return null;\n  }\n\n  var indexes = steps.slice(1).map(function(step) {\n    var isHardened = step.slice(-1) === '\\'';\n    if (isHardened) {\n      step = step.slice(0, -1);\n    }\n    if (!step || step[0] === '-') {\n      return NaN;\n    }\n    var index = +step; // cast to number\n    if (isHardened) {\n      index += HDPrivateKey.Hardened;\n    }\n\n    return index;\n  });\n\n  return _.some(indexes, isNaN) ? null : indexes;\n};\n\n/**\n * WARNING: This method is deprecated. Use deriveChild or deriveNonCompliantChild instead. This is not BIP32 compliant\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.derive(0).derive(1).derive(2, true);\n * var copy_of_child_0_1_2h = parent.derive(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.derive = function(arg, hardened) {\n  return this.deriveNonCompliantChild(arg, hardened);\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0.\n *\n *\n * Get a derived child based on a string or number.\n *\n * If the first argument is a string, it's parsed as the full path of\n * derivation. Valid values for this argument include \"m\" (which returns the\n * same private key), \"m/0/1/40/2'/1000\", where the ' quote means a hardened\n * derivation.\n *\n * If the first argument is a number, the child with that index will be\n * derived. If the second argument is truthy, the hardened version will be\n * derived. See the example usage for clarification.\n *\n * WARNING: The `nonCompliant` option should NOT be used, except for older implementation\n * that used a derivation strategy that used a non-zero padded private key.\n *\n * @example\n * ```javascript\n * var parent = new HDPrivateKey('xprv...');\n * var child_0_1_2h = parent.deriveChild(0).deriveChild(1).deriveChild(2, true);\n * var copy_of_child_0_1_2h = parent.deriveChild(\"m/0/1/2'\");\n * assert(child_0_1_2h.xprivkey === copy_of_child_0_1_2h);\n * ```\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\n/**\n * WARNING: This method will not be officially supported until v1.0.0\n *\n *\n * WARNING: If this is a new implementation you should NOT use this method, you should be using\n * `derive` instead.\n *\n * This method is explicitly for use and compatibility with an implementation that\n * was not compliant with BIP32 regarding the derivation algorithm. The private key\n * must be 32 bytes hashing, and this implementation will use the non-zero padded\n * serialization of a private key, such that it's still possible to derive the privateKey\n * to recover those funds.\n *\n * @param {string|number} arg\n * @param {boolean?} hardened\n */\nHDPrivateKey.prototype.deriveNonCompliantChild = function(arg, hardened) {\n  if (_.isNumber(arg)) {\n    return this._deriveWithNumber(arg, hardened, true);\n  } else if (_.isString(arg)) {\n    return this._deriveFromString(arg, true);\n  } else {\n    throw new hdErrors.InvalidDerivationArgument(arg);\n  }\n};\n\nHDPrivateKey.prototype._deriveWithNumber = function(index, hardened, nonCompliant) {\n  /* jshint maxstatements: 20 */\n  /* jshint maxcomplexity: 10 */\n  if (!HDPrivateKey.isValidPath(index, hardened)) {\n    throw new hdErrors.InvalidPath(index);\n  }\n\n  hardened = index >= HDPrivateKey.Hardened ? true : hardened;\n  if (index < HDPrivateKey.Hardened && hardened === true) {\n    index += HDPrivateKey.Hardened;\n  }\n\n  var indexBuffer = BufferUtil.integerAsBuffer(index);\n  var data;\n  if (hardened && nonCompliant) {\n    // The private key serialization in this case will not be exactly 32 bytes and can be\n    // any value less, and the value is not zero-padded.\n    var nonZeroPadded = this.privateKey.bn.toBuffer();\n    data = BufferUtil.concat([Buffer.from([0]), nonZeroPadded, indexBuffer]);\n  } else if (hardened) {\n    // This will use a 32 byte zero padded serialization of the private key\n    var privateKeyBuffer = this.privateKey.bn.toBuffer({size: 32});\n    assert(privateKeyBuffer.length === 32, 'length of private key buffer is expected to be 32 bytes');\n    data = BufferUtil.concat([Buffer.from([0]), privateKeyBuffer, indexBuffer]);\n  } else {\n    data = BufferUtil.concat([this.publicKey.toBuffer(), indexBuffer]);\n  }\n  var hash = Hash.sha512hmac(data, this._buffers.chainCode);\n  var leftPart = BN.fromBuffer(hash.slice(0, 32), {\n    size: 32\n  });\n  var chainCode = hash.slice(32, 64);\n\n  var privateKey = leftPart.add(this.privateKey.toBigNumber()).umod(Point.getN()).toBuffer({\n    size: 32\n  });\n\n  if (!PrivateKey.isValid(privateKey)) {\n    // Index at this point is already hardened, we can pass null as the hardened arg\n    return this._deriveWithNumber(index + 1, null, nonCompliant);\n  }\n\n  var derived = new HDPrivateKey({\n    network: this.network,\n    depth: this.depth + 1,\n    parentFingerPrint: this.fingerPrint,\n    childIndex: index,\n    chainCode: chainCode,\n    privateKey: privateKey\n  });\n\n  return derived;\n};\n\nHDPrivateKey.prototype._deriveFromString = function(path, nonCompliant) {\n  if (!HDPrivateKey.isValidPath(path)) {\n    throw new hdErrors.InvalidPath(path);\n  }\n\n  var indexes = HDPrivateKey._getDerivationIndexes(path);\n  var derived = indexes.reduce(function(prev, index) {\n    return prev._deriveWithNumber(index, null, nonCompliant);\n  }, this);\n\n  return derived;\n};\n\n/**\n * Verifies that a given serialized private key in base58 with checksum format\n * is valid.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {boolean}\n */\nHDPrivateKey.isValidSerialized = function(data, network) {\n  return !HDPrivateKey.getSerializedError(data, network);\n};\n\n/**\n * Checks what's the error that causes the validation of a serialized private key\n * in base58 with checksum to fail.\n *\n * @param {string|Buffer} data - the serialized private key\n * @param {string|Network=} network - optional, if present, checks that the\n *     network provided matches the network serialized.\n * @return {errors.InvalidArgument|null}\n */\nHDPrivateKey.getSerializedError = function(data, network) {\n  /* jshint maxcomplexity: 10 */\n  if (!(_.isString(data) || BufferUtil.isBuffer(data))) {\n    return new hdErrors.UnrecognizedArgument('Expected string or buffer');\n  }\n  if (!Base58.validCharacters(data)) {\n    return new errors.InvalidB58Char('(unknown)', data);\n  }\n  try {\n    data = Base58Check.decode(data);\n  } catch (e) {\n    return new errors.InvalidB58Checksum(data);\n  }\n  if (data.length !== HDPrivateKey.DataLength) {\n    return new hdErrors.InvalidLength(data);\n  }\n  if (!_.isUndefined(network)) {\n    var error = HDPrivateKey._validateNetwork(data, network);\n    if (error) {\n      return error;\n    }\n  }\n  return null;\n};\n\nHDPrivateKey._validateNetwork = function(data, networkArg) {\n  var network = Network.get(networkArg);\n  if (!network) {\n    return new errors.InvalidNetworkArgument(networkArg);\n  }\n  var version = data.slice(0, 4);\n  if (BufferUtil.integerFromBuffer(version) !== network.xprivkey) {\n    return new errors.InvalidNetwork(version);\n  }\n  return null;\n};\n\nHDPrivateKey.fromString = function(arg) {\n  $.checkArgument(_.isString(arg), 'No valid string was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.fromObject = function(arg) {\n  $.checkArgument(_.isObject(arg), 'No valid argument was provided');\n  return new HDPrivateKey(arg);\n};\n\nHDPrivateKey.prototype._buildFromJSON = function(arg) {\n  return this._buildFromObject(JSON.parse(arg));\n};\n\nHDPrivateKey.prototype._buildFromObject = function(arg) {\n  /* jshint maxcomplexity: 12 */\n  // TODO: Type validation\n  var buffers = {\n    version: arg.network ? BufferUtil.integerAsBuffer(Network.get(arg.network).xprivkey) : arg.version,\n    depth: _.isNumber(arg.depth) ? BufferUtil.integerAsSingleByteBuffer(arg.depth) : arg.depth,\n    parentFingerPrint: _.isNumber(arg.parentFingerPrint) ? BufferUtil.integerAsBuffer(arg.parentFingerPrint) : arg.parentFingerPrint,\n    childIndex: _.isNumber(arg.childIndex) ? BufferUtil.integerAsBuffer(arg.childIndex) : arg.childIndex,\n    chainCode: _.isString(arg.chainCode) ? Buffer.from(arg.chainCode,'hex') : arg.chainCode,\n    privateKey: (_.isString(arg.privateKey) && JSUtil.isHexa(arg.privateKey)) ? Buffer.from(arg.privateKey,'hex') : arg.privateKey,\n    checksum: arg.checksum ? (arg.checksum.length ? arg.checksum : BufferUtil.integerAsBuffer(arg.checksum)) : undefined\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._buildFromSerialized = function(arg) {\n  var decoded = Base58Check.decode(arg);\n  var buffers = {\n    version: decoded.slice(HDPrivateKey.VersionStart, HDPrivateKey.VersionEnd),\n    depth: decoded.slice(HDPrivateKey.DepthStart, HDPrivateKey.DepthEnd),\n    parentFingerPrint: decoded.slice(HDPrivateKey.ParentFingerPrintStart,\n      HDPrivateKey.ParentFingerPrintEnd),\n    childIndex: decoded.slice(HDPrivateKey.ChildIndexStart, HDPrivateKey.ChildIndexEnd),\n    chainCode: decoded.slice(HDPrivateKey.ChainCodeStart, HDPrivateKey.ChainCodeEnd),\n    privateKey: decoded.slice(HDPrivateKey.PrivateKeyStart, HDPrivateKey.PrivateKeyEnd),\n    checksum: decoded.slice(HDPrivateKey.ChecksumStart, HDPrivateKey.ChecksumEnd),\n    xprivkey: arg\n  };\n  return this._buildFromBuffers(buffers);\n};\n\nHDPrivateKey.prototype._generateRandomly = function(network) {\n  return HDPrivateKey.fromSeed(Random.getRandomBuffer(64), network);\n};\n\n/**\n * Generate a private key from a seed, as described in BIP32\n *\n * @param {string|Buffer} hexa\n * @param {*} network\n * @return HDPrivateKey\n */\nHDPrivateKey.fromSeed = function(hexa, network) {\n  /* jshint maxcomplexity: 8 */\n  if (JSUtil.isHexaString(hexa)) {\n    hexa = Buffer.from(hexa, 'hex');\n  }\n  if (!Buffer.isBuffer(hexa)) {\n    throw new hdErrors.InvalidEntropyArgument(hexa);\n  }\n  if (hexa.length < MINIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.NotEnoughEntropy(hexa);\n  }\n  if (hexa.length > MAXIMUM_ENTROPY_BITS * BITS_TO_BYTES) {\n    throw new hdErrors.InvalidEntropyArgument.TooMuchEntropy(hexa);\n  }\n  var hash = Hash.sha512hmac(hexa, Buffer.from('Bitcoin seed'));\n\n  return new HDPrivateKey({\n    network: Network.get(network) || Network.defaultNetwork,\n    depth: 0,\n    parentFingerPrint: 0,\n    childIndex: 0,\n    privateKey: hash.slice(0, 32),\n    chainCode: hash.slice(32, 64)\n  });\n};\n\n\n\nHDPrivateKey.prototype._calcHDPublicKey = function() {\n  if (!this._hdPublicKey) {\n    var HDPublicKey = require('./hdpublickey');\n    this._hdPublicKey = new HDPublicKey(this);\n  }\n};\n\n/**\n * Receives a object with buffers in all the properties and populates the\n * internal structure\n *\n * @param {Object} arg\n * @param {buffer.Buffer} arg.version\n * @param {buffer.Buffer} arg.depth\n * @param {buffer.Buffer} arg.parentFingerPrint\n * @param {buffer.Buffer} arg.childIndex\n * @param {buffer.Buffer} arg.chainCode\n * @param {buffer.Buffer} arg.privateKey\n * @param {buffer.Buffer} arg.checksum\n * @param {string=} arg.xprivkey - if set, don't recalculate the base58\n *      representation\n * @return {HDPrivateKey} this\n */\nHDPrivateKey.prototype._buildFromBuffers = function(arg) {\n  /* jshint maxcomplexity: 8 */\n  /* jshint maxstatements: 20 */\n\n  HDPrivateKey._validateBufferArguments(arg);\n\n  JSUtil.defineImmutable(this, {\n    _buffers: arg\n  });\n\n  var sequence = [\n    arg.version, arg.depth, arg.parentFingerPrint, arg.childIndex, arg.chainCode,\n    BufferUtil.emptyBuffer(1), arg.privateKey\n  ];\n  var concat = buffer.Buffer.concat(sequence);\n  if (!arg.checksum || !arg.checksum.length) {\n    arg.checksum = Base58Check.checksum(concat);\n  } else {\n    if (arg.checksum.toString() !== Base58Check.checksum(concat).toString()) {\n      throw new errors.InvalidB58Checksum(concat);\n    }\n  }\n\n  var network = Network.get(BufferUtil.integerFromBuffer(arg.version));\n  var xprivkey;\n  xprivkey = Base58Check.encode(buffer.Buffer.concat(sequence));\n  arg.xprivkey = Buffer.from(xprivkey);\n\n  var privateKey = new PrivateKey(BN.fromBuffer(arg.privateKey), network);\n  var publicKey = privateKey.toPublicKey();\n  var size = HDPrivateKey.ParentFingerPrintSize;\n  var fingerPrint = Hash.sha256ripemd160(publicKey.toBuffer()).slice(0, size);\n\n  JSUtil.defineImmutable(this, {\n    xprivkey: xprivkey,\n    network: network,\n    depth: BufferUtil.integerFromSingleByteBuffer(arg.depth),\n    privateKey: privateKey,\n    publicKey: publicKey,\n    fingerPrint: fingerPrint\n  });\n\n  this._hdPublicKey = null;\n\n  Object.defineProperty(this, 'hdPublicKey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey;\n    }\n  });\n  Object.defineProperty(this, 'xpubkey', {\n    configurable: false,\n    enumerable: true,\n    get: function() {\n      this._calcHDPublicKey();\n      return this._hdPublicKey.xpubkey;\n    }\n  });\n  return this;\n};\n\nHDPrivateKey._validateBufferArguments = function(arg) {\n  var checkBuffer = function(name, size) {\n    var buff = arg[name];\n    assert(BufferUtil.isBuffer(buff), name + ' argument is not a buffer');\n    assert(\n      buff.length === size,\n      name + ' has not the expected size: found ' + buff.length + ', expected ' + size\n    );\n  };\n  checkBuffer('version', HDPrivateKey.VersionSize);\n  checkBuffer('depth', HDPrivateKey.DepthSize);\n  checkBuffer('parentFingerPrint', HDPrivateKey.ParentFingerPrintSize);\n  checkBuffer('childIndex', HDPrivateKey.ChildIndexSize);\n  checkBuffer('chainCode', HDPrivateKey.ChainCodeSize);\n  checkBuffer('privateKey', HDPrivateKey.PrivateKeySize);\n  if (arg.checksum && arg.checksum.length) {\n    checkBuffer('checksum', HDPrivateKey.CheckSumSize);\n  }\n};\n\n/**\n * Returns the string representation of this private key (a string starting\n * with \"xprv...\"\n *\n * @return string\n */\nHDPrivateKey.prototype.toString = function() {\n  return this.xprivkey;\n};\n\n/**\n * Returns the console representation of this extended private key.\n * @return string\n */\nHDPrivateKey.prototype.inspect = function() {\n  return '<HDPrivateKey: ' + this.xprivkey + '>';\n};\n\n/**\n * Returns a plain object with a representation of this private key.\n *\n * Fields include:<ul>\n * <li> network: either 'livenet' or 'testnet'\n * <li> depth: a number ranging from 0 to 255\n * <li> fingerPrint: a number ranging from 0 to 2^32-1, taken from the hash of the\n * <li>     associated public key\n * <li> parentFingerPrint: a number ranging from 0 to 2^32-1, taken from the hash\n * <li>     of this parent's associated public key or zero.\n * <li> childIndex: the index from which this child was derived (or zero)\n * <li> chainCode: an hexa string representing a number used in the derivation\n * <li> privateKey: the private key associated, in hexa representation\n * <li> xprivkey: the representation of this extended private key in checksum\n * <li>     base58 format\n * <li> checksum: the base58 checksum of xprivkey\n * </ul>\n *  @return {Object}\n */\nHDPrivateKey.prototype.toObject = HDPrivateKey.prototype.toJSON = function toObject() {\n  return {\n    network: Network.get(BufferUtil.integerFromBuffer(this._buffers.version), 'xprivkey').name,\n    depth: BufferUtil.integerFromSingleByteBuffer(this._buffers.depth),\n    fingerPrint: BufferUtil.integerFromBuffer(this.fingerPrint),\n    parentFingerPrint: BufferUtil.integerFromBuffer(this._buffers.parentFingerPrint),\n    childIndex: BufferUtil.integerFromBuffer(this._buffers.childIndex),\n    chainCode: BufferUtil.bufferToHex(this._buffers.chainCode),\n    privateKey: this.privateKey.toBuffer().toString('hex'),\n    checksum: BufferUtil.integerFromBuffer(this._buffers.checksum),\n    xprivkey: this.xprivkey\n  };\n};\n\n/**\n * Build a HDPrivateKey from a buffer\n *\n * @param {Buffer} arg\n * @return {HDPrivateKey}\n */\nHDPrivateKey.fromBuffer = function(arg) {\n  return new HDPrivateKey(arg.toString());\n};\n\n/**\n * Returns a buffer representation of the HDPrivateKey\n *\n * @return {string}\n */\nHDPrivateKey.prototype.toBuffer = function() {\n  return BufferUtil.copy(this._buffers.xprivkey);\n};\n\nHDPrivateKey.DefaultDepth = 0;\nHDPrivateKey.DefaultFingerprint = 0;\nHDPrivateKey.DefaultChildIndex = 0;\nHDPrivateKey.Hardened = 0x80000000;\nHDPrivateKey.MaxIndex = 2 * HDPrivateKey.Hardened;\n\nHDPrivateKey.RootElementAlias = ['m', 'M', 'm\\'', 'M\\''];\n\nHDPrivateKey.VersionSize = 4;\nHDPrivateKey.DepthSize = 1;\nHDPrivateKey.ParentFingerPrintSize = 4;\nHDPrivateKey.ChildIndexSize = 4;\nHDPrivateKey.ChainCodeSize = 32;\nHDPrivateKey.PrivateKeySize = 32;\nHDPrivateKey.CheckSumSize = 4;\n\nHDPrivateKey.DataLength = 78;\nHDPrivateKey.SerializedByteSize = 82;\n\nHDPrivateKey.VersionStart = 0;\nHDPrivateKey.VersionEnd = HDPrivateKey.VersionStart + HDPrivateKey.VersionSize;\nHDPrivateKey.DepthStart = HDPrivateKey.VersionEnd;\nHDPrivateKey.DepthEnd = HDPrivateKey.DepthStart + HDPrivateKey.DepthSize;\nHDPrivateKey.ParentFingerPrintStart = HDPrivateKey.DepthEnd;\nHDPrivateKey.ParentFingerPrintEnd = HDPrivateKey.ParentFingerPrintStart + HDPrivateKey.ParentFingerPrintSize;\nHDPrivateKey.ChildIndexStart = HDPrivateKey.ParentFingerPrintEnd;\nHDPrivateKey.ChildIndexEnd = HDPrivateKey.ChildIndexStart + HDPrivateKey.ChildIndexSize;\nHDPrivateKey.ChainCodeStart = HDPrivateKey.ChildIndexEnd;\nHDPrivateKey.ChainCodeEnd = HDPrivateKey.ChainCodeStart + HDPrivateKey.ChainCodeSize;\nHDPrivateKey.PrivateKeyStart = HDPrivateKey.ChainCodeEnd + 1;\nHDPrivateKey.PrivateKeyEnd = HDPrivateKey.PrivateKeyStart + HDPrivateKey.PrivateKeySize;\nHDPrivateKey.ChecksumStart = HDPrivateKey.PrivateKeyEnd;\nHDPrivateKey.ChecksumEnd = HDPrivateKey.ChecksumStart + HDPrivateKey.CheckSumSize;\n\nassert(HDPrivateKey.ChecksumEnd === HDPrivateKey.SerializedByteSize);\n\nmodule.exports = HDPrivateKey;\n", "'use strict';\n\nvar _ = require('lodash');\nvar PrivateKey = require('./privatekey');\nvar PublicKey = require('./publickey');\nvar Address = require('./address');\nvar BufferWriter = require('./encoding/bufferwriter');\nvar ECDSA = require('./crypto/ecdsa');\nvar Signature = require('./crypto/signature');\nvar sha256sha256 = require('./crypto/hash').sha256sha256;\nvar JSUtil = require('./util/js');\nvar $ = require('./util/preconditions');\n\nfunction Message(message) {\n  if (!(this instanceof Message)) {\n    return new Message(message);\n  }\n  $.checkArgument(_.isString(message), 'First argument should be a string');\n  this.message = message;\n\n  return this;\n}\n\nMessage.MAGIC_BYTES = Buffer.from('Bitcoin Signed Message:\\n');\n\nMessage.prototype.magicHash = function magicHash() {\n  var prefix1 = BufferWriter.varintBufNum(Message.MAGIC_BYTES.length);\n  var messageBuffer = Buffer.from(this.message);\n  var prefix2 = BufferWriter.varintBufNum(messageBuffer.length);\n  var buf = Buffer.concat([prefix1, Message.MAGIC_BYTES, prefix2, messageBuffer]);\n  var hash = sha256sha256(buf);\n  return hash;\n};\n\nMessage.prototype._sign = function _sign(privateKey) {\n  $.checkArgument(privateKey instanceof PrivateKey, 'First argument should be an instance of PrivateKey');\n  var hash = this.magicHash();\n  var ecdsa = new ECDSA();\n  ecdsa.hashbuf = hash;\n  ecdsa.privkey = privateKey;\n  ecdsa.pubkey = privateKey.toPublicKey();\n  ecdsa.signRandomK();\n  ecdsa.calci();\n  return ecdsa.sig;\n};\n\n/**\n * Will sign a message with a given bitcoin private key.\n *\n * @param {PrivateKey} privateKey - An instance of PrivateKey\n * @returns {String} A base64 encoded compact signature\n */\nMessage.prototype.sign = function sign(privateKey) {\n  var signature = this._sign(privateKey);\n  return signature.toCompact().toString('base64');\n};\n\nMessage.prototype._verify = function _verify(publicKey, signature) {\n  $.checkArgument(publicKey instanceof PublicKey, 'First argument should be an instance of PublicKey');\n  $.checkArgument(signature instanceof Signature, 'Second argument should be an instance of Signature');\n  var hash = this.magicHash();\n  var verified = ECDSA.verify(hash, signature, publicKey);\n  if (!verified) {\n    this.error = 'The signature was invalid';\n  }\n  return verified;\n};\n\n/**\n * Will return a boolean of the signature is valid for a given bitcoin address.\n * If it isn't the specific reason is accessible via the \"error\" member.\n *\n * @param {Address|String} bitcoinAddress - A bitcoin address\n * @param {String} signatureString - A base64 encoded compact signature\n * @returns {Boolean}\n */\nMessage.prototype.verify = function verify(bitcoinAddress, signatureString) {\n  $.checkArgument(bitcoinAddress);\n  $.checkArgument(signatureString && _.isString(signatureString));\n\n  if (_.isString(bitcoinAddress)) {\n    bitcoinAddress = Address.fromString(bitcoinAddress);\n  }\n  var signature = Signature.fromCompact(Buffer.from(signatureString, 'base64'));\n\n  // recover the public key\n  var ecdsa = new ECDSA();\n  ecdsa.hashbuf = this.magicHash();\n  ecdsa.sig = signature;\n  var publicKey = ecdsa.toPublicKey();\n\n  var signatureAddress = Address.fromPublicKey(publicKey, bitcoinAddress.network);\n\n  // check that the recovered address and specified address match\n  if (bitcoinAddress.toString() !== signatureAddress.toString()) {\n    this.error = 'The signature did not match the message digest';\n    return false;\n  }\n\n  return this._verify(publicKey, signature);\n};\n\n/**\n * Will return a public key string if the provided signature and the message digest is correct\n * If it isn't the specific reason is accessible via the \"error\" member.\n *\n * @param {Address|String} bitcoinAddress - A bitcoin address\n * @param {String} signatureString - A base64 encoded compact signature\n * @returns {String}\n */\nMessage.prototype.recoverPublicKey = function recoverPublicKey(bitcoinAddress, signatureString) {\n  $.checkArgument(bitcoinAddress);\n  $.checkArgument(signatureString && _.isString(signatureString));\n\n  if (_.isString(bitcoinAddress)) {\n    bitcoinAddress = Address.fromString(bitcoinAddress);\n  }\n  var signature = Signature.fromCompact(Buffer.from(signatureString, 'base64'));\n\n  // recover the public key\n  var ecdsa = new ECDSA();\n  ecdsa.hashbuf = this.magicHash();\n  ecdsa.sig = signature;\n  var publicKey = ecdsa.toPublicKey();\n\n  var signatureAddress = Address.fromPublicKey(publicKey, bitcoinAddress.network);\n\n  // check that the recovered address and specified address match\n  if (bitcoinAddress.toString() !== signatureAddress.toString()) {\n    this.error = 'The signature did not match the message digest';\n  }\n\n  return publicKey.toString();\n};\n\n/**\n * Instantiate a message from a message string\n *\n * @param {String} str - A string of the message\n * @returns {Message} A new instance of a Message\n */\nMessage.fromString = function(str) {\n  return new Message(str);\n};\n\n/**\n * Instantiate a message from JSON\n *\n * @param {String} json - An JSON string or Object with keys: message\n * @returns {Message} A new instance of a Message\n */\nMessage.fromJSON = function fromJSON(json) {\n  if (JSUtil.isValidJSON(json)) {\n    json = JSON.parse(json);\n  }\n  return new Message(json.message);\n};\n\n/**\n * @returns {Object} A plain object with the message information\n */\nMessage.prototype.toObject = function toObject() {\n  return {\n    message: this.message\n  };\n};\n\n/**\n * @returns {String} A JSON representation of the message information\n */\nMessage.prototype.toJSON = function toJSON() {\n  return JSON.stringify(this.toObject());\n};\n\n/**\n * Will return a the string representation of the message\n *\n * @returns {String} Message\n */\nMessage.prototype.toString = function() {\n  return this.message;\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {String} Message\n */\nMessage.prototype.inspect = function() {\n  return '<Message: ' + this.toString() + '>';\n};\n\nmodule.exports = Message;\n\nvar Script = require('./script');\n", "'use strict';\n\nvar _ = require('lodash');\nvar URL = require('url');\n\nvar Address = require('./address');\nvar Unit = require('./unit');\n\n/**\n * Bitcore URI\n *\n * Instantiate an URI from a bitcoin URI String or an Object. An URI instance\n * can be created with a bitcoin uri string or an object. All instances of\n * URI are valid, the static method isValid allows checking before instantiation.\n *\n * All standard parameters can be found as members of the class, the address\n * is represented using an {Address} instance and the amount is represented in\n * satoshis. Any other non-standard parameters can be found under the extra member.\n *\n * @example\n * ```javascript\n *\n * var uri = new URI('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu?amount=1.2');\n * console.log(uri.address, uri.amount);\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n * @returns {URI} A new valid and frozen instance of URI\n * @constructor\n */\nvar URI = function(data, knownParams) {\n  if (!(this instanceof URI)) {\n    return new URI(data, knownParams);\n  }\n\n  this.extras = {};\n  this.knownParams = knownParams || [];\n  this.address = this.network = this.amount = this.message = null;\n\n  if (typeof(data) === 'string') {\n    var params = URI.parse(data);\n    if (params.amount) {\n      params.amount = this._parseAmount(params.amount);\n    }\n    this._fromObject(params);\n  } else if (typeof(data) === 'object') {\n    this._fromObject(data);\n  } else {\n    throw new TypeError('Unrecognized data format.');\n  }\n};\n\n/**\n * Instantiate a URI from a String\n *\n * @param {string} str - JSON string or object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromString = function fromString(str) {\n  if (typeof(str) !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return new URI(str);\n};\n\n/**\n * Instantiate a URI from an Object\n *\n * @param {Object} data - object of the URI\n * @returns {URI} A new instance of a URI\n */\nURI.fromObject = function fromObject(json) {\n  return new URI(json);\n};\n\n/**\n * Check if an bitcoin URI string is valid\n *\n * @example\n * ```javascript\n *\n * var valid = URI.isValid('bitcoin:12A1MyfXbW6RhdRAZEqofac5jCQQjwEPBu');\n * // true\n * ```\n *\n * @param {string|Object} data - A bitcoin URI string or an Object\n * @param {Array.<string>=} knownParams - Required non-standard params\n * @returns {boolean} Result of uri validation\n */\nURI.isValid = function(arg, knownParams) {\n  try {\n    new URI(arg, knownParams);\n  } catch (err) {\n    return false;\n  }\n  return true;\n};\n\n/**\n * Convert a bitcoin URI string into a simple object.\n *\n * @param {string} uri - A bitcoin URI string\n * @throws {TypeError} Invalid bitcoin URI\n * @returns {Object} An object with the parsed params\n */\nURI.parse = function(uri) {\n  var info = URL.parse(uri, true);\n\n  if (info.protocol !== 'bitcoin:') {\n    throw new TypeError('Invalid bitcoin URI');\n  }\n\n  // workaround to host insensitiveness\n  var group = /[^:]*:\\/?\\/?([^?]*)/.exec(uri);\n  info.query.address = group && group[1] || undefined;\n\n  return info.query;\n};\n\nURI.Members = ['address', 'amount', 'message', 'label', 'r'];\n\n/**\n * Internal function to load the URI instance with an object.\n *\n * @param {Object} obj - Object with the information\n * @throws {TypeError} Invalid bitcoin address\n * @throws {TypeError} Invalid amount\n * @throws {Error} Unknown required argument\n */\nURI.prototype._fromObject = function(obj) {\n  /* jshint maxcomplexity: 10 */\n\n  if (!Address.isValid(obj.address)) {\n    throw new TypeError('Invalid bitcoin address');\n  }\n\n  this.address = new Address(obj.address);\n  this.network = this.address.network;\n  this.amount = obj.amount;\n\n  for (var key in obj) {\n    if (key === 'address' || key === 'amount') {\n      continue;\n    }\n\n    if (/^req-/.exec(key) && this.knownParams.indexOf(key) === -1) {\n      throw Error('Unknown required argument ' + key);\n    }\n\n    var destination = URI.Members.indexOf(key) > -1 ? this : this.extras;\n    destination[key] = obj[key];\n  }\n};\n\n/**\n * Internal function to transform a BTC string amount into satoshis\n *\n * @param {string} amount - Amount BTC string\n * @throws {TypeError} Invalid amount\n * @returns {Object} Amount represented in satoshis\n */\nURI.prototype._parseAmount = function(amount) {\n  amount = Number(amount);\n  if (isNaN(amount)) {\n    throw new TypeError('Invalid amount');\n  }\n  return Unit.fromBTC(amount).toSatoshis();\n};\n\nURI.prototype.toObject = URI.prototype.toJSON = function toObject() {\n  var json = {};\n  for (var i = 0; i < URI.Members.length; i++) {\n    var m = URI.Members[i];\n    if (this.hasOwnProperty(m) && typeof(this[m]) !== 'undefined') {\n      json[m] = this[m].toString();\n    }\n  }\n  _.extend(json, this.extras);\n  return json;\n};\n\n/**\n * Will return a the string representation of the URI\n *\n * @returns {string} Bitcoin URI string\n */\nURI.prototype.toString = function() {\n  var query = {};\n  if (this.amount) {\n    query.amount = Unit.fromSatoshis(this.amount).toBTC();\n  }\n  if (this.message) {\n    query.message = this.message;\n  }\n  if (this.label) {\n    query.label = this.label;\n  }\n  if (this.r) {\n    query.r = this.r;\n  }\n  _.extend(query, this.extras);\n\n  return URL.format({\n    protocol: 'bitcoin:',\n    host: this.address,\n    query: query\n  });\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {string} Bitcoin URI\n */\nURI.prototype.inspect = function() {\n  return '<URI: ' + this.toString() + '>';\n};\n\nmodule.exports = URI;\n", "'use strict';\n\nvar bitcore = module.exports;\n\n// module information\nbitcore.version = 'v' + require('./package.json').version;\nbitcore.versionGuard = function(version) {\n  if (version !== undefined) {\n    var message = 'More than one instance of bitcore-lib found. ' +\n      'Please make sure to require bitcore-lib and check that submodules do' +\n      ' not also include their own bitcore-lib dependency.';\n    throw new Error(message);\n  }\n};\nbitcore.versionGuard(global._bitcore);\nglobal._bitcore = bitcore.version;\n\n// crypto\nbitcore.crypto = {};\nbitcore.crypto.BN = require('./lib/crypto/bn');\nbitcore.crypto.ECDSA = require('./lib/crypto/ecdsa');\nbitcore.crypto.Hash = require('./lib/crypto/hash');\nbitcore.crypto.Random = require('./lib/crypto/random');\nbitcore.crypto.Point = require('./lib/crypto/point');\nbitcore.crypto.Signature = require('./lib/crypto/signature');\n\n// encoding\nbitcore.encoding = {};\nbitcore.encoding.Base58 = require('./lib/encoding/base58');\nbitcore.encoding.Base58Check = require('./lib/encoding/base58check');\nbitcore.encoding.BufferReader = require('./lib/encoding/bufferreader');\nbitcore.encoding.BufferWriter = require('./lib/encoding/bufferwriter');\nbitcore.encoding.Varint = require('./lib/encoding/varint');\n\n// utilities\nbitcore.util = {};\nbitcore.util.buffer = require('./lib/util/buffer');\nbitcore.util.js = require('./lib/util/js');\nbitcore.util.preconditions = require('./lib/util/preconditions');\n\n// errors thrown by the library\nbitcore.errors = require('./lib/errors');\n\n// main bitcoin library\nbitcore.Address = require('./lib/address');\nbitcore.Block = require('./lib/block');\nbitcore.MerkleBlock = require('./lib/block/merkleblock');\nbitcore.BlockHeader = require('./lib/block/blockheader');\nbitcore.HDPrivateKey = require('./lib/hdprivatekey.js');\nbitcore.HDPublicKey = require('./lib/hdpublickey.js');\nbitcore.Message = require('./lib/message');\nbitcore.Networks = require('./lib/networks');\nbitcore.Opcode = require('./lib/opcode');\nbitcore.PrivateKey = require('./lib/privatekey');\nbitcore.PublicKey = require('./lib/publickey');\nbitcore.Script = require('./lib/script');\nbitcore.Transaction = require('./lib/transaction');\nbitcore.URI = require('./lib/uri');\nbitcore.Unit = require('./lib/unit');\n\n// dependencies, subject to change\nbitcore.deps = {};\nbitcore.deps.bnjs = require('bn.js');\nbitcore.deps.bs58 = require('bs58');\nbitcore.deps.Buffer = Buffer;\nbitcore.deps.elliptic = require('elliptic');\nbitcore.deps._ = require('lodash');\n\n// Internal usage, exposed for testing/advanced tweaking\nbitcore.Transaction.sighash = require('./lib/transaction/sighash');\n", "(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      Object.defineProperty(String.prototype, \"normalize\", {\n         enumerable: false,\n         configurable: true,\n         writable: true,\n         value: function normalize (/*form*/) {\n            \n            var str = \"\" + this;\n            var form = arguments[0] === undefined ? \"NFC\" : arguments[0];\n\n            if (this === null || this === undefined) {\n               throw new TypeError(\"Cannot call method on \" + Object.prototype.toString.call(this));\n            }\n\n            if (form === \"NFC\") {\n               return unorm.nfc(str);\n            } else if (form === \"NFD\") {\n               return unorm.nfd(str);\n            } else if (form === \"NFKC\") {\n               return unorm.nfkc(str);\n            } else if (form === \"NFKD\") {\n               return unorm.nfkd(str);\n            } else {\n               throw new RangeError(\"Invalid normalization form: \" + form);\n            }\n         }\n      });\n\n      unorm.shimApplied = true;\n   }\n}(this));\n", "'use strict';\n\nvar crypto = require(\"crypto\");\n\n/**\n * PDKBF2\n * Credit to: https://github.com/stayradiated/pbkdf2-sha512\n * Copyright (c) 2014, JP Richardson Copyright (c) 2010-2011 Intalio Pte, All Rights Reserved\n */\nfunction pbkdf2(key, salt, iterations, dkLen) {\n  /* jshint maxstatements: 31 */\n  /* jshint maxcomplexity: 9 */\n\n  var hLen = 64; //SHA512 Mac length\n  if (dkLen > (Math.pow(2, 32) - 1) * hLen) {\n    throw Error('Requested key length too long');\n  }\n\n  if (typeof key !== 'string' && !Buffer.isBuffer(key)) {\n    throw new TypeError('key must a string or Buffer');\n  }\n\n  if (typeof salt !== 'string' && !Buffer.isBuffer(salt)) {\n    throw new TypeError('salt must a string or Buffer');\n  }\n\n  if (typeof key === 'string') {\n    key = Buffer.from(key);\n  }\n\n  if (typeof salt === 'string') {\n    salt = Buffer.from(salt);\n  }\n\n  var DK = Buffer.alloc(dkLen);\n\n  var U = Buffer.alloc(hLen);\n  var T = Buffer.alloc(hLen);\n  var block1 = Buffer.alloc(salt.length + 4);\n\n  var l = Math.ceil(dkLen / hLen);\n  var r = dkLen - (l - 1) * hLen;\n\n  salt.copy(block1, 0, 0, salt.length);\n  for (var i = 1; i <= l; i++) {\n    block1[salt.length + 0] = (i >> 24 & 0xff);\n    block1[salt.length + 1] = (i >> 16 & 0xff);\n    block1[salt.length + 2] = (i >> 8  & 0xff);\n    block1[salt.length + 3] = (i >> 0  & 0xff);\n\n    U = crypto.createHmac('sha512', key).update(block1).digest();\n\n    U.copy(T, 0, 0, hLen);\n\n    for (var j = 1; j < iterations; j++) {\n      U = crypto.createHmac('sha512', key).update(U).digest();\n\n      for (var k = 0; k < hLen; k++) {\n        T[k] ^= U[k];\n      }\n    }\n\n    var destPos = (i - 1) * hLen;\n    var len = (i === l ? r : hLen);\n    T.copy(DK, destPos, 0, len);\n  }\n\n  return DK;\n}\n\nmodule.exports = pbkdf2;\n", "'use strict';\n\nvar spec = {\n  name: 'Mnemonic',\n  message: 'Internal Error on bitcore-mnemonic module {0}',\n  errors: [{\n    name: 'InvalidEntropy',\n    message: 'Entropy length must be an even multiple of 11 bits: {0}'\n  }, {\n    name: 'UnknownWordlist',\n    message: 'Could not detect the used word list: {0}'\n  }, {\n    name: 'InvalidMnemonic',\n    message: 'Mnemonic string is invalid: {0}'\n  }]\n};\n\nmodule.exports = require('bitcore-lib').errors.extend(spec);\n", "'use strict';\n\nvar chinese = ['\u7684', '\u4E00', '\u662F', '\u5728', '\u4E0D', '\u4E86', '\u6709', '\u548C', '\u4EBA', '\u8FD9', '\u4E2D', '\u5927', '\u4E3A', '\u4E0A', '\u4E2A', '\u56FD', '\u6211', '\u4EE5', '\u8981', '\u4ED6', '\u65F6', '\u6765', '\u7528', '\u4EEC', '\u751F', '\u5230', '\u4F5C', '\u5730', '\u4E8E', '\u51FA', '\u5C31', '\u5206', '\u5BF9', '\u6210', '\u4F1A', '\u53EF', '\u4E3B', '\u53D1', '\u5E74', '\u52A8', '\u540C', '\u5DE5', '\u4E5F', '\u80FD', '\u4E0B', '\u8FC7', '\u5B50', '\u8BF4', '\u4EA7', '\u79CD', '\u9762', '\u800C', '\u65B9', '\u540E', '\u591A', '\u5B9A', '\u884C', '\u5B66', '\u6CD5', '\u6240', '\u6C11', '\u5F97', '\u7ECF', '\u5341', '\u4E09', '\u4E4B', '\u8FDB', '\u7740', '\u7B49', '\u90E8', '\u5EA6', '\u5BB6', '\u7535', '\u529B', '\u91CC', '\u5982', '\u6C34', '\u5316', '\u9AD8', '\u81EA', '\u4E8C', '\u7406', '\u8D77', '\u5C0F', '\u7269', '\u73B0', '\u5B9E', '\u52A0', '\u91CF', '\u90FD', '\u4E24', '\u4F53', '\u5236', '\u673A', '\u5F53', '\u4F7F', '\u70B9', '\u4ECE', '\u4E1A', '\u672C', '\u53BB', '\u628A', '\u6027', '\u597D', '\u5E94', '\u5F00', '\u5B83', '\u5408', '\u8FD8', '\u56E0', '\u7531', '\u5176', '\u4E9B', '\u7136', '\u524D', '\u5916', '\u5929', '\u653F', '\u56DB', '\u65E5', '\u90A3', '\u793E', '\u4E49', '\u4E8B', '\u5E73', '\u5F62', '\u76F8', '\u5168', '\u8868', '\u95F4', '\u6837', '\u4E0E', '\u5173', '\u5404', '\u91CD', '\u65B0', '\u7EBF', '\u5185', '\u6570', '\u6B63', '\u5FC3', '\u53CD', '\u4F60', '\u660E', '\u770B', '\u539F', '\u53C8', '\u4E48', '\u5229', '\u6BD4', '\u6216', '\u4F46', '\u8D28', '\u6C14', '\u7B2C', '\u5411', '\u9053', '\u547D', '\u6B64', '\u53D8', '\u6761', '\u53EA', '\u6CA1', '\u7ED3', '\u89E3', '\u95EE', '\u610F', '\u5EFA', '\u6708', '\u516C', '\u65E0', '\u7CFB', '\u519B', '\u5F88', '\u60C5', '\u8005', '\u6700', '\u7ACB', '\u4EE3', '\u60F3', '\u5DF2', '\u901A', '\u5E76', '\u63D0', '\u76F4', '\u9898', '\u515A', '\u7A0B', '\u5C55', '\u4E94', '\u679C', '\u6599', '\u8C61', '\u5458', '\u9769', '\u4F4D', '\u5165', '\u5E38', '\u6587', '\u603B', '\u6B21', '\u54C1', '\u5F0F', '\u6D3B', '\u8BBE', '\u53CA', '\u7BA1', '\u7279', '\u4EF6', '\u957F', '\u6C42', '\u8001', '\u5934', '\u57FA', '\u8D44', '\u8FB9', '\u6D41', '\u8DEF', '\u7EA7', '\u5C11', '\u56FE', '\u5C71', '\u7EDF', '\u63A5', '\u77E5', '\u8F83', '\u5C06', '\u7EC4', '\u89C1', '\u8BA1', '\u522B', '\u5979', '\u624B', '\u89D2', '\u671F', '\u6839', '\u8BBA', '\u8FD0', '\u519C', '\u6307', '\u51E0', '\u4E5D', '\u533A', '\u5F3A', '\u653E', '\u51B3', '\u897F', '\u88AB', '\u5E72', '\u505A', '\u5FC5', '\u6218', '\u5148', '\u56DE', '\u5219', '\u4EFB', '\u53D6', '\u636E', '\u5904', '\u961F', '\u5357', '\u7ED9', '\u8272', '\u5149', '\u95E8', '\u5373', '\u4FDD', '\u6CBB', '\u5317', '\u9020', '\u767E', '\u89C4', '\u70ED', '\u9886', '\u4E03', '\u6D77', '\u53E3', '\u4E1C', '\u5BFC', '\u5668', '\u538B', '\u5FD7', '\u4E16', '\u91D1', '\u589E', '\u4E89', '\u6D4E', '\u9636', '\u6CB9', '\u601D', '\u672F', '\u6781', '\u4EA4', '\u53D7', '\u8054', '\u4EC0', '\u8BA4', '\u516D', '\u5171', '\u6743', '\u6536', '\u8BC1', '\u6539', '\u6E05', '\u7F8E', '\u518D', '\u91C7', '\u8F6C', '\u66F4', '\u5355', '\u98CE', '\u5207', '\u6253', '\u767D', '\u6559', '\u901F', '\u82B1', '\u5E26', '\u5B89', '\u573A', '\u8EAB', '\u8F66', '\u4F8B', '\u771F', '\u52A1', '\u5177', '\u4E07', '\u6BCF', '\u76EE', '\u81F3', '\u8FBE', '\u8D70', '\u79EF', '\u793A', '\u8BAE', '\u58F0', '\u62A5', '\u6597', '\u5B8C', '\u7C7B', '\u516B', '\u79BB', '\u534E', '\u540D', '\u786E', '\u624D', '\u79D1', '\u5F20', '\u4FE1', '\u9A6C', '\u8282', '\u8BDD', '\u7C73', '\u6574', '\u7A7A', '\u5143', '\u51B5', '\u4ECA', '\u96C6', '\u6E29', '\u4F20', '\u571F', '\u8BB8', '\u6B65', '\u7FA4', '\u5E7F', '\u77F3', '\u8BB0', '\u9700', '\u6BB5', '\u7814', '\u754C', '\u62C9', '\u6797', '\u5F8B', '\u53EB', '\u4E14', '\u7A76', '\u89C2', '\u8D8A', '\u7EC7', '\u88C5', '\u5F71', '\u7B97', '\u4F4E', '\u6301', '\u97F3', '\u4F17', '\u4E66', '\u5E03', '\u590D', '\u5BB9', '\u513F', '\u987B', '\u9645', '\u5546', '\u975E', '\u9A8C', '\u8FDE', '\u65AD', '\u6DF1', '\u96BE', '\u8FD1', '\u77FF', '\u5343', '\u5468', '\u59D4', '\u7D20', '\u6280', '\u5907', '\u534A', '\u529E', '\u9752', '\u7701', '\u5217', '\u4E60', '\u54CD', '\u7EA6', '\u652F', '\u822C', '\u53F2', '\u611F', '\u52B3', '\u4FBF', '\u56E2', '\u5F80', '\u9178', '\u5386', '\u5E02', '\u514B', '\u4F55', '\u9664', '\u6D88', '\u6784', '\u5E9C', '\u79F0', '\u592A', '\u51C6', '\u7CBE', '\u503C', '\u53F7', '\u7387', '\u65CF', '\u7EF4', '\u5212', '\u9009', '\u6807', '\u5199', '\u5B58', '\u5019', '\u6BDB', '\u4EB2', '\u5FEB', '\u6548', '\u65AF', '\u9662', '\u67E5', '\u6C5F', '\u578B', '\u773C', '\u738B', '\u6309', '\u683C', '\u517B', '\u6613', '\u7F6E', '\u6D3E', '\u5C42', '\u7247', '\u59CB', '\u5374', '\u4E13', '\u72B6', '\u80B2', '\u5382', '\u4EAC', '\u8BC6', '\u9002', '\u5C5E', '\u5706', '\u5305', '\u706B', '\u4F4F', '\u8C03', '\u6EE1', '\u53BF', '\u5C40', '\u7167', '\u53C2', '\u7EA2', '\u7EC6', '\u5F15', '\u542C', '\u8BE5', '\u94C1', '\u4EF7', '\u4E25', '\u9996', '\u5E95', '\u6DB2', '\u5B98', '\u5FB7', '\u968F', '\u75C5', '\u82CF', '\u5931', '\u5C14', '\u6B7B', '\u8BB2', '\u914D', '\u5973', '\u9EC4', '\u63A8', '\u663E', '\u8C08', '\u7F6A', '\u795E', '\u827A', '\u5462', '\u5E2D', '\u542B', '\u4F01', '\u671B', '\u5BC6', '\u6279', '\u8425', '\u9879', '\u9632', '\u4E3E', '\u7403', '\u82F1', '\u6C27', '\u52BF', '\u544A', '\u674E', '\u53F0', '\u843D', '\u6728', '\u5E2E', '\u8F6E', '\u7834', '\u4E9A', '\u5E08', '\u56F4', '\u6CE8', '\u8FDC', '\u5B57', '\u6750', '\u6392', '\u4F9B', '\u6CB3', '\u6001', '\u5C01', '\u53E6', '\u65BD', '\u51CF', '\u6811', '\u6EB6', '\u600E', '\u6B62', '\u6848', '\u8A00', '\u58EB', '\u5747', '\u6B66', '\u56FA', '\u53F6', '\u9C7C', '\u6CE2', '\u89C6', '\u4EC5', '\u8D39', '\u7D27', '\u7231', '\u5DE6', '\u7AE0', '\u65E9', '\u671D', '\u5BB3', '\u7EED', '\u8F7B', '\u670D', '\u8BD5', '\u98DF', '\u5145', '\u5175', '\u6E90', '\u5224', '\u62A4', '\u53F8', '\u8DB3', '\u67D0', '\u7EC3', '\u5DEE', '\u81F4', '\u677F', '\u7530', '\u964D', '\u9ED1', '\u72AF', '\u8D1F', '\u51FB', '\u8303', '\u7EE7', '\u5174', '\u4F3C', '\u4F59', '\u575A', '\u66F2', '\u8F93', '\u4FEE', '\u6545', '\u57CE', '\u592B', '\u591F', '\u9001', '\u7B14', '\u8239', '\u5360', '\u53F3', '\u8D22', '\u5403', '\u5BCC', '\u6625', '\u804C', '\u89C9', '\u6C49', '\u753B', '\u529F', '\u5DF4', '\u8DDF', '\u867D', '\u6742', '\u98DE', '\u68C0', '\u5438', '\u52A9', '\u5347', '\u9633', '\u4E92', '\u521D', '\u521B', '\u6297', '\u8003', '\u6295', '\u574F', '\u7B56', '\u53E4', '\u5F84', '\u6362', '\u672A', '\u8DD1', '\u7559', '\u94A2', '\u66FE', '\u7AEF', '\u8D23', '\u7AD9', '\u7B80', '\u8FF0', '\u94B1', '\u526F', '\u5C3D', '\u5E1D', '\u5C04', '\u8349', '\u51B2', '\u627F', '\u72EC', '\u4EE4', '\u9650', '\u963F', '\u5BA3', '\u73AF', '\u53CC', '\u8BF7', '\u8D85', '\u5FAE', '\u8BA9', '\u63A7', '\u5DDE', '\u826F', '\u8F74', '\u627E', '\u5426', '\u7EAA', '\u76CA', '\u4F9D', '\u4F18', '\u9876', '\u7840', '\u8F7D', '\u5012', '\u623F', '\u7A81', '\u5750', '\u7C89', '\u654C', '\u7565', '\u5BA2', '\u8881', '\u51B7', '\u80DC', '\u7EDD', '\u6790', '\u5757', '\u5242', '\u6D4B', '\u4E1D', '\u534F', '\u8BC9', '\u5FF5', '\u9648', '\u4ECD', '\u7F57', '\u76D0', '\u53CB', '\u6D0B', '\u9519', '\u82E6', '\u591C', '\u5211', '\u79FB', '\u9891', '\u9010', '\u9760', '\u6DF7', '\u6BCD', '\u77ED', '\u76AE', '\u7EC8', '\u805A', '\u6C7D', '\u6751', '\u4E91', '\u54EA', '\u65E2', '\u8DDD', '\u536B', '\u505C', '\u70C8', '\u592E', '\u5BDF', '\u70E7', '\u8FC5', '\u5883', '\u82E5', '\u5370', '\u6D32', '\u523B', '\u62EC', '\u6FC0', '\u5B54', '\u641E', '\u751A', '\u5BA4', '\u5F85', '\u6838', '\u6821', '\u6563', '\u4FB5', '\u5427', '\u7532', '\u6E38', '\u4E45', '\u83DC', '\u5473', '\u65E7', '\u6A21', '\u6E56', '\u8D27', '\u635F', '\u9884', '\u963B', '\u6BEB', '\u666E', '\u7A33', '\u4E59', '\u5988', '\u690D', '\u606F', '\u6269', '\u94F6', '\u8BED', '\u6325', '\u9152', '\u5B88', '\u62FF', '\u5E8F', '\u7EB8', '\u533B', '\u7F3A', '\u96E8', '\u5417', '\u9488', '\u5218', '\u554A', '\u6025', '\u5531', '\u8BEF', '\u8BAD', '\u613F', '\u5BA1', '\u9644', '\u83B7', '\u8336', '\u9C9C', '\u7CAE', '\u65A4', '\u5B69', '\u8131', '\u786B', '\u80A5', '\u5584', '\u9F99', '\u6F14', '\u7236', '\u6E10', '\u8840', '\u6B22', '\u68B0', '\u638C', '\u6B4C', '\u6C99', '\u521A', '\u653B', '\u8C13', '\u76FE', '\u8BA8', '\u665A', '\u7C92', '\u4E71', '\u71C3', '\u77DB', '\u4E4E', '\u6740', '\u836F', '\u5B81', '\u9C81', '\u8D35', '\u949F', '\u7164', '\u8BFB', '\u73ED', '\u4F2F', '\u9999', '\u4ECB', '\u8FEB', '\u53E5', '\u4E30', '\u57F9', '\u63E1', '\u5170', '\u62C5', '\u5F26', '\u86CB', '\u6C89', '\u5047', '\u7A7F', '\u6267', '\u7B54', '\u4E50', '\u8C01', '\u987A', '\u70DF', '\u7F29', '\u5F81', '\u8138', '\u559C', '\u677E', '\u811A', '\u56F0', '\u5F02', '\u514D', '\u80CC', '\u661F', '\u798F', '\u4E70', '\u67D3', '\u4E95', '\u6982', '\u6162', '\u6015', '\u78C1', '\u500D', '\u7956', '\u7687', '\u4FC3', '\u9759', '\u8865', '\u8BC4', '\u7FFB', '\u8089', '\u8DF5', '\u5C3C', '\u8863', '\u5BBD', '\u626C', '\u68C9', '\u5E0C', '\u4F24', '\u64CD', '\u5782', '\u79CB', '\u5B9C', '\u6C22', '\u5957', '\u7763', '\u632F', '\u67B6', '\u4EAE', '\u672B', '\u5BAA', '\u5E86', '\u7F16', '\u725B', '\u89E6', '\u6620', '\u96F7', '\u9500', '\u8BD7', '\u5EA7', '\u5C45', '\u6293', '\u88C2', '\u80DE', '\u547C', '\u5A18', '\u666F', '\u5A01', '\u7EFF', '\u6676', '\u539A', '\u76DF', '\u8861', '\u9E21', '\u5B59', '\u5EF6', '\u5371', '\u80F6', '\u5C4B', '\u4E61', '\u4E34', '\u9646', '\u987E', '\u6389', '\u5440', '\u706F', '\u5C81', '\u63AA', '\u675F', '\u8010', '\u5267', '\u7389', '\u8D75', '\u8DF3', '\u54E5', '\u5B63', '\u8BFE', '\u51EF', '\u80E1', '\u989D', '\u6B3E', '\u7ECD', '\u5377', '\u9F50', '\u4F1F', '\u84B8', '\u6B96', '\u6C38', '\u5B97', '\u82D7', '\u5DDD', '\u7089', '\u5CA9', '\u5F31', '\u96F6', '\u6768', '\u594F', '\u6CBF', '\u9732', '\u6746', '\u63A2', '\u6ED1', '\u9547', '\u996D', '\u6D53', '\u822A', '\u6000', '\u8D76', '\u5E93', '\u593A', '\u4F0A', '\u7075', '\u7A0E', '\u9014', '\u706D', '\u8D5B', '\u5F52', '\u53EC', '\u9F13', '\u64AD', '\u76D8', '\u88C1', '\u9669', '\u5EB7', '\u552F', '\u5F55', '\u83CC', '\u7EAF', '\u501F', '\u7CD6', '\u76D6', '\u6A2A', '\u7B26', '\u79C1', '\u52AA', '\u5802', '\u57DF', '\u67AA', '\u6DA6', '\u5E45', '\u54C8', '\u7ADF', '\u719F', '\u866B', '\u6CFD', '\u8111', '\u58E4', '\u78B3', '\u6B27', '\u904D', '\u4FA7', '\u5BE8', '\u6562', '\u5F7B', '\u8651', '\u659C', '\u8584', '\u5EAD', '\u7EB3', '\u5F39', '\u9972', '\u4F38', '\u6298', '\u9EA6', '\u6E7F', '\u6697', '\u8377', '\u74E6', '\u585E', '\u5E8A', '\u7B51', '\u6076', '\u6237', '\u8BBF', '\u5854', '\u5947', '\u900F', '\u6881', '\u5200', '\u65CB', '\u8FF9', '\u5361', '\u6C2F', '\u9047', '\u4EFD', '\u6BD2', '\u6CE5', '\u9000', '\u6D17', '\u6446', '\u7070', '\u5F69', '\u5356', '\u8017', '\u590F', '\u62E9', '\u5FD9', '\u94DC', '\u732E', '\u786C', '\u4E88', '\u7E41', '\u5708', '\u96EA', '\u51FD', '\u4EA6', '\u62BD', '\u7BC7', '\u9635', '\u9634', '\u4E01', '\u5C3A', '\u8FFD', '\u5806', '\u96C4', '\u8FCE', '\u6CDB', '\u7238', '\u697C', '\u907F', '\u8C0B', '\u5428', '\u91CE', '\u732A', '\u65D7', '\u7D2F', '\u504F', '\u5178', '\u9986', '\u7D22', '\u79E6', '\u8102', '\u6F6E', '\u7237', '\u8C46', '\u5FFD', '\u6258', '\u60CA', '\u5851', '\u9057', '\u6108', '\u6731', '\u66FF', '\u7EA4', '\u7C97', '\u503E', '\u5C1A', '\u75DB', '\u695A', '\u8C22', '\u594B', '\u8D2D', '\u78E8', '\u541B', '\u6C60', '\u65C1', '\u788E', '\u9AA8', '\u76D1', '\u6355', '\u5F1F', '\u66B4', '\u5272', '\u8D2F', '\u6B8A', '\u91CA', '\u8BCD', '\u4EA1', '\u58C1', '\u987F', '\u5B9D', '\u5348', '\u5C18', '\u95FB', '\u63ED', '\u70AE', '\u6B8B', '\u51AC', '\u6865', '\u5987', '\u8B66', '\u7EFC', '\u62DB', '\u5434', '\u4ED8', '\u6D6E', '\u906D', '\u5F90', '\u60A8', '\u6447', '\u8C37', '\u8D5E', '\u7BB1', '\u9694', '\u8BA2', '\u7537', '\u5439', '\u56ED', '\u7EB7', '\u5510', '\u8D25', '\u5B8B', '\u73BB', '\u5DE8', '\u8015', '\u5766', '\u8363', '\u95ED', '\u6E7E', '\u952E', '\u51E1', '\u9A7B', '\u9505', '\u6551', '\u6069', '\u5265', '\u51DD', '\u78B1', '\u9F7F', '\u622A', '\u70BC', '\u9EBB', '\u7EBA', '\u7981', '\u5E9F', '\u76DB', '\u7248', '\u7F13', '\u51C0', '\u775B', '\u660C', '\u5A5A', '\u6D89', '\u7B52', '\u5634', '\u63D2', '\u5CB8', '\u6717', '\u5E84', '\u8857', '\u85CF', '\u59D1', '\u8D38', '\u8150', '\u5974', '\u5566', '\u60EF', '\u4E58', '\u4F19', '\u6062', '\u5300', '\u7EB1', '\u624E', '\u8FA9', '\u8033', '\u5F6A', '\u81E3', '\u4EBF', '\u7483', '\u62B5', '\u8109', '\u79C0', '\u8428', '\u4FC4', '\u7F51', '\u821E', '\u5E97', '\u55B7', '\u7EB5', '\u5BF8', '\u6C57', '\u6302', '\u6D2A', '\u8D3A', '\u95EA', '\u67EC', '\u7206', '\u70EF', '\u6D25', '\u7A3B', '\u5899', '\u8F6F', '\u52C7', '\u50CF', '\u6EDA', '\u5398', '\u8499', '\u82B3', '\u80AF', '\u5761', '\u67F1', '\u8361', '\u817F', '\u4EEA', '\u65C5', '\u5C3E', '\u8F67', '\u51B0', '\u8D21', '\u767B', '\u9ECE', '\u524A', '\u94BB', '\u52D2', '\u9003', '\u969C', '\u6C28', '\u90ED', '\u5CF0', '\u5E01', '\u6E2F', '\u4F0F', '\u8F68', '\u4EA9', '\u6BD5', '\u64E6', '\u83AB', '\u523A', '\u6D6A', '\u79D8', '\u63F4', '\u682A', '\u5065', '\u552E', '\u80A1', '\u5C9B', '\u7518', '\u6CE1', '\u7761', '\u7AE5', '\u94F8', '\u6C64', '\u9600', '\u4F11', '\u6C47', '\u820D', '\u7267', '\u7ED5', '\u70B8', '\u54F2', '\u78F7', '\u7EE9', '\u670B', '\u6DE1', '\u5C16', '\u542F', '\u9677', '\u67F4', '\u5448', '\u5F92', '\u989C', '\u6CEA', '\u7A0D', '\u5FD8', '\u6CF5', '\u84DD', '\u62D6', '\u6D1E', '\u6388', '\u955C', '\u8F9B', '\u58EE', '\u950B', '\u8D2B', '\u865A', '\u5F2F', '\u6469', '\u6CF0', '\u5E7C', '\u5EF7', '\u5C0A', '\u7A97', '\u7EB2', '\u5F04', '\u96B6', '\u7591', '\u6C0F', '\u5BAB', '\u59D0', '\u9707', '\u745E', '\u602A', '\u5C24', '\u7434', '\u5FAA', '\u63CF', '\u819C', '\u8FDD', '\u5939', '\u8170', '\u7F18', '\u73E0', '\u7A77', '\u68EE', '\u679D', '\u7AF9', '\u6C9F', '\u50AC', '\u7EF3', '\u5FC6', '\u90A6', '\u5269', '\u5E78', '\u6D46', '\u680F', '\u62E5', '\u7259', '\u8D2E', '\u793C', '\u6EE4', '\u94A0', '\u7EB9', '\u7F62', '\u62CD', '\u54B1', '\u558A', '\u8896', '\u57C3', '\u52E4', '\u7F5A', '\u7126', '\u6F5C', '\u4F0D', '\u58A8', '\u6B32', '\u7F1D', '\u59D3', '\u520A', '\u9971', '\u4EFF', '\u5956', '\u94DD', '\u9B3C', '\u4E3D', '\u8DE8', '\u9ED8', '\u6316', '\u94FE', '\u626B', '\u559D', '\u888B', '\u70AD', '\u6C61', '\u5E55', '\u8BF8', '\u5F27', '\u52B1', '\u6885', '\u5976', '\u6D01', '\u707E', '\u821F', '\u9274', '\u82EF', '\u8BBC', '\u62B1', '\u6BC1', '\u61C2', '\u5BD2', '\u667A', '\u57D4', '\u5BC4', '\u5C4A', '\u8DC3', '\u6E21', '\u6311', '\u4E39', '\u8270', '\u8D1D', '\u78B0', '\u62D4', '\u7239', '\u6234', '\u7801', '\u68A6', '\u82BD', '\u7194', '\u8D64', '\u6E14', '\u54ED', '\u656C', '\u9897', '\u5954', '\u94C5', '\u4EF2', '\u864E', '\u7A00', '\u59B9', '\u4E4F', '\u73CD', '\u7533', '\u684C', '\u9075', '\u5141', '\u9686', '\u87BA', '\u4ED3', '\u9B4F', '\u9510', '\u6653', '\u6C2E', '\u517C', '\u9690', '\u788D', '\u8D6B', '\u62E8', '\u5FE0', '\u8083', '\u7F38', '\u7275', '\u62A2', '\u535A', '\u5DE7', '\u58F3', '\u5144', '\u675C', '\u8BAF', '\u8BDA', '\u78A7', '\u7965', '\u67EF', '\u9875', '\u5DE1', '\u77E9', '\u60B2', '\u704C', '\u9F84', '\u4F26', '\u7968', '\u5BFB', '\u6842', '\u94FA', '\u5723', '\u6050', '\u6070', '\u90D1', '\u8DA3', '\u62AC', '\u8352', '\u817E', '\u8D34', '\u67D4', '\u6EF4', '\u731B', '\u9614', '\u8F86', '\u59BB', '\u586B', '\u64A4', '\u50A8', '\u7B7E', '\u95F9', '\u6270', '\u7D2B', '\u7802', '\u9012', '\u620F', '\u540A', '\u9676', '\u4F10', '\u5582', '\u7597', '\u74F6', '\u5A46', '\u629A', '\u81C2', '\u6478', '\u5FCD', '\u867E', '\u8721', '\u90BB', '\u80F8', '\u5DE9', '\u6324', '\u5076', '\u5F03', '\u69FD', '\u52B2', '\u4E73', '\u9093', '\u5409', '\u4EC1', '\u70C2', '\u7816', '\u79DF', '\u4E4C', '\u8230', '\u4F34', '\u74DC', '\u6D45', '\u4E19', '\u6682', '\u71E5', '\u6A61', '\u67F3', '\u8FF7', '\u6696', '\u724C', '\u79E7', '\u80C6', '\u8BE6', '\u7C27', '\u8E0F', '\u74F7', '\u8C31', '\u5446', '\u5BBE', '\u7CCA', '\u6D1B', '\u8F89', '\u6124', '\u7ADE', '\u9699', '\u6012', '\u7C98', '\u4E43', '\u7EEA', '\u80A9', '\u7C4D', '\u654F', '\u6D82', '\u7199', '\u7686', '\u4FA6', '\u60AC', '\u6398', '\u4EAB', '\u7EA0', '\u9192', '\u72C2', '\u9501', '\u6DC0', '\u6068', '\u7272', '\u9738', '\u722C', '\u8D4F', '\u9006', '\u73A9', '\u9675', '\u795D', '\u79D2', '\u6D59', '\u8C8C', '\u5F79', '\u5F7C', '\u6089', '\u9E2D', '\u8D8B', '\u51E4', '\u6668', '\u755C', '\u8F88', '\u79E9', '\u5375', '\u7F72', '\u68AF', '\u708E', '\u6EE9', '\u68CB', '\u9A71', '\u7B5B', '\u5CE1', '\u5192', '\u5565', '\u5BFF', '\u8BD1', '\u6D78', '\u6CC9', '\u5E3D', '\u8FDF', '\u7845', '\u7586', '\u8D37', '\u6F0F', '\u7A3F', '\u51A0', '\u5AE9', '\u80C1', '\u82AF', '\u7262', '\u53DB', '\u8680', '\u5965', '\u9E23', '\u5CAD', '\u7F8A', '\u51ED', '\u4E32', '\u5858', '\u7ED8', '\u9175', '\u878D', '\u76C6', '\u9521', '\u5E99', '\u7B79', '\u51BB', '\u8F85', '\u6444', '\u88AD', '\u7B4B', '\u62D2', '\u50DA', '\u65F1', '\u94BE', '\u9E1F', '\u6F06', '\u6C88', '\u7709', '\u758F', '\u6DFB', '\u68D2', '\u7A57', '\u785D', '\u97E9', '\u903C', '\u626D', '\u4FA8', '\u51C9', '\u633A', '\u7897', '\u683D', '\u7092', '\u676F', '\u60A3', '\u998F', '\u529D', '\u8C6A', '\u8FBD', '\u52C3', '\u9E3F', '\u65E6', '\u540F', '\u62DC', '\u72D7', '\u57CB', '\u8F8A', '\u63A9', '\u996E', '\u642C', '\u9A82', '\u8F9E', '\u52FE', '\u6263', '\u4F30', '\u848B', '\u7ED2', '\u96FE', '\u4E08', '\u6735', '\u59C6', '\u62DF', '\u5B87', '\u8F91', '\u9655', '\u96D5', '\u507F', '\u84C4', '\u5D07', '\u526A', '\u5021', '\u5385', '\u54AC', '\u9A76', '\u85AF', '\u5237', '\u65A5', '\u756A', '\u8D4B', '\u5949', '\u4F5B', '\u6D47', '\u6F2B', '\u66FC', '\u6247', '\u9499', '\u6843', '\u6276', '\u4ED4', '\u8FD4', '\u4FD7', '\u4E8F', '\u8154', '\u978B', '\u68F1', '\u8986', '\u6846', '\u6084', '\u53D4', '\u649E', '\u9A97', '\u52D8', '\u65FA', '\u6CB8', '\u5B64', '\u5410', '\u5B5F', '\u6E20', '\u5C48', '\u75BE', '\u5999', '\u60DC', '\u4EF0', '\u72E0', '\u80C0', '\u8C10', '\u629B', '\u9709', '\u6851', '\u5C97', '\u561B', '\u8870', '\u76D7', '\u6E17', '\u810F', '\u8D56', '\u6D8C', '\u751C', '\u66F9', '\u9605', '\u808C', '\u54E9', '\u5389', '\u70C3', '\u7EAC', '\u6BC5', '\u6628', '\u4F2A', '\u75C7', '\u716E', '\u53F9', '\u9489', '\u642D', '\u830E', '\u7B3C', '\u9177', '\u5077', '\u5F13', '\u9525', '\u6052', '\u6770', '\u5751', '\u9F3B', '\u7FFC', '\u7EB6', '\u53D9', '\u72F1', '\u902E', '\u7F50', '\u7EDC', '\u68DA', '\u6291', '\u81A8', '\u852C', '\u5BFA', '\u9AA4', '\u7A46', '\u51B6', '\u67AF', '\u518C', '\u5C38', '\u51F8', '\u7EC5', '\u576F', '\u727A', '\u7130', '\u8F70', '\u6B23', '\u664B', '\u7626', '\u5FA1', '\u952D', '\u9526', '\u4E27', '\u65EC', '\u953B', '\u5784', '\u641C', '\u6251', '\u9080', '\u4EAD', '\u916F', '\u8FC8', '\u8212', '\u8106', '\u9176', '\u95F2', '\u5FE7', '\u915A', '\u987D', '\u7FBD', '\u6DA8', '\u5378', '\u4ED7', '\u966A', '\u8F9F', '\u60E9', '\u676D', '\u59DA', '\u809A', '\u6349', '\u98D8', '\u6F02', '\u6606', '\u6B3A', '\u543E', '\u90CE', '\u70F7', '\u6C41', '\u5475', '\u9970', '\u8427', '\u96C5', '\u90AE', '\u8FC1', '\u71D5', '\u6492', '\u59FB', '\u8D74', '\u5BB4', '\u70E6', '\u503A', '\u5E10', '\u6591', '\u94C3', '\u65E8', '\u9187', '\u8463', '\u997C', '\u96CF', '\u59FF', '\u62CC', '\u5085', '\u8179', '\u59A5', '\u63C9', '\u8D24', '\u62C6', '\u6B6A', '\u8461', '\u80FA', '\u4E22', '\u6D69', '\u5FBD', '\u6602', '\u57AB', '\u6321', '\u89C8', '\u8D2A', '\u6170', '\u7F34', '\u6C6A', '\u614C', '\u51AF', '\u8BFA', '\u59DC', '\u8C0A', '\u51F6', '\u52A3', '\u8BEC', '\u8000', '\u660F', '\u8EBA', '\u76C8', '\u9A91', '\u4E54', '\u6EAA', '\u4E1B', '\u5362', '\u62B9', '\u95F7', '\u54A8', '\u522E', '\u9A7E', '\u7F06', '\u609F', '\u6458', '\u94D2', '\u63B7', '\u9887', '\u5E7B', '\u67C4', '\u60E0', '\u60E8', '\u4F73', '\u4EC7', '\u814A', '\u7A9D', '\u6DA4', '\u5251', '\u77A7', '\u5821', '\u6CFC', '\u8471', '\u7F69', '\u970D', '\u635E', '\u80CE', '\u82CD', '\u6EE8', '\u4FE9', '\u6345', '\u6E58', '\u780D', '\u971E', '\u90B5', '\u8404', '\u75AF', '\u6DEE', '\u9042', '\u718A', '\u7CAA', '\u70D8', '\u5BBF', '\u6863', '\u6208', '\u9A73', '\u5AC2', '\u88D5', '\u5F99', '\u7BAD', '\u6350', '\u80A0', '\u6491', '\u6652', '\u8FA8', '\u6BBF', '\u83B2', '\u644A', '\u6405', '\u9171', '\u5C4F', '\u75AB', '\u54C0', '\u8521', '\u5835', '\u6CAB', '\u76B1', '\u7545', '\u53E0', '\u9601', '\u83B1', '\u6572', '\u8F96', '\u94A9', '\u75D5', '\u575D', '\u5DF7', '\u997F', '\u7978', '\u4E18', '\u7384', '\u6E9C', '\u66F0', '\u903B', '\u5F6D', '\u5C1D', '\u537F', '\u59A8', '\u8247', '\u541E', '\u97E6', '\u6028', '\u77EE', '\u6B47'];\n\nmodule.exports = chinese;", "'use strict';\n\nvar english = ['abandon', 'ability', 'able', 'about', 'above', 'absent', 'absorb', 'abstract', 'absurd', 'abuse', 'access', 'accident', 'account', 'accuse', 'achieve', 'acid', 'acoustic', 'acquire', 'across', 'act', 'action', 'actor', 'actress', 'actual', 'adapt', 'add', 'addict', 'address', 'adjust', 'admit', 'adult', 'advance', 'advice', 'aerobic', 'affair', 'afford', 'afraid', 'again', 'age', 'agent', 'agree', 'ahead', 'aim', 'air', 'airport', 'aisle', 'alarm', 'album', 'alcohol', 'alert', 'alien', 'all', 'alley', 'allow', 'almost', 'alone', 'alpha', 'already', 'also', 'alter', 'always', 'amateur', 'amazing', 'among', 'amount', 'amused', 'analyst', 'anchor', 'ancient', 'anger', 'angle', 'angry', 'animal', 'ankle', 'announce', 'annual', 'another', 'answer', 'antenna', 'antique', 'anxiety', 'any', 'apart', 'apology', 'appear', 'apple', 'approve', 'april', 'arch', 'arctic', 'area', 'arena', 'argue', 'arm', 'armed', 'armor', 'army', 'around', 'arrange', 'arrest', 'arrive', 'arrow', 'art', 'artefact', 'artist', 'artwork', 'ask', 'aspect', 'assault', 'asset', 'assist', 'assume', 'asthma', 'athlete', 'atom', 'attack', 'attend', 'attitude', 'attract', 'auction', 'audit', 'august', 'aunt', 'author', 'auto', 'autumn', 'average', 'avocado', 'avoid', 'awake', 'aware', 'away', 'awesome', 'awful', 'awkward', 'axis', 'baby', 'bachelor', 'bacon', 'badge', 'bag', 'balance', 'balcony', 'ball', 'bamboo', 'banana', 'banner', 'bar', 'barely', 'bargain', 'barrel', 'base', 'basic', 'basket', 'battle', 'beach', 'bean', 'beauty', 'because', 'become', 'beef', 'before', 'begin', 'behave', 'behind', 'believe', 'below', 'belt', 'bench', 'benefit', 'best', 'betray', 'better', 'between', 'beyond', 'bicycle', 'bid', 'bike', 'bind', 'biology', 'bird', 'birth', 'bitter', 'black', 'blade', 'blame', 'blanket', 'blast', 'bleak', 'bless', 'blind', 'blood', 'blossom', 'blouse', 'blue', 'blur', 'blush', 'board', 'boat', 'body', 'boil', 'bomb', 'bone', 'bonus', 'book', 'boost', 'border', 'boring', 'borrow', 'boss', 'bottom', 'bounce', 'box', 'boy', 'bracket', 'brain', 'brand', 'brass', 'brave', 'bread', 'breeze', 'brick', 'bridge', 'brief', 'bright', 'bring', 'brisk', 'broccoli', 'broken', 'bronze', 'broom', 'brother', 'brown', 'brush', 'bubble', 'buddy', 'budget', 'buffalo', 'build', 'bulb', 'bulk', 'bullet', 'bundle', 'bunker', 'burden', 'burger', 'burst', 'bus', 'business', 'busy', 'butter', 'buyer', 'buzz', 'cabbage', 'cabin', 'cable', 'cactus', 'cage', 'cake', 'call', 'calm', 'camera', 'camp', 'can', 'canal', 'cancel', 'candy', 'cannon', 'canoe', 'canvas', 'canyon', 'capable', 'capital', 'captain', 'car', 'carbon', 'card', 'cargo', 'carpet', 'carry', 'cart', 'case', 'cash', 'casino', 'castle', 'casual', 'cat', 'catalog', 'catch', 'category', 'cattle', 'caught', 'cause', 'caution', 'cave', 'ceiling', 'celery', 'cement', 'census', 'century', 'cereal', 'certain', 'chair', 'chalk', 'champion', 'change', 'chaos', 'chapter', 'charge', 'chase', 'chat', 'cheap', 'check', 'cheese', 'chef', 'cherry', 'chest', 'chicken', 'chief', 'child', 'chimney', 'choice', 'choose', 'chronic', 'chuckle', 'chunk', 'churn', 'cigar', 'cinnamon', 'circle', 'citizen', 'city', 'civil', 'claim', 'clap', 'clarify', 'claw', 'clay', 'clean', 'clerk', 'clever', 'click', 'client', 'cliff', 'climb', 'clinic', 'clip', 'clock', 'clog', 'close', 'cloth', 'cloud', 'clown', 'club', 'clump', 'cluster', 'clutch', 'coach', 'coast', 'coconut', 'code', 'coffee', 'coil', 'coin', 'collect', 'color', 'column', 'combine', 'come', 'comfort', 'comic', 'common', 'company', 'concert', 'conduct', 'confirm', 'congress', 'connect', 'consider', 'control', 'convince', 'cook', 'cool', 'copper', 'copy', 'coral', 'core', 'corn', 'correct', 'cost', 'cotton', 'couch', 'country', 'couple', 'course', 'cousin', 'cover', 'coyote', 'crack', 'cradle', 'craft', 'cram', 'crane', 'crash', 'crater', 'crawl', 'crazy', 'cream', 'credit', 'creek', 'crew', 'cricket', 'crime', 'crisp', 'critic', 'crop', 'cross', 'crouch', 'crowd', 'crucial', 'cruel', 'cruise', 'crumble', 'crunch', 'crush', 'cry', 'crystal', 'cube', 'culture', 'cup', 'cupboard', 'curious', 'current', 'curtain', 'curve', 'cushion', 'custom', 'cute', 'cycle', 'dad', 'damage', 'damp', 'dance', 'danger', 'daring', 'dash', 'daughter', 'dawn', 'day', 'deal', 'debate', 'debris', 'decade', 'december', 'decide', 'decline', 'decorate', 'decrease', 'deer', 'defense', 'define', 'defy', 'degree', 'delay', 'deliver', 'demand', 'demise', 'denial', 'dentist', 'deny', 'depart', 'depend', 'deposit', 'depth', 'deputy', 'derive', 'describe', 'desert', 'design', 'desk', 'despair', 'destroy', 'detail', 'detect', 'develop', 'device', 'devote', 'diagram', 'dial', 'diamond', 'diary', 'dice', 'diesel', 'diet', 'differ', 'digital', 'dignity', 'dilemma', 'dinner', 'dinosaur', 'direct', 'dirt', 'disagree', 'discover', 'disease', 'dish', 'dismiss', 'disorder', 'display', 'distance', 'divert', 'divide', 'divorce', 'dizzy', 'doctor', 'document', 'dog', 'doll', 'dolphin', 'domain', 'donate', 'donkey', 'donor', 'door', 'dose', 'double', 'dove', 'draft', 'dragon', 'drama', 'drastic', 'draw', 'dream', 'dress', 'drift', 'drill', 'drink', 'drip', 'drive', 'drop', 'drum', 'dry', 'duck', 'dumb', 'dune', 'during', 'dust', 'dutch', 'duty', 'dwarf', 'dynamic', 'eager', 'eagle', 'early', 'earn', 'earth', 'easily', 'east', 'easy', 'echo', 'ecology', 'economy', 'edge', 'edit', 'educate', 'effort', 'egg', 'eight', 'either', 'elbow', 'elder', 'electric', 'elegant', 'element', 'elephant', 'elevator', 'elite', 'else', 'embark', 'embody', 'embrace', 'emerge', 'emotion', 'employ', 'empower', 'empty', 'enable', 'enact', 'end', 'endless', 'endorse', 'enemy', 'energy', 'enforce', 'engage', 'engine', 'enhance', 'enjoy', 'enlist', 'enough', 'enrich', 'enroll', 'ensure', 'enter', 'entire', 'entry', 'envelope', 'episode', 'equal', 'equip', 'era', 'erase', 'erode', 'erosion', 'error', 'erupt', 'escape', 'essay', 'essence', 'estate', 'eternal', 'ethics', 'evidence', 'evil', 'evoke', 'evolve', 'exact', 'example', 'excess', 'exchange', 'excite', 'exclude', 'excuse', 'execute', 'exercise', 'exhaust', 'exhibit', 'exile', 'exist', 'exit', 'exotic', 'expand', 'expect', 'expire', 'explain', 'expose', 'express', 'extend', 'extra', 'eye', 'eyebrow', 'fabric', 'face', 'faculty', 'fade', 'faint', 'faith', 'fall', 'false', 'fame', 'family', 'famous', 'fan', 'fancy', 'fantasy', 'farm', 'fashion', 'fat', 'fatal', 'father', 'fatigue', 'fault', 'favorite', 'feature', 'february', 'federal', 'fee', 'feed', 'feel', 'female', 'fence', 'festival', 'fetch', 'fever', 'few', 'fiber', 'fiction', 'field', 'figure', 'file', 'film', 'filter', 'final', 'find', 'fine', 'finger', 'finish', 'fire', 'firm', 'first', 'fiscal', 'fish', 'fit', 'fitness', 'fix', 'flag', 'flame', 'flash', 'flat', 'flavor', 'flee', 'flight', 'flip', 'float', 'flock', 'floor', 'flower', 'fluid', 'flush', 'fly', 'foam', 'focus', 'fog', 'foil', 'fold', 'follow', 'food', 'foot', 'force', 'forest', 'forget', 'fork', 'fortune', 'forum', 'forward', 'fossil', 'foster', 'found', 'fox', 'fragile', 'frame', 'frequent', 'fresh', 'friend', 'fringe', 'frog', 'front', 'frost', 'frown', 'frozen', 'fruit', 'fuel', 'fun', 'funny', 'furnace', 'fury', 'future', 'gadget', 'gain', 'galaxy', 'gallery', 'game', 'gap', 'garage', 'garbage', 'garden', 'garlic', 'garment', 'gas', 'gasp', 'gate', 'gather', 'gauge', 'gaze', 'general', 'genius', 'genre', 'gentle', 'genuine', 'gesture', 'ghost', 'giant', 'gift', 'giggle', 'ginger', 'giraffe', 'girl', 'give', 'glad', 'glance', 'glare', 'glass', 'glide', 'glimpse', 'globe', 'gloom', 'glory', 'glove', 'glow', 'glue', 'goat', 'goddess', 'gold', 'good', 'goose', 'gorilla', 'gospel', 'gossip', 'govern', 'gown', 'grab', 'grace', 'grain', 'grant', 'grape', 'grass', 'gravity', 'great', 'green', 'grid', 'grief', 'grit', 'grocery', 'group', 'grow', 'grunt', 'guard', 'guess', 'guide', 'guilt', 'guitar', 'gun', 'gym', 'habit', 'hair', 'half', 'hammer', 'hamster', 'hand', 'happy', 'harbor', 'hard', 'harsh', 'harvest', 'hat', 'have', 'hawk', 'hazard', 'head', 'health', 'heart', 'heavy', 'hedgehog', 'height', 'hello', 'helmet', 'help', 'hen', 'hero', 'hidden', 'high', 'hill', 'hint', 'hip', 'hire', 'history', 'hobby', 'hockey', 'hold', 'hole', 'holiday', 'hollow', 'home', 'honey', 'hood', 'hope', 'horn', 'horror', 'horse', 'hospital', 'host', 'hotel', 'hour', 'hover', 'hub', 'huge', 'human', 'humble', 'humor', 'hundred', 'hungry', 'hunt', 'hurdle', 'hurry', 'hurt', 'husband', 'hybrid', 'ice', 'icon', 'idea', 'identify', 'idle', 'ignore', 'ill', 'illegal', 'illness', 'image', 'imitate', 'immense', 'immune', 'impact', 'impose', 'improve', 'impulse', 'inch', 'include', 'income', 'increase', 'index', 'indicate', 'indoor', 'industry', 'infant', 'inflict', 'inform', 'inhale', 'inherit', 'initial', 'inject', 'injury', 'inmate', 'inner', 'innocent', 'input', 'inquiry', 'insane', 'insect', 'inside', 'inspire', 'install', 'intact', 'interest', 'into', 'invest', 'invite', 'involve', 'iron', 'island', 'isolate', 'issue', 'item', 'ivory', 'jacket', 'jaguar', 'jar', 'jazz', 'jealous', 'jeans', 'jelly', 'jewel', 'job', 'join', 'joke', 'journey', 'joy', 'judge', 'juice', 'jump', 'jungle', 'junior', 'junk', 'just', 'kangaroo', 'keen', 'keep', 'ketchup', 'key', 'kick', 'kid', 'kidney', 'kind', 'kingdom', 'kiss', 'kit', 'kitchen', 'kite', 'kitten', 'kiwi', 'knee', 'knife', 'knock', 'know', 'lab', 'label', 'labor', 'ladder', 'lady', 'lake', 'lamp', 'language', 'laptop', 'large', 'later', 'latin', 'laugh', 'laundry', 'lava', 'law', 'lawn', 'lawsuit', 'layer', 'lazy', 'leader', 'leaf', 'learn', 'leave', 'lecture', 'left', 'leg', 'legal', 'legend', 'leisure', 'lemon', 'lend', 'length', 'lens', 'leopard', 'lesson', 'letter', 'level', 'liar', 'liberty', 'library', 'license', 'life', 'lift', 'light', 'like', 'limb', 'limit', 'link', 'lion', 'liquid', 'list', 'little', 'live', 'lizard', 'load', 'loan', 'lobster', 'local', 'lock', 'logic', 'lonely', 'long', 'loop', 'lottery', 'loud', 'lounge', 'love', 'loyal', 'lucky', 'luggage', 'lumber', 'lunar', 'lunch', 'luxury', 'lyrics', 'machine', 'mad', 'magic', 'magnet', 'maid', 'mail', 'main', 'major', 'make', 'mammal', 'man', 'manage', 'mandate', 'mango', 'mansion', 'manual', 'maple', 'marble', 'march', 'margin', 'marine', 'market', 'marriage', 'mask', 'mass', 'master', 'match', 'material', 'math', 'matrix', 'matter', 'maximum', 'maze', 'meadow', 'mean', 'measure', 'meat', 'mechanic', 'medal', 'media', 'melody', 'melt', 'member', 'memory', 'mention', 'menu', 'mercy', 'merge', 'merit', 'merry', 'mesh', 'message', 'metal', 'method', 'middle', 'midnight', 'milk', 'million', 'mimic', 'mind', 'minimum', 'minor', 'minute', 'miracle', 'mirror', 'misery', 'miss', 'mistake', 'mix', 'mixed', 'mixture', 'mobile', 'model', 'modify', 'mom', 'moment', 'monitor', 'monkey', 'monster', 'month', 'moon', 'moral', 'more', 'morning', 'mosquito', 'mother', 'motion', 'motor', 'mountain', 'mouse', 'move', 'movie', 'much', 'muffin', 'mule', 'multiply', 'muscle', 'museum', 'mushroom', 'music', 'must', 'mutual', 'myself', 'mystery', 'myth', 'naive', 'name', 'napkin', 'narrow', 'nasty', 'nation', 'nature', 'near', 'neck', 'need', 'negative', 'neglect', 'neither', 'nephew', 'nerve', 'nest', 'net', 'network', 'neutral', 'never', 'news', 'next', 'nice', 'night', 'noble', 'noise', 'nominee', 'noodle', 'normal', 'north', 'nose', 'notable', 'note', 'nothing', 'notice', 'novel', 'now', 'nuclear', 'number', 'nurse', 'nut', 'oak', 'obey', 'object', 'oblige', 'obscure', 'observe', 'obtain', 'obvious', 'occur', 'ocean', 'october', 'odor', 'off', 'offer', 'office', 'often', 'oil', 'okay', 'old', 'olive', 'olympic', 'omit', 'once', 'one', 'onion', 'online', 'only', 'open', 'opera', 'opinion', 'oppose', 'option', 'orange', 'orbit', 'orchard', 'order', 'ordinary', 'organ', 'orient', 'original', 'orphan', 'ostrich', 'other', 'outdoor', 'outer', 'output', 'outside', 'oval', 'oven', 'over', 'own', 'owner', 'oxygen', 'oyster', 'ozone', 'pact', 'paddle', 'page', 'pair', 'palace', 'palm', 'panda', 'panel', 'panic', 'panther', 'paper', 'parade', 'parent', 'park', 'parrot', 'party', 'pass', 'patch', 'path', 'patient', 'patrol', 'pattern', 'pause', 'pave', 'payment', 'peace', 'peanut', 'pear', 'peasant', 'pelican', 'pen', 'penalty', 'pencil', 'people', 'pepper', 'perfect', 'permit', 'person', 'pet', 'phone', 'photo', 'phrase', 'physical', 'piano', 'picnic', 'picture', 'piece', 'pig', 'pigeon', 'pill', 'pilot', 'pink', 'pioneer', 'pipe', 'pistol', 'pitch', 'pizza', 'place', 'planet', 'plastic', 'plate', 'play', 'please', 'pledge', 'pluck', 'plug', 'plunge', 'poem', 'poet', 'point', 'polar', 'pole', 'police', 'pond', 'pony', 'pool', 'popular', 'portion', 'position', 'possible', 'post', 'potato', 'pottery', 'poverty', 'powder', 'power', 'practice', 'praise', 'predict', 'prefer', 'prepare', 'present', 'pretty', 'prevent', 'price', 'pride', 'primary', 'print', 'priority', 'prison', 'private', 'prize', 'problem', 'process', 'produce', 'profit', 'program', 'project', 'promote', 'proof', 'property', 'prosper', 'protect', 'proud', 'provide', 'public', 'pudding', 'pull', 'pulp', 'pulse', 'pumpkin', 'punch', 'pupil', 'puppy', 'purchase', 'purity', 'purpose', 'purse', 'push', 'put', 'puzzle', 'pyramid', 'quality', 'quantum', 'quarter', 'question', 'quick', 'quit', 'quiz', 'quote', 'rabbit', 'raccoon', 'race', 'rack', 'radar', 'radio', 'rail', 'rain', 'raise', 'rally', 'ramp', 'ranch', 'random', 'range', 'rapid', 'rare', 'rate', 'rather', 'raven', 'raw', 'razor', 'ready', 'real', 'reason', 'rebel', 'rebuild', 'recall', 'receive', 'recipe', 'record', 'recycle', 'reduce', 'reflect', 'reform', 'refuse', 'region', 'regret', 'regular', 'reject', 'relax', 'release', 'relief', 'rely', 'remain', 'remember', 'remind', 'remove', 'render', 'renew', 'rent', 'reopen', 'repair', 'repeat', 'replace', 'report', 'require', 'rescue', 'resemble', 'resist', 'resource', 'response', 'result', 'retire', 'retreat', 'return', 'reunion', 'reveal', 'review', 'reward', 'rhythm', 'rib', 'ribbon', 'rice', 'rich', 'ride', 'ridge', 'rifle', 'right', 'rigid', 'ring', 'riot', 'ripple', 'risk', 'ritual', 'rival', 'river', 'road', 'roast', 'robot', 'robust', 'rocket', 'romance', 'roof', 'rookie', 'room', 'rose', 'rotate', 'rough', 'round', 'route', 'royal', 'rubber', 'rude', 'rug', 'rule', 'run', 'runway', 'rural', 'sad', 'saddle', 'sadness', 'safe', 'sail', 'salad', 'salmon', 'salon', 'salt', 'salute', 'same', 'sample', 'sand', 'satisfy', 'satoshi', 'sauce', 'sausage', 'save', 'say', 'scale', 'scan', 'scare', 'scatter', 'scene', 'scheme', 'school', 'science', 'scissors', 'scorpion', 'scout', 'scrap', 'screen', 'script', 'scrub', 'sea', 'search', 'season', 'seat', 'second', 'secret', 'section', 'security', 'seed', 'seek', 'segment', 'select', 'sell', 'seminar', 'senior', 'sense', 'sentence', 'series', 'service', 'session', 'settle', 'setup', 'seven', 'shadow', 'shaft', 'shallow', 'share', 'shed', 'shell', 'sheriff', 'shield', 'shift', 'shine', 'ship', 'shiver', 'shock', 'shoe', 'shoot', 'shop', 'short', 'shoulder', 'shove', 'shrimp', 'shrug', 'shuffle', 'shy', 'sibling', 'sick', 'side', 'siege', 'sight', 'sign', 'silent', 'silk', 'silly', 'silver', 'similar', 'simple', 'since', 'sing', 'siren', 'sister', 'situate', 'six', 'size', 'skate', 'sketch', 'ski', 'skill', 'skin', 'skirt', 'skull', 'slab', 'slam', 'sleep', 'slender', 'slice', 'slide', 'slight', 'slim', 'slogan', 'slot', 'slow', 'slush', 'small', 'smart', 'smile', 'smoke', 'smooth', 'snack', 'snake', 'snap', 'sniff', 'snow', 'soap', 'soccer', 'social', 'sock', 'soda', 'soft', 'solar', 'soldier', 'solid', 'solution', 'solve', 'someone', 'song', 'soon', 'sorry', 'sort', 'soul', 'sound', 'soup', 'source', 'south', 'space', 'spare', 'spatial', 'spawn', 'speak', 'special', 'speed', 'spell', 'spend', 'sphere', 'spice', 'spider', 'spike', 'spin', 'spirit', 'split', 'spoil', 'sponsor', 'spoon', 'sport', 'spot', 'spray', 'spread', 'spring', 'spy', 'square', 'squeeze', 'squirrel', 'stable', 'stadium', 'staff', 'stage', 'stairs', 'stamp', 'stand', 'start', 'state', 'stay', 'steak', 'steel', 'stem', 'step', 'stereo', 'stick', 'still', 'sting', 'stock', 'stomach', 'stone', 'stool', 'story', 'stove', 'strategy', 'street', 'strike', 'strong', 'struggle', 'student', 'stuff', 'stumble', 'style', 'subject', 'submit', 'subway', 'success', 'such', 'sudden', 'suffer', 'sugar', 'suggest', 'suit', 'summer', 'sun', 'sunny', 'sunset', 'super', 'supply', 'supreme', 'sure', 'surface', 'surge', 'surprise', 'surround', 'survey', 'suspect', 'sustain', 'swallow', 'swamp', 'swap', 'swarm', 'swear', 'sweet', 'swift', 'swim', 'swing', 'switch', 'sword', 'symbol', 'symptom', 'syrup', 'system', 'table', 'tackle', 'tag', 'tail', 'talent', 'talk', 'tank', 'tape', 'target', 'task', 'taste', 'tattoo', 'taxi', 'teach', 'team', 'tell', 'ten', 'tenant', 'tennis', 'tent', 'term', 'test', 'text', 'thank', 'that', 'theme', 'then', 'theory', 'there', 'they', 'thing', 'this', 'thought', 'three', 'thrive', 'throw', 'thumb', 'thunder', 'ticket', 'tide', 'tiger', 'tilt', 'timber', 'time', 'tiny', 'tip', 'tired', 'tissue', 'title', 'toast', 'tobacco', 'today', 'toddler', 'toe', 'together', 'toilet', 'token', 'tomato', 'tomorrow', 'tone', 'tongue', 'tonight', 'tool', 'tooth', 'top', 'topic', 'topple', 'torch', 'tornado', 'tortoise', 'toss', 'total', 'tourist', 'toward', 'tower', 'town', 'toy', 'track', 'trade', 'traffic', 'tragic', 'train', 'transfer', 'trap', 'trash', 'travel', 'tray', 'treat', 'tree', 'trend', 'trial', 'tribe', 'trick', 'trigger', 'trim', 'trip', 'trophy', 'trouble', 'truck', 'true', 'truly', 'trumpet', 'trust', 'truth', 'try', 'tube', 'tuition', 'tumble', 'tuna', 'tunnel', 'turkey', 'turn', 'turtle', 'twelve', 'twenty', 'twice', 'twin', 'twist', 'two', 'type', 'typical', 'ugly', 'umbrella', 'unable', 'unaware', 'uncle', 'uncover', 'under', 'undo', 'unfair', 'unfold', 'unhappy', 'uniform', 'unique', 'unit', 'universe', 'unknown', 'unlock', 'until', 'unusual', 'unveil', 'update', 'upgrade', 'uphold', 'upon', 'upper', 'upset', 'urban', 'urge', 'usage', 'use', 'used', 'useful', 'useless', 'usual', 'utility', 'vacant', 'vacuum', 'vague', 'valid', 'valley', 'valve', 'van', 'vanish', 'vapor', 'various', 'vast', 'vault', 'vehicle', 'velvet', 'vendor', 'venture', 'venue', 'verb', 'verify', 'version', 'very', 'vessel', 'veteran', 'viable', 'vibrant', 'vicious', 'victory', 'video', 'view', 'village', 'vintage', 'violin', 'virtual', 'virus', 'visa', 'visit', 'visual', 'vital', 'vivid', 'vocal', 'voice', 'void', 'volcano', 'volume', 'vote', 'voyage', 'wage', 'wagon', 'wait', 'walk', 'wall', 'walnut', 'want', 'warfare', 'warm', 'warrior', 'wash', 'wasp', 'waste', 'water', 'wave', 'way', 'wealth', 'weapon', 'wear', 'weasel', 'weather', 'web', 'wedding', 'weekend', 'weird', 'welcome', 'west', 'wet', 'whale', 'what', 'wheat', 'wheel', 'when', 'where', 'whip', 'whisper', 'wide', 'width', 'wife', 'wild', 'will', 'win', 'window', 'wine', 'wing', 'wink', 'winner', 'winter', 'wire', 'wisdom', 'wise', 'wish', 'witness', 'wolf', 'woman', 'wonder', 'wood', 'wool', 'word', 'work', 'world', 'worry', 'worth', 'wrap', 'wreck', 'wrestle', 'wrist', 'write', 'wrong', 'yard', 'year', 'yellow', 'you', 'young', 'youth', 'zebra', 'zero', 'zone', 'zoo'];\n\nmodule.exports = english;", "'use string';\n\nvar french = ['abaisser', 'abandon', 'abdiquer', 'abeille', 'abolir', 'aborder', 'aboutir', 'aboyer', 'abrasif', 'abreuver', 'abriter', 'abroger', 'abrupt', 'absence', 'absolu', 'absurde', 'abusif', 'abyssal', 'acade\u0301mie', 'acajou', 'acarien', 'accabler', 'accepter', 'acclamer', 'accolade', 'accroche', 'accuser', 'acerbe', 'achat', 'acheter', 'aciduler', 'acier', 'acompte', 'acque\u0301rir', 'acronyme', 'acteur', 'actif', 'actuel', 'adepte', 'ade\u0301quat', 'adhe\u0301sif', 'adjectif', 'adjuger', 'admettre', 'admirer', 'adopter', 'adorer', 'adoucir', 'adresse', 'adroit', 'adulte', 'adverbe', 'ae\u0301rer', 'ae\u0301ronef', 'affaire', 'affecter', 'affiche', 'affreux', 'affubler', 'agacer', 'agencer', 'agile', 'agiter', 'agrafer', 'agre\u0301able', 'agrume', 'aider', 'aiguille', 'ailier', 'aimable', 'aisance', 'ajouter', 'ajuster', 'alarmer', 'alchimie', 'alerte', 'alge\u0300bre', 'algue', 'alie\u0301ner', 'aliment', 'alle\u0301ger', 'alliage', 'allouer', 'allumer', 'alourdir', 'alpaga', 'altesse', 'alve\u0301ole', 'amateur', 'ambigu', 'ambre', 'ame\u0301nager', 'amertume', 'amidon', 'amiral', 'amorcer', 'amour', 'amovible', 'amphibie', 'ampleur', 'amusant', 'analyse', 'anaphore', 'anarchie', 'anatomie', 'ancien', 'ane\u0301antir', 'angle', 'angoisse', 'anguleux', 'animal', 'annexer', 'annonce', 'annuel', 'anodin', 'anomalie', 'anonyme', 'anormal', 'antenne', 'antidote', 'anxieux', 'apaiser', 'ape\u0301ritif', 'aplanir', 'apologie', 'appareil', 'appeler', 'apporter', 'appuyer', 'aquarium', 'aqueduc', 'arbitre', 'arbuste', 'ardeur', 'ardoise', 'argent', 'arlequin', 'armature', 'armement', 'armoire', 'armure', 'arpenter', 'arracher', 'arriver', 'arroser', 'arsenic', 'arte\u0301riel', 'article', 'aspect', 'asphalte', 'aspirer', 'assaut', 'asservir', 'assiette', 'associer', 'assurer', 'asticot', 'astre', 'astuce', 'atelier', 'atome', 'atrium', 'atroce', 'attaque', 'attentif', 'attirer', 'attraper', 'aubaine', 'auberge', 'audace', 'audible', 'augurer', 'aurore', 'automne', 'autruche', 'avaler', 'avancer', 'avarice', 'avenir', 'averse', 'aveugle', 'aviateur', 'avide', 'avion', 'aviser', 'avoine', 'avouer', 'avril', 'axial', 'axiome', 'badge', 'bafouer', 'bagage', 'baguette', 'baignade', 'balancer', 'balcon', 'baleine', 'balisage', 'bambin', 'bancaire', 'bandage', 'banlieue', 'bannie\u0300re', 'banquier', 'barbier', 'baril', 'baron', 'barque', 'barrage', 'bassin', 'bastion', 'bataille', 'bateau', 'batterie', 'baudrier', 'bavarder', 'belette', 'be\u0301lier', 'belote', 'be\u0301ne\u0301fice', 'berceau', 'berger', 'berline', 'bermuda', 'besace', 'besogne', 'be\u0301tail', 'beurre', 'biberon', 'bicycle', 'bidule', 'bijou', 'bilan', 'bilingue', 'billard', 'binaire', 'biologie', 'biopsie', 'biotype', 'biscuit', 'bison', 'bistouri', 'bitume', 'bizarre', 'blafard', 'blague', 'blanchir', 'blessant', 'blinder', 'blond', 'bloquer', 'blouson', 'bobard', 'bobine', 'boire', 'boiser', 'bolide', 'bonbon', 'bondir', 'bonheur', 'bonifier', 'bonus', 'bordure', 'borne', 'botte', 'boucle', 'boueux', 'bougie', 'boulon', 'bouquin', 'bourse', 'boussole', 'boutique', 'boxeur', 'branche', 'brasier', 'brave', 'brebis', 'bre\u0300che', 'breuvage', 'bricoler', 'brigade', 'brillant', 'brioche', 'brique', 'brochure', 'broder', 'bronzer', 'brousse', 'broyeur', 'brume', 'brusque', 'brutal', 'bruyant', 'buffle', 'buisson', 'bulletin', 'bureau', 'burin', 'bustier', 'butiner', 'butoir', 'buvable', 'buvette', 'cabanon', 'cabine', 'cachette', 'cadeau', 'cadre', 'cafe\u0301ine', 'caillou', 'caisson', 'calculer', 'calepin', 'calibre', 'calmer', 'calomnie', 'calvaire', 'camarade', 'came\u0301ra', 'camion', 'campagne', 'canal', 'caneton', 'canon', 'cantine', 'canular', 'capable', 'caporal', 'caprice', 'capsule', 'capter', 'capuche', 'carabine', 'carbone', 'caresser', 'caribou', 'carnage', 'carotte', 'carreau', 'carton', 'cascade', 'casier', 'casque', 'cassure', 'causer', 'caution', 'cavalier', 'caverne', 'caviar', 'ce\u0301dille', 'ceinture', 'ce\u0301leste', 'cellule', 'cendrier', 'censurer', 'central', 'cercle', 'ce\u0301re\u0301bral', 'cerise', 'cerner', 'cerveau', 'cesser', 'chagrin', 'chaise', 'chaleur', 'chambre', 'chance', 'chapitre', 'charbon', 'chasseur', 'chaton', 'chausson', 'chavirer', 'chemise', 'chenille', 'che\u0301quier', 'chercher', 'cheval', 'chien', 'chiffre', 'chignon', 'chime\u0300re', 'chiot', 'chlorure', 'chocolat', 'choisir', 'chose', 'chouette', 'chrome', 'chute', 'cigare', 'cigogne', 'cimenter', 'cine\u0301ma', 'cintrer', 'circuler', 'cirer', 'cirque', 'citerne', 'citoyen', 'citron', 'civil', 'clairon', 'clameur', 'claquer', 'classe', 'clavier', 'client', 'cligner', 'climat', 'clivage', 'cloche', 'clonage', 'cloporte', 'cobalt', 'cobra', 'cocasse', 'cocotier', 'coder', 'codifier', 'coffre', 'cogner', 'cohe\u0301sion', 'coiffer', 'coincer', 'cole\u0300re', 'colibri', 'colline', 'colmater', 'colonel', 'combat', 'come\u0301die', 'commande', 'compact', 'concert', 'conduire', 'confier', 'congeler', 'connoter', 'consonne', 'contact', 'convexe', 'copain', 'copie', 'corail', 'corbeau', 'cordage', 'corniche', 'corpus', 'correct', 'corte\u0300ge', 'cosmique', 'costume', 'coton', 'coude', 'coupure', 'courage', 'couteau', 'couvrir', 'coyote', 'crabe', 'crainte', 'cravate', 'crayon', 'cre\u0301ature', 'cre\u0301diter', 'cre\u0301meux', 'creuser', 'crevette', 'cribler', 'crier', 'cristal', 'crite\u0300re', 'croire', 'croquer', 'crotale', 'crucial', 'cruel', 'crypter', 'cubique', 'cueillir', 'cuille\u0300re', 'cuisine', 'cuivre', 'culminer', 'cultiver', 'cumuler', 'cupide', 'curatif', 'curseur', 'cyanure', 'cycle', 'cylindre', 'cynique', 'daigner', 'damier', 'danger', 'danseur', 'dauphin', 'de\u0301battre', 'de\u0301biter', 'de\u0301border', 'de\u0301brider', 'de\u0301butant', 'de\u0301caler', 'de\u0301cembre', 'de\u0301chirer', 'de\u0301cider', 'de\u0301clarer', 'de\u0301corer', 'de\u0301crire', 'de\u0301cupler', 'de\u0301dale', 'de\u0301ductif', 'de\u0301esse', 'de\u0301fensif', 'de\u0301filer', 'de\u0301frayer', 'de\u0301gager', 'de\u0301givrer', 'de\u0301glutir', 'de\u0301grafer', 'de\u0301jeuner', 'de\u0301lice', 'de\u0301loger', 'demander', 'demeurer', 'de\u0301molir', 'de\u0301nicher', 'de\u0301nouer', 'dentelle', 'de\u0301nuder', 'de\u0301part', 'de\u0301penser', 'de\u0301phaser', 'de\u0301placer', 'de\u0301poser', 'de\u0301ranger', 'de\u0301rober', 'de\u0301sastre', 'descente', 'de\u0301sert', 'de\u0301signer', 'de\u0301sobe\u0301ir', 'dessiner', 'destrier', 'de\u0301tacher', 'de\u0301tester', 'de\u0301tourer', 'de\u0301tresse', 'devancer', 'devenir', 'deviner', 'devoir', 'diable', 'dialogue', 'diamant', 'dicter', 'diffe\u0301rer', 'dige\u0301rer', 'digital', 'digne', 'diluer', 'dimanche', 'diminuer', 'dioxyde', 'directif', 'diriger', 'discuter', 'disposer', 'dissiper', 'distance', 'divertir', 'diviser', 'docile', 'docteur', 'dogme', 'doigt', 'domaine', 'domicile', 'dompter', 'donateur', 'donjon', 'donner', 'dopamine', 'dortoir', 'dorure', 'dosage', 'doseur', 'dossier', 'dotation', 'douanier', 'double', 'douceur', 'douter', 'doyen', 'dragon', 'draper', 'dresser', 'dribbler', 'droiture', 'duperie', 'duplexe', 'durable', 'durcir', 'dynastie', 'e\u0301blouir', 'e\u0301carter', 'e\u0301charpe', 'e\u0301chelle', 'e\u0301clairer', 'e\u0301clipse', 'e\u0301clore', 'e\u0301cluse', 'e\u0301cole', 'e\u0301conomie', 'e\u0301corce', 'e\u0301couter', 'e\u0301craser', 'e\u0301cre\u0301mer', 'e\u0301crivain', 'e\u0301crou', 'e\u0301cume', 'e\u0301cureuil', 'e\u0301difier', 'e\u0301duquer', 'effacer', 'effectif', 'effigie', 'effort', 'effrayer', 'effusion', 'e\u0301galiser', 'e\u0301garer', 'e\u0301jecter', 'e\u0301laborer', 'e\u0301largir', 'e\u0301lectron', 'e\u0301le\u0301gant', 'e\u0301le\u0301phant', 'e\u0301le\u0300ve', 'e\u0301ligible', 'e\u0301litisme', 'e\u0301loge', 'e\u0301lucider', 'e\u0301luder', 'emballer', 'embellir', 'embryon', 'e\u0301meraude', 'e\u0301mission', 'emmener', 'e\u0301motion', 'e\u0301mouvoir', 'empereur', 'employer', 'emporter', 'emprise', 'e\u0301mulsion', 'encadrer', 'enche\u0300re', 'enclave', 'encoche', 'endiguer', 'endosser', 'endroit', 'enduire', 'e\u0301nergie', 'enfance', 'enfermer', 'enfouir', 'engager', 'engin', 'englober', 'e\u0301nigme', 'enjamber', 'enjeu', 'enlever', 'ennemi', 'ennuyeux', 'enrichir', 'enrobage', 'enseigne', 'entasser', 'entendre', 'entier', 'entourer', 'entraver', 'e\u0301nume\u0301rer', 'envahir', 'enviable', 'envoyer', 'enzyme', 'e\u0301olien', 'e\u0301paissir', 'e\u0301pargne', 'e\u0301patant', 'e\u0301paule', 'e\u0301picerie', 'e\u0301pide\u0301mie', 'e\u0301pier', 'e\u0301pilogue', 'e\u0301pine', 'e\u0301pisode', 'e\u0301pitaphe', 'e\u0301poque', 'e\u0301preuve', 'e\u0301prouver', 'e\u0301puisant', 'e\u0301querre', 'e\u0301quipe', 'e\u0301riger', 'e\u0301rosion', 'erreur', 'e\u0301ruption', 'escalier', 'espadon', 'espe\u0300ce', 'espie\u0300gle', 'espoir', 'esprit', 'esquiver', 'essayer', 'essence', 'essieu', 'essorer', 'estime', 'estomac', 'estrade', 'e\u0301tage\u0300re', 'e\u0301taler', 'e\u0301tanche', 'e\u0301tatique', 'e\u0301teindre', 'e\u0301tendoir', 'e\u0301ternel', 'e\u0301thanol', 'e\u0301thique', 'ethnie', 'e\u0301tirer', 'e\u0301toffer', 'e\u0301toile', 'e\u0301tonnant', 'e\u0301tourdir', 'e\u0301trange', 'e\u0301troit', 'e\u0301tude', 'euphorie', 'e\u0301valuer', 'e\u0301vasion', 'e\u0301ventail', 'e\u0301vidence', 'e\u0301viter', 'e\u0301volutif', 'e\u0301voquer', 'exact', 'exage\u0301rer', 'exaucer', 'exceller', 'excitant', 'exclusif', 'excuse', 'exe\u0301cuter', 'exemple', 'exercer', 'exhaler', 'exhorter', 'exigence', 'exiler', 'exister', 'exotique', 'expe\u0301dier', 'explorer', 'exposer', 'exprimer', 'exquis', 'extensif', 'extraire', 'exulter', 'fable', 'fabuleux', 'facette', 'facile', 'facture', 'faiblir', 'falaise', 'fameux', 'famille', 'farceur', 'farfelu', 'farine', 'farouche', 'fasciner', 'fatal', 'fatigue', 'faucon', 'fautif', 'faveur', 'favori', 'fe\u0301brile', 'fe\u0301conder', 'fe\u0301de\u0301rer', 'fe\u0301lin', 'femme', 'fe\u0301mur', 'fendoir', 'fe\u0301odal', 'fermer', 'fe\u0301roce', 'ferveur', 'festival', 'feuille', 'feutre', 'fe\u0301vrier', 'fiasco', 'ficeler', 'fictif', 'fide\u0300le', 'figure', 'filature', 'filetage', 'filie\u0300re', 'filleul', 'filmer', 'filou', 'filtrer', 'financer', 'finir', 'fiole', 'firme', 'fissure', 'fixer', 'flairer', 'flamme', 'flasque', 'flatteur', 'fle\u0301au', 'fle\u0300che', 'fleur', 'flexion', 'flocon', 'flore', 'fluctuer', 'fluide', 'fluvial', 'folie', 'fonderie', 'fongible', 'fontaine', 'forcer', 'forgeron', 'formuler', 'fortune', 'fossile', 'foudre', 'fouge\u0300re', 'fouiller', 'foulure', 'fourmi', 'fragile', 'fraise', 'franchir', 'frapper', 'frayeur', 'fre\u0301gate', 'freiner', 'frelon', 'fre\u0301mir', 'fre\u0301ne\u0301sie', 'fre\u0300re', 'friable', 'friction', 'frisson', 'frivole', 'froid', 'fromage', 'frontal', 'frotter', 'fruit', 'fugitif', 'fuite', 'fureur', 'furieux', 'furtif', 'fusion', 'futur', 'gagner', 'galaxie', 'galerie', 'gambader', 'garantir', 'gardien', 'garnir', 'garrigue', 'gazelle', 'gazon', 'ge\u0301ant', 'ge\u0301latine', 'ge\u0301lule', 'gendarme', 'ge\u0301ne\u0301ral', 'ge\u0301nie', 'genou', 'gentil', 'ge\u0301ologie', 'ge\u0301ome\u0300tre', 'ge\u0301ranium', 'germe', 'gestuel', 'geyser', 'gibier', 'gicler', 'girafe', 'givre', 'glace', 'glaive', 'glisser', 'globe', 'gloire', 'glorieux', 'golfeur', 'gomme', 'gonfler', 'gorge', 'gorille', 'goudron', 'gouffre', 'goulot', 'goupille', 'gourmand', 'goutte', 'graduel', 'graffiti', 'graine', 'grand', 'grappin', 'gratuit', 'gravir', 'grenat', 'griffure', 'griller', 'grimper', 'grogner', 'gronder', 'grotte', 'groupe', 'gruger', 'grutier', 'gruye\u0300re', 'gue\u0301pard', 'guerrier', 'guide', 'guimauve', 'guitare', 'gustatif', 'gymnaste', 'gyrostat', 'habitude', 'hachoir', 'halte', 'hameau', 'hangar', 'hanneton', 'haricot', 'harmonie', 'harpon', 'hasard', 'he\u0301lium', 'he\u0301matome', 'herbe', 'he\u0301risson', 'hermine', 'he\u0301ron', 'he\u0301siter', 'heureux', 'hiberner', 'hibou', 'hilarant', 'histoire', 'hiver', 'homard', 'hommage', 'homoge\u0300ne', 'honneur', 'honorer', 'honteux', 'horde', 'horizon', 'horloge', 'hormone', 'horrible', 'houleux', 'housse', 'hublot', 'huileux', 'humain', 'humble', 'humide', 'humour', 'hurler', 'hydromel', 'hygie\u0300ne', 'hymne', 'hypnose', 'idylle', 'ignorer', 'iguane', 'illicite', 'illusion', 'image', 'imbiber', 'imiter', 'immense', 'immobile', 'immuable', 'impact', 'impe\u0301rial', 'implorer', 'imposer', 'imprimer', 'imputer', 'incarner', 'incendie', 'incident', 'incliner', 'incolore', 'indexer', 'indice', 'inductif', 'ine\u0301dit', 'ineptie', 'inexact', 'infini', 'infliger', 'informer', 'infusion', 'inge\u0301rer', 'inhaler', 'inhiber', 'injecter', 'injure', 'innocent', 'inoculer', 'inonder', 'inscrire', 'insecte', 'insigne', 'insolite', 'inspirer', 'instinct', 'insulter', 'intact', 'intense', 'intime', 'intrigue', 'intuitif', 'inutile', 'invasion', 'inventer', 'inviter', 'invoquer', 'ironique', 'irradier', 'irre\u0301el', 'irriter', 'isoler', 'ivoire', 'ivresse', 'jaguar', 'jaillir', 'jambe', 'janvier', 'jardin', 'jauger', 'jaune', 'javelot', 'jetable', 'jeton', 'jeudi', 'jeunesse', 'joindre', 'joncher', 'jongler', 'joueur', 'jouissif', 'journal', 'jovial', 'joyau', 'joyeux', 'jubiler', 'jugement', 'junior', 'jupon', 'juriste', 'justice', 'juteux', 'juve\u0301nile', 'kayak', 'kimono', 'kiosque', 'label', 'labial', 'labourer', 'lace\u0301rer', 'lactose', 'lagune', 'laine', 'laisser', 'laitier', 'lambeau', 'lamelle', 'lampe', 'lanceur', 'langage', 'lanterne', 'lapin', 'largeur', 'larme', 'laurier', 'lavabo', 'lavoir', 'lecture', 'le\u0301gal', 'le\u0301ger', 'le\u0301gume', 'lessive', 'lettre', 'levier', 'lexique', 'le\u0301zard', 'liasse', 'libe\u0301rer', 'libre', 'licence', 'licorne', 'lie\u0300ge', 'lie\u0300vre', 'ligature', 'ligoter', 'ligue', 'limer', 'limite', 'limonade', 'limpide', 'line\u0301aire', 'lingot', 'lionceau', 'liquide', 'lisie\u0300re', 'lister', 'lithium', 'litige', 'littoral', 'livreur', 'logique', 'lointain', 'loisir', 'lombric', 'loterie', 'louer', 'lourd', 'loutre', 'louve', 'loyal', 'lubie', 'lucide', 'lucratif', 'lueur', 'lugubre', 'luisant', 'lumie\u0300re', 'lunaire', 'lundi', 'luron', 'lutter', 'luxueux', 'machine', 'magasin', 'magenta', 'magique', 'maigre', 'maillon', 'maintien', 'mairie', 'maison', 'majorer', 'malaxer', 'male\u0301fice', 'malheur', 'malice', 'mallette', 'mammouth', 'mandater', 'maniable', 'manquant', 'manteau', 'manuel', 'marathon', 'marbre', 'marchand', 'mardi', 'maritime', 'marqueur', 'marron', 'marteler', 'mascotte', 'massif', 'mate\u0301riel', 'matie\u0300re', 'matraque', 'maudire', 'maussade', 'mauve', 'maximal', 'me\u0301chant', 'me\u0301connu', 'me\u0301daille', 'me\u0301decin', 'me\u0301diter', 'me\u0301duse', 'meilleur', 'me\u0301lange', 'me\u0301lodie', 'membre', 'me\u0301moire', 'menacer', 'mener', 'menhir', 'mensonge', 'mentor', 'mercredi', 'me\u0301rite', 'merle', 'messager', 'mesure', 'me\u0301tal', 'me\u0301te\u0301ore', 'me\u0301thode', 'me\u0301tier', 'meuble', 'miauler', 'microbe', 'miette', 'mignon', 'migrer', 'milieu', 'million', 'mimique', 'mince', 'mine\u0301ral', 'minimal', 'minorer', 'minute', 'miracle', 'miroiter', 'missile', 'mixte', 'mobile', 'moderne', 'moelleux', 'mondial', 'moniteur', 'monnaie', 'monotone', 'monstre', 'montagne', 'monument', 'moqueur', 'morceau', 'morsure', 'mortier', 'moteur', 'motif', 'mouche', 'moufle', 'moulin', 'mousson', 'mouton', 'mouvant', 'multiple', 'munition', 'muraille', 'mure\u0300ne', 'murmure', 'muscle', 'muse\u0301um', 'musicien', 'mutation', 'muter', 'mutuel', 'myriade', 'myrtille', 'myste\u0300re', 'mythique', 'nageur', 'nappe', 'narquois', 'narrer', 'natation', 'nation', 'nature', 'naufrage', 'nautique', 'navire', 'ne\u0301buleux', 'nectar', 'ne\u0301faste', 'ne\u0301gation', 'ne\u0301gliger', 'ne\u0301gocier', 'neige', 'nerveux', 'nettoyer', 'neurone', 'neutron', 'neveu', 'niche', 'nickel', 'nitrate', 'niveau', 'noble', 'nocif', 'nocturne', 'noirceur', 'noisette', 'nomade', 'nombreux', 'nommer', 'normatif', 'notable', 'notifier', 'notoire', 'nourrir', 'nouveau', 'novateur', 'novembre', 'novice', 'nuage', 'nuancer', 'nuire', 'nuisible', 'nume\u0301ro', 'nuptial', 'nuque', 'nutritif', 'obe\u0301ir', 'objectif', 'obliger', 'obscur', 'observer', 'obstacle', 'obtenir', 'obturer', 'occasion', 'occuper', 'oce\u0301an', 'octobre', 'octroyer', 'octupler', 'oculaire', 'odeur', 'odorant', 'offenser', 'officier', 'offrir', 'ogive', 'oiseau', 'oisillon', 'olfactif', 'olivier', 'ombrage', 'omettre', 'onctueux', 'onduler', 'one\u0301reux', 'onirique', 'opale', 'opaque', 'ope\u0301rer', 'opinion', 'opportun', 'opprimer', 'opter', 'optique', 'orageux', 'orange', 'orbite', 'ordonner', 'oreille', 'organe', 'orgueil', 'orifice', 'ornement', 'orque', 'ortie', 'osciller', 'osmose', 'ossature', 'otarie', 'ouragan', 'ourson', 'outil', 'outrager', 'ouvrage', 'ovation', 'oxyde', 'oxyge\u0300ne', 'ozone', 'paisible', 'palace', 'palmare\u0300s', 'palourde', 'palper', 'panache', 'panda', 'pangolin', 'paniquer', 'panneau', 'panorama', 'pantalon', 'papaye', 'papier', 'papoter', 'papyrus', 'paradoxe', 'parcelle', 'paresse', 'parfumer', 'parler', 'parole', 'parrain', 'parsemer', 'partager', 'parure', 'parvenir', 'passion', 'paste\u0300que', 'paternel', 'patience', 'patron', 'pavillon', 'pavoiser', 'payer', 'paysage', 'peigne', 'peintre', 'pelage', 'pe\u0301lican', 'pelle', 'pelouse', 'peluche', 'pendule', 'pe\u0301ne\u0301trer', 'pe\u0301nible', 'pensif', 'pe\u0301nurie', 'pe\u0301pite', 'pe\u0301plum', 'perdrix', 'perforer', 'pe\u0301riode', 'permuter', 'perplexe', 'persil', 'perte', 'peser', 'pe\u0301tale', 'petit', 'pe\u0301trir', 'peuple', 'pharaon', 'phobie', 'phoque', 'photon', 'phrase', 'physique', 'piano', 'pictural', 'pie\u0300ce', 'pierre', 'pieuvre', 'pilote', 'pinceau', 'pipette', 'piquer', 'pirogue', 'piscine', 'piston', 'pivoter', 'pixel', 'pizza', 'placard', 'plafond', 'plaisir', 'planer', 'plaque', 'plastron', 'plateau', 'pleurer', 'plexus', 'pliage', 'plomb', 'plonger', 'pluie', 'plumage', 'pochette', 'poe\u0301sie', 'poe\u0300te', 'pointe', 'poirier', 'poisson', 'poivre', 'polaire', 'policier', 'pollen', 'polygone', 'pommade', 'pompier', 'ponctuel', 'ponde\u0301rer', 'poney', 'portique', 'position', 'posse\u0301der', 'posture', 'potager', 'poteau', 'potion', 'pouce', 'poulain', 'poumon', 'pourpre', 'poussin', 'pouvoir', 'prairie', 'pratique', 'pre\u0301cieux', 'pre\u0301dire', 'pre\u0301fixe', 'pre\u0301lude', 'pre\u0301nom', 'pre\u0301sence', 'pre\u0301texte', 'pre\u0301voir', 'primitif', 'prince', 'prison', 'priver', 'proble\u0300me', 'proce\u0301der', 'prodige', 'profond', 'progre\u0300s', 'proie', 'projeter', 'prologue', 'promener', 'propre', 'prospe\u0300re', 'prote\u0301ger', 'prouesse', 'proverbe', 'prudence', 'pruneau', 'psychose', 'public', 'puceron', 'puiser', 'pulpe', 'pulsar', 'punaise', 'punitif', 'pupitre', 'purifier', 'puzzle', 'pyramide', 'quasar', 'querelle', 'question', 'quie\u0301tude', 'quitter', 'quotient', 'racine', 'raconter', 'radieux', 'ragondin', 'raideur', 'raisin', 'ralentir', 'rallonge', 'ramasser', 'rapide', 'rasage', 'ratisser', 'ravager', 'ravin', 'rayonner', 're\u0301actif', 're\u0301agir', 're\u0301aliser', 're\u0301animer', 'recevoir', 're\u0301citer', 're\u0301clamer', 're\u0301colter', 'recruter', 'reculer', 'recycler', 're\u0301diger', 'redouter', 'refaire', 're\u0301flexe', 're\u0301former', 'refrain', 'refuge', 're\u0301galien', 're\u0301gion', 're\u0301glage', 're\u0301gulier', 're\u0301ite\u0301rer', 'rejeter', 'rejouer', 'relatif', 'relever', 'relief', 'remarque', 'reme\u0300de', 'remise', 'remonter', 'remplir', 'remuer', 'renard', 'renfort', 'renifler', 'renoncer', 'rentrer', 'renvoi', 'replier', 'reporter', 'reprise', 'reptile', 'requin', 're\u0301serve', 're\u0301sineux', 're\u0301soudre', 'respect', 'rester', 're\u0301sultat', 're\u0301tablir', 'retenir', 're\u0301ticule', 'retomber', 'retracer', 're\u0301union', 're\u0301ussir', 'revanche', 'revivre', 're\u0301volte', 're\u0301vulsif', 'richesse', 'rideau', 'rieur', 'rigide', 'rigoler', 'rincer', 'riposter', 'risible', 'risque', 'rituel', 'rival', 'rivie\u0300re', 'rocheux', 'romance', 'rompre', 'ronce', 'rondin', 'roseau', 'rosier', 'rotatif', 'rotor', 'rotule', 'rouge', 'rouille', 'rouleau', 'routine', 'royaume', 'ruban', 'rubis', 'ruche', 'ruelle', 'rugueux', 'ruiner', 'ruisseau', 'ruser', 'rustique', 'rythme', 'sabler', 'saboter', 'sabre', 'sacoche', 'safari', 'sagesse', 'saisir', 'salade', 'salive', 'salon', 'saluer', 'samedi', 'sanction', 'sanglier', 'sarcasme', 'sardine', 'saturer', 'saugrenu', 'saumon', 'sauter', 'sauvage', 'savant', 'savonner', 'scalpel', 'scandale', 'sce\u0301le\u0301rat', 'sce\u0301nario', 'sceptre', 'sche\u0301ma', 'science', 'scinder', 'score', 'scrutin', 'sculpter', 'se\u0301ance', 'se\u0301cable', 'se\u0301cher', 'secouer', 'se\u0301cre\u0301ter', 'se\u0301datif', 'se\u0301duire', 'seigneur', 'se\u0301jour', 'se\u0301lectif', 'semaine', 'sembler', 'semence', 'se\u0301minal', 'se\u0301nateur', 'sensible', 'sentence', 'se\u0301parer', 'se\u0301quence', 'serein', 'sergent', 'se\u0301rieux', 'serrure', 'se\u0301rum', 'service', 'se\u0301same', 'se\u0301vir', 'sevrage', 'sextuple', 'side\u0301ral', 'sie\u0300cle', 'sie\u0301ger', 'siffler', 'sigle', 'signal', 'silence', 'silicium', 'simple', 'since\u0300re', 'sinistre', 'siphon', 'sirop', 'sismique', 'situer', 'skier', 'social', 'socle', 'sodium', 'soigneux', 'soldat', 'soleil', 'solitude', 'soluble', 'sombre', 'sommeil', 'somnoler', 'sonde', 'songeur', 'sonnette', 'sonore', 'sorcier', 'sortir', 'sosie', 'sottise', 'soucieux', 'soudure', 'souffle', 'soulever', 'soupape', 'source', 'soutirer', 'souvenir', 'spacieux', 'spatial', 'spe\u0301cial', 'sphe\u0300re', 'spiral', 'stable', 'station', 'sternum', 'stimulus', 'stipuler', 'strict', 'studieux', 'stupeur', 'styliste', 'sublime', 'substrat', 'subtil', 'subvenir', 'succe\u0300s', 'sucre', 'suffixe', 'sugge\u0301rer', 'suiveur', 'sulfate', 'superbe', 'supplier', 'surface', 'suricate', 'surmener', 'surprise', 'sursaut', 'survie', 'suspect', 'syllabe', 'symbole', 'syme\u0301trie', 'synapse', 'syntaxe', 'syste\u0300me', 'tabac', 'tablier', 'tactile', 'tailler', 'talent', 'talisman', 'talonner', 'tambour', 'tamiser', 'tangible', 'tapis', 'taquiner', 'tarder', 'tarif', 'tartine', 'tasse', 'tatami', 'tatouage', 'taupe', 'taureau', 'taxer', 'te\u0301moin', 'temporel', 'tenaille', 'tendre', 'teneur', 'tenir', 'tension', 'terminer', 'terne', 'terrible', 'te\u0301tine', 'texte', 'the\u0300me', 'the\u0301orie', 'the\u0301rapie', 'thorax', 'tibia', 'tie\u0300de', 'timide', 'tirelire', 'tiroir', 'tissu', 'titane', 'titre', 'tituber', 'toboggan', 'tole\u0301rant', 'tomate', 'tonique', 'tonneau', 'toponyme', 'torche', 'tordre', 'tornade', 'torpille', 'torrent', 'torse', 'tortue', 'totem', 'toucher', 'tournage', 'tousser', 'toxine', 'traction', 'trafic', 'tragique', 'trahir', 'train', 'trancher', 'travail', 'tre\u0300fle', 'tremper', 'tre\u0301sor', 'treuil', 'triage', 'tribunal', 'tricoter', 'trilogie', 'triomphe', 'tripler', 'triturer', 'trivial', 'trombone', 'tronc', 'tropical', 'troupeau', 'tuile', 'tulipe', 'tumulte', 'tunnel', 'turbine', 'tuteur', 'tutoyer', 'tuyau', 'tympan', 'typhon', 'typique', 'tyran', 'ubuesque', 'ultime', 'ultrason', 'unanime', 'unifier', 'union', 'unique', 'unitaire', 'univers', 'uranium', 'urbain', 'urticant', 'usage', 'usine', 'usuel', 'usure', 'utile', 'utopie', 'vacarme', 'vaccin', 'vagabond', 'vague', 'vaillant', 'vaincre', 'vaisseau', 'valable', 'valise', 'vallon', 'valve', 'vampire', 'vanille', 'vapeur', 'varier', 'vaseux', 'vassal', 'vaste', 'vecteur', 'vedette', 've\u0301ge\u0301tal', 've\u0301hicule', 'veinard', 've\u0301loce', 'vendredi', 've\u0301ne\u0301rer', 'venger', 'venimeux', 'ventouse', 'verdure', 've\u0301rin', 'vernir', 'verrou', 'verser', 'vertu', 'veston', 've\u0301te\u0301ran', 've\u0301tuste', 'vexant', 'vexer', 'viaduc', 'viande', 'victoire', 'vidange', 'vide\u0301o', 'vignette', 'vigueur', 'vilain', 'village', 'vinaigre', 'violon', 'vipe\u0300re', 'virement', 'virtuose', 'virus', 'visage', 'viseur', 'vision', 'visqueux', 'visuel', 'vital', 'vitesse', 'viticole', 'vitrine', 'vivace', 'vivipare', 'vocation', 'voguer', 'voile', 'voisin', 'voiture', 'volaille', 'volcan', 'voltiger', 'volume', 'vorace', 'vortex', 'voter', 'vouloir', 'voyage', 'voyelle', 'wagon', 'xe\u0301non', 'yacht', 'ze\u0300bre', 'ze\u0301nith', 'zeste', 'zoologie'];\n\nmodule.exports = french;", "'use strict';\n\nvar italian = ['abaco', 'abbaglio', 'abbinato', 'abete', 'abisso', 'abolire', 'abrasivo', 'abrogato', 'accadere', 'accenno', 'accusato', 'acetone', 'achille', 'acido', 'acqua', 'acre', 'acrilico', 'acrobata', 'acuto', 'adagio', 'addebito', 'addome', 'adeguato', 'aderire', 'adipe', 'adottare', 'adulare', 'affabile', 'affetto', 'affisso', 'affranto', 'aforisma', 'afoso', 'africano', 'agave', 'agente', 'agevole', 'aggancio', 'agire', 'agitare', 'agonismo', 'agricolo', 'agrumeto', 'aguzzo', 'alabarda', 'alato', 'albatro', 'alberato', 'albo', 'albume', 'alce', 'alcolico', 'alettone', 'alfa', 'algebra', 'aliante', 'alibi', 'alimento', 'allagato', 'allegro', 'allievo', 'allodola', 'allusivo', 'almeno', 'alogeno', 'alpaca', 'alpestre', 'altalena', 'alterno', 'alticcio', 'altrove', 'alunno', 'alveolo', 'alzare', 'amalgama', 'amanita', 'amarena', 'ambito', 'ambrato', 'ameba', 'america', 'ametista', 'amico', 'ammasso', 'ammenda', 'ammirare', 'ammonito', 'amore', 'ampio', 'ampliare', 'amuleto', 'anacardo', 'anagrafe', 'analista', 'anarchia', 'anatra', 'anca', 'ancella', 'ancora', 'andare', 'andrea', 'anello', 'angelo', 'angolare', 'angusto', 'anima', 'annegare', 'annidato', 'anno', 'annuncio', 'anonimo', 'anticipo', 'anzi', 'apatico', 'apertura', 'apode', 'apparire', 'appetito', 'appoggio', 'approdo', 'appunto', 'aprile', 'arabica', 'arachide', 'aragosta', 'araldica', 'arancio', 'aratura', 'arazzo', 'arbitro', 'archivio', 'ardito', 'arenile', 'argento', 'argine', 'arguto', 'aria', 'armonia', 'arnese', 'arredato', 'arringa', 'arrosto', 'arsenico', 'arso', 'artefice', 'arzillo', 'asciutto', 'ascolto', 'asepsi', 'asettico', 'asfalto', 'asino', 'asola', 'aspirato', 'aspro', 'assaggio', 'asse', 'assoluto', 'assurdo', 'asta', 'astenuto', 'astice', 'astratto', 'atavico', 'ateismo', 'atomico', 'atono', 'attesa', 'attivare', 'attorno', 'attrito', 'attuale', 'ausilio', 'austria', 'autista', 'autonomo', 'autunno', 'avanzato', 'avere', 'avvenire', 'avviso', 'avvolgere', 'azione', 'azoto', 'azzimo', 'azzurro', 'babele', 'baccano', 'bacino', 'baco', 'badessa', 'badilata', 'bagnato', 'baita', 'balcone', 'baldo', 'balena', 'ballata', 'balzano', 'bambino', 'bandire', 'baraonda', 'barbaro', 'barca', 'baritono', 'barlume', 'barocco', 'basilico', 'basso', 'batosta', 'battuto', 'baule', 'bava', 'bavosa', 'becco', 'beffa', 'belgio', 'belva', 'benda', 'benevole', 'benigno', 'benzina', 'bere', 'berlina', 'beta', 'bibita', 'bici', 'bidone', 'bifido', 'biga', 'bilancia', 'bimbo', 'binocolo', 'biologo', 'bipede', 'bipolare', 'birbante', 'birra', 'biscotto', 'bisesto', 'bisnonno', 'bisonte', 'bisturi', 'bizzarro', 'blando', 'blatta', 'bollito', 'bonifico', 'bordo', 'bosco', 'botanico', 'bottino', 'bozzolo', 'braccio', 'bradipo', 'brama', 'branca', 'bravura', 'bretella', 'brevetto', 'brezza', 'briglia', 'brillante', 'brindare', 'broccolo', 'brodo', 'bronzina', 'brullo', 'bruno', 'bubbone', 'buca', 'budino', 'buffone', 'buio', 'bulbo', 'buono', 'burlone', 'burrasca', 'bussola', 'busta', 'cadetto', 'caduco', 'calamaro', 'calcolo', 'calesse', 'calibro', 'calmo', 'caloria', 'cambusa', 'camerata', 'camicia', 'cammino', 'camola', 'campale', 'canapa', 'candela', 'cane', 'canino', 'canotto', 'cantina', 'capace', 'capello', 'capitolo', 'capogiro', 'cappero', 'capra', 'capsula', 'carapace', 'carcassa', 'cardo', 'carisma', 'carovana', 'carretto', 'cartolina', 'casaccio', 'cascata', 'caserma', 'caso', 'cassone', 'castello', 'casuale', 'catasta', 'catena', 'catrame', 'cauto', 'cavillo', 'cedibile', 'cedrata', 'cefalo', 'celebre', 'cellulare', 'cena', 'cenone', 'centesimo', 'ceramica', 'cercare', 'certo', 'cerume', 'cervello', 'cesoia', 'cespo', 'ceto', 'chela', 'chiaro', 'chicca', 'chiedere', 'chimera', 'china', 'chirurgo', 'chitarra', 'ciao', 'ciclismo', 'cifrare', 'cigno', 'cilindro', 'ciottolo', 'circa', 'cirrosi', 'citrico', 'cittadino', 'ciuffo', 'civetta', 'civile', 'classico', 'clinica', 'cloro', 'cocco', 'codardo', 'codice', 'coerente', 'cognome', 'collare', 'colmato', 'colore', 'colposo', 'coltivato', 'colza', 'coma', 'cometa', 'commando', 'comodo', 'computer', 'comune', 'conciso', 'condurre', 'conferma', 'congelare', 'coniuge', 'connesso', 'conoscere', 'consumo', 'continuo', 'convegno', 'coperto', 'copione', 'coppia', 'copricapo', 'corazza', 'cordata', 'coricato', 'cornice', 'corolla', 'corpo', 'corredo', 'corsia', 'cortese', 'cosmico', 'costante', 'cottura', 'covato', 'cratere', 'cravatta', 'creato', 'credere', 'cremoso', 'crescita', 'creta', 'criceto', 'crinale', 'crisi', 'critico', 'croce', 'cronaca', 'crostata', 'cruciale', 'crusca', 'cucire', 'cuculo', 'cugino', 'cullato', 'cupola', 'curatore', 'cursore', 'curvo', 'cuscino', 'custode', 'dado', 'daino', 'dalmata', 'damerino', 'daniela', 'dannoso', 'danzare', 'datato', 'davanti', 'davvero', 'debutto', 'decennio', 'deciso', 'declino', 'decollo', 'decreto', 'dedicato', 'definito', 'deforme', 'degno', 'delegare', 'delfino', 'delirio', 'delta', 'demenza', 'denotato', 'dentro', 'deposito', 'derapata', 'derivare', 'deroga', 'descritto', 'deserto', 'desiderio', 'desumere', 'detersivo', 'devoto', 'diametro', 'dicembre', 'diedro', 'difeso', 'diffuso', 'digerire', 'digitale', 'diluvio', 'dinamico', 'dinnanzi', 'dipinto', 'diploma', 'dipolo', 'diradare', 'dire', 'dirotto', 'dirupo', 'disagio', 'discreto', 'disfare', 'disgelo', 'disposto', 'distanza', 'disumano', 'dito', 'divano', 'divelto', 'dividere', 'divorato', 'doblone', 'docente', 'doganale', 'dogma', 'dolce', 'domato', 'domenica', 'dominare', 'dondolo', 'dono', 'dormire', 'dote', 'dottore', 'dovuto', 'dozzina', 'drago', 'druido', 'dubbio', 'dubitare', 'ducale', 'duna', 'duomo', 'duplice', 'duraturo', 'ebano', 'eccesso', 'ecco', 'eclissi', 'economia', 'edera', 'edicola', 'edile', 'editoria', 'educare', 'egemonia', 'egli', 'egoismo', 'egregio', 'elaborato', 'elargire', 'elegante', 'elencato', 'eletto', 'elevare', 'elfico', 'elica', 'elmo', 'elsa', 'eluso', 'emanato', 'emblema', 'emesso', 'emiro', 'emotivo', 'emozione', 'empirico', 'emulo', 'endemico', 'enduro', 'energia', 'enfasi', 'enoteca', 'entrare', 'enzima', 'epatite', 'epilogo', 'episodio', 'epocale', 'eppure', 'equatore', 'erario', 'erba', 'erboso', 'erede', 'eremita', 'erigere', 'ermetico', 'eroe', 'erosivo', 'errante', 'esagono', 'esame', 'esanime', 'esaudire', 'esca', 'esempio', 'esercito', 'esibito', 'esigente', 'esistere', 'esito', 'esofago', 'esortato', 'esoso', 'espanso', 'espresso', 'essenza', 'esso', 'esteso', 'estimare', 'estonia', 'estroso', 'esultare', 'etilico', 'etnico', 'etrusco', 'etto', 'euclideo', 'europa', 'evaso', 'evidenza', 'evitato', 'evoluto', 'evviva', 'fabbrica', 'faccenda', 'fachiro', 'falco', 'famiglia', 'fanale', 'fanfara', 'fango', 'fantasma', 'fare', 'farfalla', 'farinoso', 'farmaco', 'fascia', 'fastoso', 'fasullo', 'faticare', 'fato', 'favoloso', 'febbre', 'fecola', 'fede', 'fegato', 'felpa', 'feltro', 'femmina', 'fendere', 'fenomeno', 'fermento', 'ferro', 'fertile', 'fessura', 'festivo', 'fetta', 'feudo', 'fiaba', 'fiducia', 'fifa', 'figurato', 'filo', 'finanza', 'finestra', 'finire', 'fiore', 'fiscale', 'fisico', 'fiume', 'flacone', 'flamenco', 'flebo', 'flemma', 'florido', 'fluente', 'fluoro', 'fobico', 'focaccia', 'focoso', 'foderato', 'foglio', 'folata', 'folclore', 'folgore', 'fondente', 'fonetico', 'fonia', 'fontana', 'forbito', 'forchetta', 'foresta', 'formica', 'fornaio', 'foro', 'fortezza', 'forzare', 'fosfato', 'fosso', 'fracasso', 'frana', 'frassino', 'fratello', 'freccetta', 'frenata', 'fresco', 'frigo', 'frollino', 'fronde', 'frugale', 'frutta', 'fucilata', 'fucsia', 'fuggente', 'fulmine', 'fulvo', 'fumante', 'fumetto', 'fumoso', 'fune', 'funzione', 'fuoco', 'furbo', 'furgone', 'furore', 'fuso', 'futile', 'gabbiano', 'gaffe', 'galateo', 'gallina', 'galoppo', 'gambero', 'gamma', 'garanzia', 'garbo', 'garofano', 'garzone', 'gasdotto', 'gasolio', 'gastrico', 'gatto', 'gaudio', 'gazebo', 'gazzella', 'geco', 'gelatina', 'gelso', 'gemello', 'gemmato', 'gene', 'genitore', 'gennaio', 'genotipo', 'gergo', 'ghepardo', 'ghiaccio', 'ghisa', 'giallo', 'gilda', 'ginepro', 'giocare', 'gioiello', 'giorno', 'giove', 'girato', 'girone', 'gittata', 'giudizio', 'giurato', 'giusto', 'globulo', 'glutine', 'gnomo', 'gobba', 'golf', 'gomito', 'gommone', 'gonfio', 'gonna', 'governo', 'gracile', 'grado', 'grafico', 'grammo', 'grande', 'grattare', 'gravoso', 'grazia', 'greca', 'gregge', 'grifone', 'grigio', 'grinza', 'grotta', 'gruppo', 'guadagno', 'guaio', 'guanto', 'guardare', 'gufo', 'guidare', 'ibernato', 'icona', 'identico', 'idillio', 'idolo', 'idra', 'idrico', 'idrogeno', 'igiene', 'ignaro', 'ignorato', 'ilare', 'illeso', 'illogico', 'illudere', 'imballo', 'imbevuto', 'imbocco', 'imbuto', 'immane', 'immerso', 'immolato', 'impacco', 'impeto', 'impiego', 'importo', 'impronta', 'inalare', 'inarcare', 'inattivo', 'incanto', 'incendio', 'inchino', 'incisivo', 'incluso', 'incontro', 'incrocio', 'incubo', 'indagine', 'india', 'indole', 'inedito', 'infatti', 'infilare', 'inflitto', 'ingaggio', 'ingegno', 'inglese', 'ingordo', 'ingrosso', 'innesco', 'inodore', 'inoltrare', 'inondato', 'insano', 'insetto', 'insieme', 'insonnia', 'insulina', 'intasato', 'intero', 'intonaco', 'intuito', 'inumidire', 'invalido', 'invece', 'invito', 'iperbole', 'ipnotico', 'ipotesi', 'ippica', 'iride', 'irlanda', 'ironico', 'irrigato', 'irrorare', 'isolato', 'isotopo', 'isterico', 'istituto', 'istrice', 'italia', 'iterare', 'labbro', 'labirinto', 'lacca', 'lacerato', 'lacrima', 'lacuna', 'laddove', 'lago', 'lampo', 'lancetta', 'lanterna', 'lardoso', 'larga', 'laringe', 'lastra', 'latenza', 'latino', 'lattuga', 'lavagna', 'lavoro', 'legale', 'leggero', 'lembo', 'lentezza', 'lenza', 'leone', 'lepre', 'lesivo', 'lessato', 'lesto', 'letterale', 'leva', 'levigato', 'libero', 'lido', 'lievito', 'lilla', 'limatura', 'limitare', 'limpido', 'lineare', 'lingua', 'liquido', 'lira', 'lirica', 'lisca', 'lite', 'litigio', 'livrea', 'locanda', 'lode', 'logica', 'lombare', 'londra', 'longevo', 'loquace', 'lorenzo', 'loto', 'lotteria', 'luce', 'lucidato', 'lumaca', 'luminoso', 'lungo', 'lupo', 'luppolo', 'lusinga', 'lusso', 'lutto', 'macabro', 'macchina', 'macero', 'macinato', 'madama', 'magico', 'maglia', 'magnete', 'magro', 'maiolica', 'malafede', 'malgrado', 'malinteso', 'malsano', 'malto', 'malumore', 'mana', 'mancia', 'mandorla', 'mangiare', 'manifesto', 'mannaro', 'manovra', 'mansarda', 'mantide', 'manubrio', 'mappa', 'maratona', 'marcire', 'maretta', 'marmo', 'marsupio', 'maschera', 'massaia', 'mastino', 'materasso', 'matricola', 'mattone', 'maturo', 'mazurca', 'meandro', 'meccanico', 'mecenate', 'medesimo', 'meditare', 'mega', 'melassa', 'melis', 'melodia', 'meninge', 'meno', 'mensola', 'mercurio', 'merenda', 'merlo', 'meschino', 'mese', 'messere', 'mestolo', 'metallo', 'metodo', 'mettere', 'miagolare', 'mica', 'micelio', 'michele', 'microbo', 'midollo', 'miele', 'migliore', 'milano', 'milite', 'mimosa', 'minerale', 'mini', 'minore', 'mirino', 'mirtillo', 'miscela', 'missiva', 'misto', 'misurare', 'mitezza', 'mitigare', 'mitra', 'mittente', 'mnemonico', 'modello', 'modifica', 'modulo', 'mogano', 'mogio', 'mole', 'molosso', 'monastero', 'monco', 'mondina', 'monetario', 'monile', 'monotono', 'monsone', 'montato', 'monviso', 'mora', 'mordere', 'morsicato', 'mostro', 'motivato', 'motosega', 'motto', 'movenza', 'movimento', 'mozzo', 'mucca', 'mucosa', 'muffa', 'mughetto', 'mugnaio', 'mulatto', 'mulinello', 'multiplo', 'mummia', 'munto', 'muovere', 'murale', 'musa', 'muscolo', 'musica', 'mutevole', 'muto', 'nababbo', 'nafta', 'nanometro', 'narciso', 'narice', 'narrato', 'nascere', 'nastrare', 'naturale', 'nautica', 'naviglio', 'nebulosa', 'necrosi', 'negativo', 'negozio', 'nemmeno', 'neofita', 'neretto', 'nervo', 'nessuno', 'nettuno', 'neutrale', 'neve', 'nevrotico', 'nicchia', 'ninfa', 'nitido', 'nobile', 'nocivo', 'nodo', 'nome', 'nomina', 'nordico', 'normale', 'norvegese', 'nostrano', 'notare', 'notizia', 'notturno', 'novella', 'nucleo', 'nulla', 'numero', 'nuovo', 'nutrire', 'nuvola', 'nuziale', 'oasi', 'obbedire', 'obbligo', 'obelisco', 'oblio', 'obolo', 'obsoleto', 'occasione', 'occhio', 'occidente', 'occorrere', 'occultare', 'ocra', 'oculato', 'odierno', 'odorare', 'offerta', 'offrire', 'offuscato', 'oggetto', 'oggi', 'ognuno', 'olandese', 'olfatto', 'oliato', 'oliva', 'ologramma', 'oltre', 'omaggio', 'ombelico', 'ombra', 'omega', 'omissione', 'ondoso', 'onere', 'onice', 'onnivoro', 'onorevole', 'onta', 'operato', 'opinione', 'opposto', 'oracolo', 'orafo', 'ordine', 'orecchino', 'orefice', 'orfano', 'organico', 'origine', 'orizzonte', 'orma', 'ormeggio', 'ornativo', 'orologio', 'orrendo', 'orribile', 'ortensia', 'ortica', 'orzata', 'orzo', 'osare', 'oscurare', 'osmosi', 'ospedale', 'ospite', 'ossa', 'ossidare', 'ostacolo', 'oste', 'otite', 'otre', 'ottagono', 'ottimo', 'ottobre', 'ovale', 'ovest', 'ovino', 'oviparo', 'ovocito', 'ovunque', 'ovviare', 'ozio', 'pacchetto', 'pace', 'pacifico', 'padella', 'padrone', 'paese', 'paga', 'pagina', 'palazzina', 'palesare', 'pallido', 'palo', 'palude', 'pandoro', 'pannello', 'paolo', 'paonazzo', 'paprica', 'parabola', 'parcella', 'parere', 'pargolo', 'pari', 'parlato', 'parola', 'partire', 'parvenza', 'parziale', 'passivo', 'pasticca', 'patacca', 'patologia', 'pattume', 'pavone', 'peccato', 'pedalare', 'pedonale', 'peggio', 'peloso', 'penare', 'pendice', 'penisola', 'pennuto', 'penombra', 'pensare', 'pentola', 'pepe', 'pepita', 'perbene', 'percorso', 'perdonato', 'perforare', 'pergamena', 'periodo', 'permesso', 'perno', 'perplesso', 'persuaso', 'pertugio', 'pervaso', 'pesatore', 'pesista', 'peso', 'pestifero', 'petalo', 'pettine', 'petulante', 'pezzo', 'piacere', 'pianta', 'piattino', 'piccino', 'picozza', 'piega', 'pietra', 'piffero', 'pigiama', 'pigolio', 'pigro', 'pila', 'pilifero', 'pillola', 'pilota', 'pimpante', 'pineta', 'pinna', 'pinolo', 'pioggia', 'piombo', 'piramide', 'piretico', 'pirite', 'pirolisi', 'pitone', 'pizzico', 'placebo', 'planare', 'plasma', 'platano', 'plenario', 'pochezza', 'poderoso', 'podismo', 'poesia', 'poggiare', 'polenta', 'poligono', 'pollice', 'polmonite', 'polpetta', 'polso', 'poltrona', 'polvere', 'pomice', 'pomodoro', 'ponte', 'popoloso', 'porfido', 'poroso', 'porpora', 'porre', 'portata', 'posa', 'positivo', 'possesso', 'postulato', 'potassio', 'potere', 'pranzo', 'prassi', 'pratica', 'precluso', 'predica', 'prefisso', 'pregiato', 'prelievo', 'premere', 'prenotare', 'preparato', 'presenza', 'pretesto', 'prevalso', 'prima', 'principe', 'privato', 'problema', 'procura', 'produrre', 'profumo', 'progetto', 'prolunga', 'promessa', 'pronome', 'proposta', 'proroga', 'proteso', 'prova', 'prudente', 'prugna', 'prurito', 'psiche', 'pubblico', 'pudica', 'pugilato', 'pugno', 'pulce', 'pulito', 'pulsante', 'puntare', 'pupazzo', 'pupilla', 'puro', 'quadro', 'qualcosa', 'quasi', 'querela', 'quota', 'raccolto', 'raddoppio', 'radicale', 'radunato', 'raffica', 'ragazzo', 'ragione', 'ragno', 'ramarro', 'ramingo', 'ramo', 'randagio', 'rantolare', 'rapato', 'rapina', 'rappreso', 'rasatura', 'raschiato', 'rasente', 'rassegna', 'rastrello', 'rata', 'ravveduto', 'reale', 'recepire', 'recinto', 'recluta', 'recondito', 'recupero', 'reddito', 'redimere', 'regalato', 'registro', 'regola', 'regresso', 'relazione', 'remare', 'remoto', 'renna', 'replica', 'reprimere', 'reputare', 'resa', 'residente', 'responso', 'restauro', 'rete', 'retina', 'retorica', 'rettifica', 'revocato', 'riassunto', 'ribadire', 'ribelle', 'ribrezzo', 'ricarica', 'ricco', 'ricevere', 'riciclato', 'ricordo', 'ricreduto', 'ridicolo', 'ridurre', 'rifasare', 'riflesso', 'riforma', 'rifugio', 'rigare', 'rigettato', 'righello', 'rilassato', 'rilevato', 'rimanere', 'rimbalzo', 'rimedio', 'rimorchio', 'rinascita', 'rincaro', 'rinforzo', 'rinnovo', 'rinomato', 'rinsavito', 'rintocco', 'rinuncia', 'rinvenire', 'riparato', 'ripetuto', 'ripieno', 'riportare', 'ripresa', 'ripulire', 'risata', 'rischio', 'riserva', 'risibile', 'riso', 'rispetto', 'ristoro', 'risultato', 'risvolto', 'ritardo', 'ritegno', 'ritmico', 'ritrovo', 'riunione', 'riva', 'riverso', 'rivincita', 'rivolto', 'rizoma', 'roba', 'robotico', 'robusto', 'roccia', 'roco', 'rodaggio', 'rodere', 'roditore', 'rogito', 'rollio', 'romantico', 'rompere', 'ronzio', 'rosolare', 'rospo', 'rotante', 'rotondo', 'rotula', 'rovescio', 'rubizzo', 'rubrica', 'ruga', 'rullino', 'rumine', 'rumoroso', 'ruolo', 'rupe', 'russare', 'rustico', 'sabato', 'sabbiare', 'sabotato', 'sagoma', 'salasso', 'saldatura', 'salgemma', 'salivare', 'salmone', 'salone', 'saltare', 'saluto', 'salvo', 'sapere', 'sapido', 'saporito', 'saraceno', 'sarcasmo', 'sarto', 'sassoso', 'satellite', 'satira', 'satollo', 'saturno', 'savana', 'savio', 'saziato', 'sbadiglio', 'sbalzo', 'sbancato', 'sbarra', 'sbattere', 'sbavare', 'sbendare', 'sbirciare', 'sbloccato', 'sbocciato', 'sbrinare', 'sbruffone', 'sbuffare', 'scabroso', 'scadenza', 'scala', 'scambiare', 'scandalo', 'scapola', 'scarso', 'scatenare', 'scavato', 'scelto', 'scenico', 'scettro', 'scheda', 'schiena', 'sciarpa', 'scienza', 'scindere', 'scippo', 'sciroppo', 'scivolo', 'sclerare', 'scodella', 'scolpito', 'scomparto', 'sconforto', 'scoprire', 'scorta', 'scossone', 'scozzese', 'scriba', 'scrollare', 'scrutinio', 'scuderia', 'scultore', 'scuola', 'scuro', 'scusare', 'sdebitare', 'sdoganare', 'seccatura', 'secondo', 'sedano', 'seggiola', 'segnalato', 'segregato', 'seguito', 'selciato', 'selettivo', 'sella', 'selvaggio', 'semaforo', 'sembrare', 'seme', 'seminato', 'sempre', 'senso', 'sentire', 'sepolto', 'sequenza', 'serata', 'serbato', 'sereno', 'serio', 'serpente', 'serraglio', 'servire', 'sestina', 'setola', 'settimana', 'sfacelo', 'sfaldare', 'sfamato', 'sfarzoso', 'sfaticato', 'sfera', 'sfida', 'sfilato', 'sfinge', 'sfocato', 'sfoderare', 'sfogo', 'sfoltire', 'sforzato', 'sfratto', 'sfruttato', 'sfuggito', 'sfumare', 'sfuso', 'sgabello', 'sgarbato', 'sgonfiare', 'sgorbio', 'sgrassato', 'sguardo', 'sibilo', 'siccome', 'sierra', 'sigla', 'signore', 'silenzio', 'sillaba', 'simbolo', 'simpatico', 'simulato', 'sinfonia', 'singolo', 'sinistro', 'sino', 'sintesi', 'sinusoide', 'sipario', 'sisma', 'sistole', 'situato', 'slitta', 'slogatura', 'sloveno', 'smarrito', 'smemorato', 'smentito', 'smeraldo', 'smilzo', 'smontare', 'smottato', 'smussato', 'snellire', 'snervato', 'snodo', 'sobbalzo', 'sobrio', 'soccorso', 'sociale', 'sodale', 'soffitto', 'sogno', 'soldato', 'solenne', 'solido', 'sollazzo', 'solo', 'solubile', 'solvente', 'somatico', 'somma', 'sonda', 'sonetto', 'sonnifero', 'sopire', 'soppeso', 'sopra', 'sorgere', 'sorpasso', 'sorriso', 'sorso', 'sorteggio', 'sorvolato', 'sospiro', 'sosta', 'sottile', 'spada', 'spalla', 'spargere', 'spatola', 'spavento', 'spazzola', 'specie', 'spedire', 'spegnere', 'spelatura', 'speranza', 'spessore', 'spettrale', 'spezzato', 'spia', 'spigoloso', 'spillato', 'spinoso', 'spirale', 'splendido', 'sportivo', 'sposo', 'spranga', 'sprecare', 'spronato', 'spruzzo', 'spuntino', 'squillo', 'sradicare', 'srotolato', 'stabile', 'stacco', 'staffa', 'stagnare', 'stampato', 'stantio', 'starnuto', 'stasera', 'statuto', 'stelo', 'steppa', 'sterzo', 'stiletto', 'stima', 'stirpe', 'stivale', 'stizzoso', 'stonato', 'storico', 'strappo', 'stregato', 'stridulo', 'strozzare', 'strutto', 'stuccare', 'stufo', 'stupendo', 'subentro', 'succoso', 'sudore', 'suggerito', 'sugo', 'sultano', 'suonare', 'superbo', 'supporto', 'surgelato', 'surrogato', 'sussurro', 'sutura', 'svagare', 'svedese', 'sveglio', 'svelare', 'svenuto', 'svezia', 'sviluppo', 'svista', 'svizzera', 'svolta', 'svuotare', 'tabacco', 'tabulato', 'tacciare', 'taciturno', 'tale', 'talismano', 'tampone', 'tannino', 'tara', 'tardivo', 'targato', 'tariffa', 'tarpare', 'tartaruga', 'tasto', 'tattico', 'taverna', 'tavolata', 'tazza', 'teca', 'tecnico', 'telefono', 'temerario', 'tempo', 'temuto', 'tendone', 'tenero', 'tensione', 'tentacolo', 'teorema', 'terme', 'terrazzo', 'terzetto', 'tesi', 'tesserato', 'testato', 'tetro', 'tettoia', 'tifare', 'tigella', 'timbro', 'tinto', 'tipico', 'tipografo', 'tiraggio', 'tiro', 'titanio', 'titolo', 'titubante', 'tizio', 'tizzone', 'toccare', 'tollerare', 'tolto', 'tombola', 'tomo', 'tonfo', 'tonsilla', 'topazio', 'topologia', 'toppa', 'torba', 'tornare', 'torrone', 'tortora', 'toscano', 'tossire', 'tostatura', 'totano', 'trabocco', 'trachea', 'trafila', 'tragedia', 'tralcio', 'tramonto', 'transito', 'trapano', 'trarre', 'trasloco', 'trattato', 'trave', 'treccia', 'tremolio', 'trespolo', 'tributo', 'tricheco', 'trifoglio', 'trillo', 'trincea', 'trio', 'tristezza', 'triturato', 'trivella', 'tromba', 'trono', 'troppo', 'trottola', 'trovare', 'truccato', 'tubatura', 'tuffato', 'tulipano', 'tumulto', 'tunisia', 'turbare', 'turchino', 'tuta', 'tutela', 'ubicato', 'uccello', 'uccisore', 'udire', 'uditivo', 'uffa', 'ufficio', 'uguale', 'ulisse', 'ultimato', 'umano', 'umile', 'umorismo', 'uncinetto', 'ungere', 'ungherese', 'unicorno', 'unificato', 'unisono', 'unitario', 'unte', 'uovo', 'upupa', 'uragano', 'urgenza', 'urlo', 'usanza', 'usato', 'uscito', 'usignolo', 'usuraio', 'utensile', 'utilizzo', 'utopia', 'vacante', 'vaccinato', 'vagabondo', 'vagliato', 'valanga', 'valgo', 'valico', 'valletta', 'valoroso', 'valutare', 'valvola', 'vampata', 'vangare', 'vanitoso', 'vano', 'vantaggio', 'vanvera', 'vapore', 'varano', 'varcato', 'variante', 'vasca', 'vedetta', 'vedova', 'veduto', 'vegetale', 'veicolo', 'velcro', 'velina', 'velluto', 'veloce', 'venato', 'vendemmia', 'vento', 'verace', 'verbale', 'vergogna', 'verifica', 'vero', 'verruca', 'verticale', 'vescica', 'vessillo', 'vestale', 'veterano', 'vetrina', 'vetusto', 'viandante', 'vibrante', 'vicenda', 'vichingo', 'vicinanza', 'vidimare', 'vigilia', 'vigneto', 'vigore', 'vile', 'villano', 'vimini', 'vincitore', 'viola', 'vipera', 'virgola', 'virologo', 'virulento', 'viscoso', 'visione', 'vispo', 'vissuto', 'visura', 'vita', 'vitello', 'vittima', 'vivanda', 'vivido', 'viziare', 'voce', 'voga', 'volatile', 'volere', 'volpe', 'voragine', 'vulcano', 'zampogna', 'zanna', 'zappato', 'zattera', 'zavorra', 'zefiro', 'zelante', 'zelo', 'zenzero', 'zerbino', 'zibetto', 'zinco', 'zircone', 'zitto', 'zolla', 'zotico', 'zucchero', 'zufolo', 'zulu', 'zuppa'];\n\nmodule.exports = italian;\n", "'use strict';\n\nvar japanese = ['\u3042\u3044\u3053\u304F\u3057\u3093', '\u3042\u3044\u3055\u3064', '\u3042\u3044\u305F\u3099', '\u3042\u304A\u305D\u3099\u3089', '\u3042\u304B\u3061\u3083\u3093', '\u3042\u304D\u308B', '\u3042\u3051\u304B\u3099\u305F', '\u3042\u3051\u308B', '\u3042\u3053\u304B\u3099\u308C\u308B', '\u3042\u3055\u3044', '\u3042\u3055\u3072', '\u3042\u3057\u3042\u3068', '\u3042\u3057\u3099\u308F\u3046', '\u3042\u3059\u3099\u304B\u308B', '\u3042\u3059\u3099\u304D', '\u3042\u305D\u3075\u3099', '\u3042\u305F\u3048\u308B', '\u3042\u305F\u305F\u3081\u308B', '\u3042\u305F\u308A\u307E\u3048', '\u3042\u305F\u308B', '\u3042\u3064\u3044', '\u3042\u3064\u304B\u3046', '\u3042\u3063\u3057\u3085\u304F', '\u3042\u3064\u307E\u308A', '\u3042\u3064\u3081\u308B', '\u3042\u3066\u306A', '\u3042\u3066\u306F\u307E\u308B', '\u3042\u3072\u308B', '\u3042\u3075\u3099\u3089', '\u3042\u3075\u3099\u308B', '\u3042\u3075\u308C\u308B', '\u3042\u307E\u3044', '\u3042\u307E\u3068\u3099', '\u3042\u307E\u3084\u304B\u3059', '\u3042\u307E\u308A', '\u3042\u307F\u3082\u306E', '\u3042\u3081\u308A\u304B', '\u3042\u3084\u307E\u308B', '\u3042\u3086\u3080', '\u3042\u3089\u3044\u304F\u3099\u307E', '\u3042\u3089\u3057', '\u3042\u3089\u3059\u3057\u3099', '\u3042\u3089\u305F\u3081\u308B', '\u3042\u3089\u3086\u308B', '\u3042\u3089\u308F\u3059', '\u3042\u308A\u304B\u3099\u3068\u3046', '\u3042\u308F\u305B\u308B', '\u3042\u308F\u3066\u308B', '\u3042\u3093\u3044', '\u3042\u3093\u304B\u3099\u3044', '\u3042\u3093\u3053', '\u3042\u3093\u305B\u3099\u3093', '\u3042\u3093\u3066\u3044', '\u3042\u3093\u306A\u3044', '\u3042\u3093\u307E\u308A', '\u3044\u3044\u305F\u3099\u3059', '\u3044\u304A\u3093', '\u3044\u304B\u3099\u3044', '\u3044\u304B\u3099\u304F', '\u3044\u304D\u304A\u3044', '\u3044\u304D\u306A\u308A', '\u3044\u304D\u3082\u306E', '\u3044\u304D\u308B', '\u3044\u304F\u3057\u3099', '\u3044\u304F\u3075\u3099\u3093', '\u3044\u3051\u306F\u3099\u306A', '\u3044\u3051\u3093', '\u3044\u3053\u3046', '\u3044\u3053\u304F', '\u3044\u3053\u3064', '\u3044\u3055\u307E\u3057\u3044', '\u3044\u3055\u3093', '\u3044\u3057\u304D', '\u3044\u3057\u3099\u3085\u3046', '\u3044\u3057\u3099\u3087\u3046', '\u3044\u3057\u3099\u308F\u308B', '\u3044\u3059\u3099\u307F', '\u3044\u3059\u3099\u308C', '\u3044\u305B\u3044', '\u3044\u305B\u3048\u3072\u3099', '\u3044\u305B\u304B\u3044', '\u3044\u305B\u304D', '\u3044\u305B\u3099\u3093', '\u3044\u305D\u3046\u308D\u3046', '\u3044\u305D\u304B\u3099\u3057\u3044', '\u3044\u305F\u3099\u3044', '\u3044\u305F\u3099\u304F', '\u3044\u305F\u3059\u3099\u3089', '\u3044\u305F\u307F', '\u3044\u305F\u308A\u3042', '\u3044\u3061\u304A\u3046', '\u3044\u3061\u3057\u3099', '\u3044\u3061\u3068\u3099', '\u3044\u3061\u306F\u3099', '\u3044\u3061\u3075\u3099', '\u3044\u3061\u308A\u3085\u3046', '\u3044\u3064\u304B', '\u3044\u3063\u3057\u3085\u3093', '\u3044\u3063\u305B\u3044', '\u3044\u3063\u305D\u3046', '\u3044\u3063\u305F\u3093', '\u3044\u3063\u3061', '\u3044\u3063\u3066\u3044', '\u3044\u3063\u307B\u309A\u3046', '\u3044\u3066\u3055\u3099', '\u3044\u3066\u3093', '\u3044\u3068\u3099\u3046', '\u3044\u3068\u3053', '\u3044\u306A\u3044', '\u3044\u306A\u304B', '\u3044\u306D\u3080\u308A', '\u3044\u306E\u3061', '\u3044\u306E\u308B', '\u3044\u306F\u3064', '\u3044\u306F\u3099\u308B', '\u3044\u306F\u3093', '\u3044\u3072\u3099\u304D', '\u3044\u3072\u3093', '\u3044\u3075\u304F', '\u3044\u3078\u3093', '\u3044\u307B\u3046', '\u3044\u307F\u3093', '\u3044\u3082\u3046\u3068', '\u3044\u3082\u305F\u308C', '\u3044\u3082\u308A', '\u3044\u3084\u304B\u3099\u308B', '\u3044\u3084\u3059', '\u3044\u3088\u304B\u3093', '\u3044\u3088\u304F', '\u3044\u3089\u3044', '\u3044\u3089\u3059\u3068', '\u3044\u308A\u304F\u3099\u3061', '\u3044\u308A\u3087\u3046', '\u3044\u308C\u3044', '\u3044\u308C\u3082\u306E', '\u3044\u308C\u308B', '\u3044\u308D\u3048\u3093\u3072\u309A\u3064', '\u3044\u308F\u3044', '\u3044\u308F\u3046', '\u3044\u308F\u304B\u3093', '\u3044\u308F\u306F\u3099', '\u3044\u308F\u3086\u308B', '\u3044\u3093\u3051\u3099\u3093\u307E\u3081', '\u3044\u3093\u3055\u3064', '\u3044\u3093\u3057\u3087\u3046', '\u3044\u3093\u3088\u3046', '\u3046\u3048\u304D', '\u3046\u3048\u308B', '\u3046\u304A\u3055\u3099', '\u3046\u304B\u3099\u3044', '\u3046\u304B\u3075\u3099', '\u3046\u304B\u3078\u3099\u308B', '\u3046\u304D\u308F', '\u3046\u304F\u3089\u3044\u306A', '\u3046\u304F\u308C\u308C', '\u3046\u3051\u305F\u307E\u308F\u308B', '\u3046\u3051\u3064\u3051', '\u3046\u3051\u3068\u308B', '\u3046\u3051\u3082\u3064', '\u3046\u3051\u308B', '\u3046\u3053\u3099\u304B\u3059', '\u3046\u3053\u3099\u304F', '\u3046\u3053\u3093', '\u3046\u3055\u304D\u3099', '\u3046\u3057\u306A\u3046', '\u3046\u3057\u308D\u304B\u3099\u307F', '\u3046\u3059\u3044', '\u3046\u3059\u304D\u3099', '\u3046\u3059\u304F\u3099\u3089\u3044', '\u3046\u3059\u3081\u308B', '\u3046\u305B\u3064', '\u3046\u3061\u3042\u308F\u305B', '\u3046\u3061\u304B\u3099\u308F', '\u3046\u3061\u304D', '\u3046\u3061\u3085\u3046', '\u3046\u3063\u304B\u308A', '\u3046\u3064\u304F\u3057\u3044', '\u3046\u3063\u305F\u3048\u308B', '\u3046\u3064\u308B', '\u3046\u3068\u3099\u3093', '\u3046\u306A\u304D\u3099', '\u3046\u306A\u3057\u3099', '\u3046\u306A\u3059\u3099\u304F', '\u3046\u306A\u308B', '\u3046\u306D\u308B', '\u3046\u306E\u3046', '\u3046\u3075\u3099\u3051\u3099', '\u3046\u3075\u3099\u3053\u3099\u3048', '\u3046\u307E\u308C\u308B', '\u3046\u3081\u308B', '\u3046\u3082\u3046', '\u3046\u3084\u307E\u3046', '\u3046\u3088\u304F', '\u3046\u3089\u304B\u3099\u3048\u3059', '\u3046\u3089\u304F\u3099\u3061', '\u3046\u3089\u306A\u3044', '\u3046\u308A\u3042\u3051\u3099', '\u3046\u308A\u304D\u308C', '\u3046\u308B\u3055\u3044', '\u3046\u308C\u3057\u3044', '\u3046\u308C\u3086\u304D', '\u3046\u308C\u308B', '\u3046\u308D\u3053', '\u3046\u308F\u304D', '\u3046\u308F\u3055', '\u3046\u3093\u3053\u3046', '\u3046\u3093\u3061\u3093', '\u3046\u3093\u3066\u3093', '\u3046\u3093\u3068\u3099\u3046', '\u3048\u3044\u3048\u3093', '\u3048\u3044\u304B\u3099', '\u3048\u3044\u304D\u3087\u3046', '\u3048\u3044\u3053\u3099', '\u3048\u3044\u305B\u3044', '\u3048\u3044\u3075\u3099\u3093', '\u3048\u3044\u3088\u3046', '\u3048\u3044\u308F', '\u3048\u304A\u308A', '\u3048\u304B\u3099\u304A', '\u3048\u304B\u3099\u304F', '\u3048\u304D\u305F\u3044', '\u3048\u304F\u305B\u308B', '\u3048\u3057\u3083\u304F', '\u3048\u3059\u3066', '\u3048\u3064\u3089\u3093', '\u3048\u306E\u304F\u3099', '\u3048\u307B\u3046\u307E\u304D', '\u3048\u307B\u3093', '\u3048\u307E\u304D', '\u3048\u3082\u3057\u3099', '\u3048\u3082\u306E', '\u3048\u3089\u3044', '\u3048\u3089\u3075\u3099', '\u3048\u308A\u3042', '\u3048\u3093\u3048\u3093', '\u3048\u3093\u304B\u3044', '\u3048\u3093\u304D\u3099', '\u3048\u3093\u3051\u3099\u304D', '\u3048\u3093\u3057\u3085\u3046', '\u3048\u3093\u305B\u3099\u3064', '\u3048\u3093\u305D\u304F', '\u3048\u3093\u3061\u3087\u3046', '\u3048\u3093\u3068\u3064', '\u304A\u3044\u304B\u3051\u308B', '\u304A\u3044\u3053\u3059', '\u304A\u3044\u3057\u3044', '\u304A\u3044\u3064\u304F', '\u304A\u3046\u3048\u3093', '\u304A\u3046\u3055\u307E', '\u304A\u3046\u3057\u3099', '\u304A\u3046\u305B\u3064', '\u304A\u3046\u305F\u3044', '\u304A\u3046\u3075\u304F', '\u304A\u3046\u3078\u3099\u3044', '\u304A\u3046\u3088\u3046', '\u304A\u3048\u308B', '\u304A\u304A\u3044', '\u304A\u304A\u3046', '\u304A\u304A\u3068\u3099\u304A\u308A', '\u304A\u304A\u3084', '\u304A\u304A\u3088\u305D', '\u304A\u304B\u3048\u308A', '\u304A\u304B\u3059\u3099', '\u304A\u304B\u3099\u3080', '\u304A\u304B\u308F\u308A', '\u304A\u304D\u3099\u306A\u3046', '\u304A\u304D\u308B', '\u304A\u304F\u3055\u307E', '\u304A\u304F\u3057\u3099\u3087\u3046', '\u304A\u304F\u308A\u304B\u3099\u306A', '\u304A\u304F\u308B', '\u304A\u304F\u308C\u308B', '\u304A\u3053\u3059', '\u304A\u3053\u306A\u3046', '\u304A\u3053\u308B', '\u304A\u3055\u3048\u308B', '\u304A\u3055\u306A\u3044', '\u304A\u3055\u3081\u308B', '\u304A\u3057\u3044\u308C', '\u304A\u3057\u3048\u308B', '\u304A\u3057\u3099\u304D\u3099', '\u304A\u3057\u3099\u3055\u3093', '\u304A\u3057\u3083\u308C', '\u304A\u305D\u3089\u304F', '\u304A\u305D\u308F\u308B', '\u304A\u305F\u304B\u3099\u3044', '\u304A\u305F\u304F', '\u304A\u305F\u3099\u3084\u304B', '\u304A\u3061\u3064\u304F', '\u304A\u3063\u3068', '\u304A\u3064\u308A', '\u304A\u3066\u3099\u304B\u3051', '\u304A\u3068\u3057\u3082\u306E', '\u304A\u3068\u306A\u3057\u3044', '\u304A\u3068\u3099\u308A', '\u304A\u3068\u3099\u308D\u304B\u3059', '\u304A\u306F\u3099\u3055\u3093', '\u304A\u307E\u3044\u308A', '\u304A\u3081\u3066\u3099\u3068\u3046', '\u304A\u3082\u3044\u3066\u3099', '\u304A\u3082\u3046', '\u304A\u3082\u305F\u3044', '\u304A\u3082\u3061\u3083', '\u304A\u3084\u3064', '\u304A\u3084\u3086\u3072\u3099', '\u304A\u3088\u307B\u3099\u3059', '\u304A\u3089\u3093\u305F\u3099', '\u304A\u308D\u3059', '\u304A\u3093\u304B\u3099\u304F', '\u304A\u3093\u3051\u3044', '\u304A\u3093\u3057\u3083', '\u304A\u3093\u305B\u3093', '\u304A\u3093\u305F\u3099\u3093', '\u304A\u3093\u3061\u3085\u3046', '\u304A\u3093\u3068\u3099\u3051\u3044', '\u304B\u3042\u3064', '\u304B\u3044\u304B\u3099', '\u304B\u3099\u3044\u304D', '\u304B\u3099\u3044\u3051\u3093', '\u304B\u3099\u3044\u3053\u3046', '\u304B\u3044\u3055\u3064', '\u304B\u3044\u3057\u3083', '\u304B\u3044\u3059\u3044\u3088\u304F', '\u304B\u3044\u305B\u3099\u3093', '\u304B\u3044\u305D\u3099\u3046\u3068\u3099', '\u304B\u3044\u3064\u3046', '\u304B\u3044\u3066\u3093', '\u304B\u3044\u3068\u3046', '\u304B\u3044\u3075\u304F', '\u304B\u3099\u3044\u3078\u304D', '\u304B\u3044\u307B\u3046', '\u304B\u3044\u3088\u3046', '\u304B\u3099\u3044\u3089\u3044', '\u304B\u3044\u308F', '\u304B\u3048\u308B', '\u304B\u304A\u308A', '\u304B\u304B\u3048\u308B', '\u304B\u304B\u3099\u304F', '\u304B\u304B\u3099\u3057', '\u304B\u304B\u3099\u307F', '\u304B\u304F\u3053\u3099', '\u304B\u304F\u3068\u304F', '\u304B\u3055\u3099\u308B', '\u304B\u3099\u305D\u3099\u3046', '\u304B\u305F\u3044', '\u304B\u305F\u3061', '\u304B\u3099\u3061\u3087\u3046', '\u304B\u3099\u3063\u304D\u3085\u3046', '\u304B\u3099\u3063\u3053\u3046', '\u304B\u3099\u3063\u3055\u3093', '\u304B\u3099\u3063\u3057\u3087\u3046', '\u304B\u306A\u3055\u3099\u308F\u3057', '\u304B\u306E\u3046', '\u304B\u3099\u306F\u304F', '\u304B\u3075\u3099\u304B', '\u304B\u307B\u3046', '\u304B\u307B\u3053\u3099', '\u304B\u307E\u3046', '\u304B\u307E\u307B\u3099\u3053', '\u304B\u3081\u308C\u304A\u3093', '\u304B\u3086\u3044', '\u304B\u3088\u3046\u3072\u3099', '\u304B\u3089\u3044', '\u304B\u308B\u3044', '\u304B\u308D\u3046', '\u304B\u308F\u304F', '\u304B\u308F\u3089', '\u304B\u3099\u3093\u304B', '\u304B\u3093\u3051\u3044', '\u304B\u3093\u3053\u3046', '\u304B\u3093\u3057\u3083', '\u304B\u3093\u305D\u3046', '\u304B\u3093\u305F\u3093', '\u304B\u3093\u3061', '\u304B\u3099\u3093\u306F\u3099\u308B', '\u304D\u3042\u3044', '\u304D\u3042\u3064', '\u304D\u3044\u308D', '\u304D\u3099\u3044\u3093', '\u304D\u3046\u3044', '\u304D\u3046\u3093', '\u304D\u3048\u308B', '\u304D\u304A\u3046', '\u304D\u304A\u304F', '\u304D\u304A\u3061', '\u304D\u304A\u3093', '\u304D\u304B\u3044', '\u304D\u304B\u304F', '\u304D\u304B\u3093\u3057\u3083', '\u304D\u304D\u3066', '\u304D\u304F\u306F\u3099\u308A', '\u304D\u304F\u3089\u3051\u3099', '\u304D\u3051\u3093\u305B\u3044', '\u304D\u3053\u3046', '\u304D\u3053\u3048\u308B', '\u304D\u3053\u304F', '\u304D\u3055\u3044', '\u304D\u3055\u304F', '\u304D\u3055\u307E', '\u304D\u3055\u3089\u304D\u3099', '\u304D\u3099\u3057\u3099\u304B\u304B\u3099\u304F', '\u304D\u3099\u3057\u304D', '\u304D\u3099\u3057\u3099\u305F\u3044\u3051\u3093', '\u304D\u3099\u3057\u3099\u306B\u3063\u3066\u3044', '\u304D\u3099\u3057\u3099\u3085\u3064\u3057\u3083', '\u304D\u3059\u3046', '\u304D\u305B\u3044', '\u304D\u305B\u304D', '\u304D\u305B\u3064', '\u304D\u305D\u3046', '\u304D\u305D\u3099\u304F', '\u304D\u305D\u3099\u3093', '\u304D\u305F\u3048\u308B', '\u304D\u3061\u3087\u3046', '\u304D\u3064\u3048\u3093', '\u304D\u3099\u3063\u3061\u308A', '\u304D\u3064\u3064\u304D', '\u304D\u3064\u306D', '\u304D\u3066\u3044', '\u304D\u3068\u3099\u3046', '\u304D\u3068\u3099\u304F', '\u304D\u306A\u3044', '\u304D\u306A\u304B\u3099', '\u304D\u306A\u3053', '\u304D\u306C\u3053\u3099\u3057', '\u304D\u306D\u3093', '\u304D\u306E\u3046', '\u304D\u306E\u3057\u305F', '\u304D\u306F\u304F', '\u304D\u3072\u3099\u3057\u3044', '\u304D\u3072\u3093', '\u304D\u3075\u304F', '\u304D\u3075\u3099\u3093', '\u304D\u307B\u3099\u3046', '\u304D\u307B\u3093', '\u304D\u307E\u308B', '\u304D\u307F\u3064', '\u304D\u3080\u3059\u3099\u304B\u3057\u3044', '\u304D\u3081\u308B', '\u304D\u3082\u305F\u3099\u3081\u3057', '\u304D\u3082\u3061', '\u304D\u3082\u306E', '\u304D\u3083\u304F', '\u304D\u3084\u304F', '\u304D\u3099\u3085\u3046\u306B\u304F', '\u304D\u3088\u3046', '\u304D\u3087\u3046\u308A\u3085\u3046', '\u304D\u3089\u3044', '\u304D\u3089\u304F', '\u304D\u308A\u3093', '\u304D\u308C\u3044', '\u304D\u308C\u3064', '\u304D\u308D\u304F', '\u304D\u3099\u308D\u3093', '\u304D\u308F\u3081\u308B', '\u304D\u3099\u3093\u3044\u308D', '\u304D\u3093\u304B\u304F\u3057\u3099', '\u304D\u3093\u3057\u3099\u3087', '\u304D\u3093\u3088\u3046\u3072\u3099', '\u304F\u3099\u3042\u3044', '\u304F\u3044\u3059\u3099', '\u304F\u3046\u304B\u3093', '\u304F\u3046\u304D', '\u304F\u3046\u304F\u3099\u3093', '\u304F\u3046\u3053\u3046', '\u304F\u3099\u3046\u305B\u3044', '\u304F\u3046\u305D\u3046', '\u304F\u3099\u3046\u305F\u3089', '\u304F\u3046\u3075\u304F', '\u304F\u3046\u307B\u3099', '\u304F\u304B\u3093', '\u304F\u304D\u3087\u3046', '\u304F\u3051\u3099\u3093', '\u304F\u3099\u3053\u3046', '\u304F\u3055\u3044', '\u304F\u3055\u304D', '\u304F\u3055\u306F\u3099\u306A', '\u304F\u3055\u308B', '\u304F\u3057\u3083\u307F', '\u304F\u3057\u3087\u3046', '\u304F\u3059\u306E\u304D', '\u304F\u3059\u308A\u3086\u3072\u3099', '\u304F\u305B\u3051\u3099', '\u304F\u305B\u3093', '\u304F\u3099\u305F\u3044\u3066\u304D', '\u304F\u305F\u3099\u3055\u308B', '\u304F\u305F\u3072\u3099\u308C\u308B', '\u304F\u3061\u3053\u307F', '\u304F\u3061\u3055\u304D', '\u304F\u3064\u3057\u305F', '\u304F\u3099\u3063\u3059\u308A', '\u304F\u3064\u308D\u304F\u3099', '\u304F\u3068\u3046\u3066\u3093', '\u304F\u3068\u3099\u304F', '\u304F\u306A\u3093', '\u304F\u306D\u304F\u306D', '\u304F\u306E\u3046', '\u304F\u3075\u3046', '\u304F\u307F\u3042\u308F\u305B', '\u304F\u307F\u305F\u3066\u308B', '\u304F\u3081\u308B', '\u304F\u3084\u304F\u3057\u3087', '\u304F\u3089\u3059', '\u304F\u3089\u3078\u3099\u308B', '\u304F\u308B\u307E', '\u304F\u308C\u308B', '\u304F\u308D\u3046', '\u304F\u308F\u3057\u3044', '\u304F\u3099\u3093\u304B\u3093', '\u304F\u3099\u3093\u3057\u3087\u304F', '\u304F\u3099\u3093\u305F\u3044', '\u304F\u3099\u3093\u3066', '\u3051\u3042\u306A', '\u3051\u3044\u304B\u304F', '\u3051\u3044\u3051\u3093', '\u3051\u3044\u3053', '\u3051\u3044\u3055\u3064', '\u3051\u3099\u3044\u3057\u3099\u3085\u3064', '\u3051\u3044\u305F\u3044', '\u3051\u3099\u3044\u306E\u3046\u3057\u3099\u3093', '\u3051\u3044\u308C\u304D', '\u3051\u3044\u308D', '\u3051\u304A\u3068\u3059', '\u3051\u304A\u308A\u3082\u306E', '\u3051\u3099\u304D\u304B', '\u3051\u3099\u304D\u3051\u3099\u3093', '\u3051\u3099\u304D\u305F\u3099\u3093', '\u3051\u3099\u304D\u3061\u3093', '\u3051\u3099\u304D\u3068\u3064', '\u3051\u3099\u304D\u306F', '\u3051\u3099\u304D\u3084\u304F', '\u3051\u3099\u3053\u3046', '\u3051\u3099\u3053\u304F\u3057\u3099\u3087\u3046', '\u3051\u3099\u3055\u3099\u3044', '\u3051\u3055\u304D', '\u3051\u3099\u3055\u3099\u3093', '\u3051\u3057\u304D', '\u3051\u3057\u3053\u3099\u3080', '\u3051\u3057\u3087\u3046', '\u3051\u3099\u3059\u3068', '\u3051\u305F\u306F\u3099', '\u3051\u3061\u3083\u3063\u3075\u309A', '\u3051\u3061\u3089\u3059', '\u3051\u3064\u3042\u3064', '\u3051\u3064\u3044', '\u3051\u3064\u3048\u304D', '\u3051\u3063\u3053\u3093', '\u3051\u3064\u3057\u3099\u3087', '\u3051\u3063\u305B\u304D', '\u3051\u3063\u3066\u3044', '\u3051\u3064\u307E\u3064', '\u3051\u3099\u3064\u3088\u3046\u3072\u3099', '\u3051\u3099\u3064\u308C\u3044', '\u3051\u3064\u308D\u3093', '\u3051\u3099\u3068\u3099\u304F', '\u3051\u3068\u306F\u3099\u3059', '\u3051\u3068\u308B', '\u3051\u306A\u3051\u3099', '\u3051\u306A\u3059', '\u3051\u306A\u307F', '\u3051\u306C\u304D', '\u3051\u3099\u306D\u3064', '\u3051\u306D\u3093', '\u3051\u306F\u3044', '\u3051\u3099\u3072\u3093', '\u3051\u3075\u3099\u304B\u3044', '\u3051\u3099\u307B\u3099\u304F', '\u3051\u307E\u308A', '\u3051\u307F\u304B\u308B', '\u3051\u3080\u3057', '\u3051\u3080\u308A', '\u3051\u3082\u306E', '\u3051\u3089\u3044', '\u3051\u308D\u3051\u308D', '\u3051\u308F\u3057\u3044', '\u3051\u3093\u3044', '\u3051\u3093\u3048\u3064', '\u3051\u3093\u304A', '\u3051\u3093\u304B', '\u3051\u3099\u3093\u304D', '\u3051\u3093\u3051\u3099\u3093', '\u3051\u3093\u3053\u3046', '\u3051\u3093\u3055\u304F', '\u3051\u3093\u3057\u3085\u3046', '\u3051\u3093\u3059\u3046', '\u3051\u3099\u3093\u305D\u3046', '\u3051\u3093\u3061\u304F', '\u3051\u3093\u3066\u3044', '\u3051\u3093\u3068\u3046', '\u3051\u3093\u306A\u3044', '\u3051\u3093\u306B\u3093', '\u3051\u3099\u3093\u3075\u3099\u3064', '\u3051\u3093\u307E', '\u3051\u3093\u307F\u3093', '\u3051\u3093\u3081\u3044', '\u3051\u3093\u3089\u3093', '\u3051\u3093\u308A', '\u3053\u3042\u304F\u307E', '\u3053\u3044\u306C', '\u3053\u3044\u3072\u3099\u3068', '\u3053\u3099\u3046\u3044', '\u3053\u3046\u3048\u3093', '\u3053\u3046\u304A\u3093', '\u3053\u3046\u304B\u3093', '\u3053\u3099\u3046\u304D\u3085\u3046', '\u3053\u3099\u3046\u3051\u3044', '\u3053\u3046\u3053\u3046', '\u3053\u3046\u3055\u3044', '\u3053\u3046\u3057\u3099', '\u3053\u3046\u3059\u3044', '\u3053\u3099\u3046\u305B\u3044', '\u3053\u3046\u305D\u304F', '\u3053\u3046\u305F\u3044', '\u3053\u3046\u3061\u3083', '\u3053\u3046\u3064\u3046', '\u3053\u3046\u3066\u3044', '\u3053\u3046\u3068\u3099\u3046', '\u3053\u3046\u306A\u3044', '\u3053\u3046\u306F\u3044', '\u3053\u3099\u3046\u307B\u3046', '\u3053\u3099\u3046\u307E\u3093', '\u3053\u3046\u3082\u304F', '\u3053\u3046\u308A\u3064', '\u3053\u3048\u308B', '\u3053\u304A\u308A', '\u3053\u3099\u304B\u3044', '\u3053\u3099\u304B\u3099\u3064', '\u3053\u3099\u304B\u3093', '\u3053\u304F\u3053\u3099', '\u3053\u304F\u3055\u3044', '\u3053\u304F\u3068\u3046', '\u3053\u304F\u306A\u3044', '\u3053\u304F\u306F\u304F', '\u3053\u304F\u3099\u307E', '\u3053\u3051\u3044', '\u3053\u3051\u308B', '\u3053\u3053\u306E\u304B', '\u3053\u3053\u308D', '\u3053\u3055\u3081', '\u3053\u3057\u3064', '\u3053\u3059\u3046', '\u3053\u305B\u3044', '\u3053\u305B\u304D', '\u3053\u305B\u3099\u3093', '\u3053\u305D\u305F\u3099\u3066', '\u3053\u305F\u3044', '\u3053\u305F\u3048\u308B', '\u3053\u305F\u3064', '\u3053\u3061\u3087\u3046', '\u3053\u3063\u304B', '\u3053\u3064\u3053\u3064', '\u3053\u3064\u306F\u3099\u3093', '\u3053\u3064\u3075\u3099', '\u3053\u3066\u3044', '\u3053\u3066\u3093', '\u3053\u3068\u304B\u3099\u3089', '\u3053\u3068\u3057', '\u3053\u3068\u306F\u3099', '\u3053\u3068\u308A', '\u3053\u306A\u3053\u3099\u306A', '\u3053\u306D\u3053\u306D', '\u3053\u306E\u307E\u307E', '\u3053\u306E\u307F', '\u3053\u306E\u3088', '\u3053\u3099\u306F\u3093', '\u3053\u3072\u3064\u3057\u3099', '\u3053\u3075\u3046', '\u3053\u3075\u3093', '\u3053\u307B\u3099\u308C\u308B', '\u3053\u3099\u307E\u3042\u3075\u3099\u3089', '\u3053\u307E\u304B\u3044', '\u3053\u3099\u307E\u3059\u308A', '\u3053\u307E\u3064\u306A', '\u3053\u307E\u308B', '\u3053\u3080\u304D\u3099\u3053', '\u3053\u3082\u3057\u3099', '\u3053\u3082\u3061', '\u3053\u3082\u306E', '\u3053\u3082\u3093', '\u3053\u3084\u304F', '\u3053\u3084\u307E', '\u3053\u3086\u3046', '\u3053\u3086\u3072\u3099', '\u3053\u3088\u3044', '\u3053\u3088\u3046', '\u3053\u308A\u308B', '\u3053\u308C\u304F\u3057\u3087\u3093', '\u3053\u308D\u3063\u3051', '\u3053\u308F\u3082\u3066', '\u3053\u308F\u308C\u308B', '\u3053\u3093\u3044\u3093', '\u3053\u3093\u304B\u3044', '\u3053\u3093\u304D', '\u3053\u3093\u3057\u3085\u3046', '\u3053\u3093\u3059\u3044', '\u3053\u3093\u305F\u3099\u3066', '\u3053\u3093\u3068\u3093', '\u3053\u3093\u306A\u3093', '\u3053\u3093\u3072\u3099\u306B', '\u3053\u3093\u307B\u309A\u3093', '\u3053\u3093\u307E\u3051', '\u3053\u3093\u3084', '\u3053\u3093\u308C\u3044', '\u3053\u3093\u308F\u304F', '\u3055\u3099\u3044\u3048\u304D', '\u3055\u3044\u304B\u3044', '\u3055\u3044\u304D\u3093', '\u3055\u3099\u3044\u3051\u3099\u3093', '\u3055\u3099\u3044\u3053', '\u3055\u3044\u3057\u3087', '\u3055\u3044\u305B\u3044', '\u3055\u3099\u3044\u305F\u304F', '\u3055\u3099\u3044\u3061\u3085\u3046', '\u3055\u3044\u3066\u304D', '\u3055\u3099\u3044\u308A\u3087\u3046', '\u3055\u3046\u306A', '\u3055\u304B\u3044\u3057', '\u3055\u304B\u3099\u3059', '\u3055\u304B\u306A', '\u3055\u304B\u307F\u3061', '\u3055\u304B\u3099\u308B', '\u3055\u304D\u3099\u3087\u3046', '\u3055\u304F\u3057', '\u3055\u304F\u3072\u3093', '\u3055\u304F\u3089', '\u3055\u3053\u304F', '\u3055\u3053\u3064', '\u3055\u3059\u3099\u304B\u308B', '\u3055\u3099\u305B\u304D', '\u3055\u305F\u3093', '\u3055\u3064\u3048\u3044', '\u3055\u3099\u3064\u304A\u3093', '\u3055\u3099\u3063\u304B', '\u3055\u3099\u3064\u304B\u3099\u304F', '\u3055\u3063\u304D\u3087\u304F', '\u3055\u3099\u3063\u3057', '\u3055\u3064\u3057\u3099\u3093', '\u3055\u3099\u3063\u305D\u3046', '\u3055\u3064\u305F\u306F\u3099', '\u3055\u3064\u307E\u3044\u3082', '\u3055\u3066\u3044', '\u3055\u3068\u3044\u3082', '\u3055\u3068\u3046', '\u3055\u3068\u304A\u3084', '\u3055\u3068\u3057', '\u3055\u3068\u308B', '\u3055\u306E\u3046', '\u3055\u306F\u3099\u304F', '\u3055\u3072\u3099\u3057\u3044', '\u3055\u3078\u3099\u3064', '\u3055\u307B\u3046', '\u3055\u307B\u3068\u3099', '\u3055\u307E\u3059', '\u3055\u307F\u3057\u3044', '\u3055\u307F\u305F\u3099\u308C', '\u3055\u3080\u3051', '\u3055\u3081\u308B', '\u3055\u3084\u3048\u3093\u3068\u3099\u3046', '\u3055\u3086\u3046', '\u3055\u3088\u3046', '\u3055\u3088\u304F', '\u3055\u3089\u305F\u3099', '\u3055\u3099\u308B\u305D\u306F\u3099', '\u3055\u308F\u3084\u304B', '\u3055\u308F\u308B', '\u3055\u3093\u3044\u3093', '\u3055\u3093\u304B', '\u3055\u3093\u304D\u3083\u304F', '\u3055\u3093\u3053\u3046', '\u3055\u3093\u3055\u3044', '\u3055\u3099\u3093\u3057\u3087', '\u3055\u3093\u3059\u3046', '\u3055\u3093\u305B\u3044', '\u3055\u3093\u305D', '\u3055\u3093\u3061', '\u3055\u3093\u307E', '\u3055\u3093\u307F', '\u3055\u3093\u3089\u3093', '\u3057\u3042\u3044', '\u3057\u3042\u3051\u3099', '\u3057\u3042\u3055\u3063\u3066', '\u3057\u3042\u308F\u305B', '\u3057\u3044\u304F', '\u3057\u3044\u3093', '\u3057\u3046\u3061', '\u3057\u3048\u3044', '\u3057\u304A\u3051', '\u3057\u304B\u3044', '\u3057\u304B\u304F', '\u3057\u3099\u304B\u3093', '\u3057\u3053\u3099\u3068', '\u3057\u3059\u3046', '\u3057\u3099\u305F\u3099\u3044', '\u3057\u305F\u3046\u3051', '\u3057\u305F\u304D\u3099', '\u3057\u305F\u3066', '\u3057\u305F\u307F', '\u3057\u3061\u3087\u3046', '\u3057\u3061\u308A\u3093', '\u3057\u3063\u304B\u308A', '\u3057\u3064\u3057\u3099', '\u3057\u3064\u3082\u3093', '\u3057\u3066\u3044', '\u3057\u3066\u304D', '\u3057\u3066\u3064', '\u3057\u3099\u3066\u3093', '\u3057\u3099\u3068\u3099\u3046', '\u3057\u306A\u304D\u3099\u308C', '\u3057\u306A\u3082\u306E', '\u3057\u306A\u3093', '\u3057\u306D\u307E', '\u3057\u306D\u3093', '\u3057\u306E\u304F\u3099', '\u3057\u306E\u3075\u3099', '\u3057\u306F\u3044', '\u3057\u306F\u3099\u304B\u308A', '\u3057\u306F\u3064', '\u3057\u306F\u3089\u3044', '\u3057\u306F\u3093', '\u3057\u3072\u3087\u3046', '\u3057\u3075\u304F', '\u3057\u3099\u3075\u3099\u3093', '\u3057\u3078\u3044', '\u3057\u307B\u3046', '\u3057\u307B\u3093', '\u3057\u307E\u3046', '\u3057\u307E\u308B', '\u3057\u307F\u3093', '\u3057\u3080\u3051\u308B', '\u3057\u3099\u3080\u3057\u3087', '\u3057\u3081\u3044', '\u3057\u3081\u308B', '\u3057\u3082\u3093', '\u3057\u3083\u3044\u3093', '\u3057\u3083\u3046\u3093', '\u3057\u3083\u304A\u3093', '\u3057\u3099\u3083\u304B\u3099\u3044\u3082', '\u3057\u3084\u304F\u3057\u3087', '\u3057\u3083\u304F\u307B\u3046', '\u3057\u3083\u3051\u3093', '\u3057\u3083\u3053', '\u3057\u3083\u3055\u3099\u3044', '\u3057\u3083\u3057\u3093', '\u3057\u3083\u305B\u3093', '\u3057\u3083\u305D\u3046', '\u3057\u3083\u305F\u3044', '\u3057\u3083\u3061\u3087\u3046', '\u3057\u3083\u3063\u304D\u3093', '\u3057\u3099\u3083\u307E', '\u3057\u3083\u308A\u3093', '\u3057\u3083\u308C\u3044', '\u3057\u3099\u3086\u3046', '\u3057\u3099\u3085\u3046\u3057\u3087', '\u3057\u3085\u304F\u306F\u304F', '\u3057\u3099\u3085\u3057\u3093', '\u3057\u3085\u3063\u305B\u304D', '\u3057\u3085\u307F', '\u3057\u3085\u3089\u306F\u3099', '\u3057\u3099\u3085\u3093\u306F\u3099\u3093', '\u3057\u3087\u3046\u304B\u3044', '\u3057\u3087\u304F\u305F\u304F', '\u3057\u3087\u3063\u3051\u3093', '\u3057\u3087\u3068\u3099\u3046', '\u3057\u3087\u3082\u3064', '\u3057\u3089\u305B\u308B', '\u3057\u3089\u3078\u3099\u308B', '\u3057\u3093\u304B', '\u3057\u3093\u3053\u3046', '\u3057\u3099\u3093\u3057\u3099\u3083', '\u3057\u3093\u305B\u3044\u3057\u3099', '\u3057\u3093\u3061\u304F', '\u3057\u3093\u308A\u3093', '\u3059\u3042\u3051\u3099', '\u3059\u3042\u3057', '\u3059\u3042\u306A', '\u3059\u3099\u3042\u3093', '\u3059\u3044\u3048\u3044', '\u3059\u3044\u304B', '\u3059\u3044\u3068\u3046', '\u3059\u3099\u3044\u3075\u3099\u3093', '\u3059\u3044\u3088\u3046\u3072\u3099', '\u3059\u3046\u304B\u3099\u304F', '\u3059\u3046\u3057\u3099\u3064', '\u3059\u3046\u305B\u3093', '\u3059\u304A\u3068\u3099\u308A', '\u3059\u304D\u307E', '\u3059\u304F\u3046', '\u3059\u304F\u306A\u3044', '\u3059\u3051\u308B', '\u3059\u3053\u3099\u3044', '\u3059\u3053\u3057', '\u3059\u3099\u3055\u3093', '\u3059\u3059\u3099\u3057\u3044', '\u3059\u3059\u3080', '\u3059\u3059\u3081\u308B', '\u3059\u3063\u304B\u308A', '\u3059\u3099\u3063\u3057\u308A', '\u3059\u3099\u3063\u3068', '\u3059\u3066\u304D', '\u3059\u3066\u308B', '\u3059\u306D\u308B', '\u3059\u306E\u3053', '\u3059\u306F\u305F\u3099', '\u3059\u306F\u3099\u3089\u3057\u3044', '\u3059\u3099\u3072\u3087\u3046', '\u3059\u3099\u3075\u3099\u306C\u308C', '\u3059\u3075\u3099\u308A', '\u3059\u3075\u308C', '\u3059\u3078\u3099\u3066', '\u3059\u3078\u3099\u308B', '\u3059\u3099\u307B\u3046', '\u3059\u307B\u3099\u3093', '\u3059\u307E\u3044', '\u3059\u3081\u3057', '\u3059\u3082\u3046', '\u3059\u3084\u304D', '\u3059\u3089\u3059\u3089', '\u3059\u308B\u3081', '\u3059\u308C\u3061\u304B\u3099\u3046', '\u3059\u308D\u3063\u3068', '\u3059\u308F\u308B', '\u3059\u3093\u305B\u3099\u3093', '\u3059\u3093\u307B\u309A\u3046', '\u305B\u3042\u3075\u3099\u3089', '\u305B\u3044\u304B\u3064', '\u305B\u3044\u3051\u3099\u3093', '\u305B\u3044\u3057\u3099', '\u305B\u3044\u3088\u3046', '\u305B\u304A\u3046', '\u305B\u304B\u3044\u304B\u3093', '\u305B\u304D\u306B\u3093', '\u305B\u304D\u3080', '\u305B\u304D\u3086', '\u305B\u304D\u3089\u3093\u3046\u3093', '\u305B\u3051\u3093', '\u305B\u3053\u3046', '\u305B\u3059\u3057\u3099', '\u305B\u305F\u3044', '\u305B\u305F\u3051', '\u305B\u3063\u304B\u304F', '\u305B\u3063\u304D\u3083\u304F', '\u305B\u3099\u3063\u304F', '\u305B\u3063\u3051\u3093', '\u305B\u3063\u3053\u3064', '\u305B\u3063\u3055\u305F\u304F\u307E', '\u305B\u3064\u305D\u3099\u304F', '\u305B\u3064\u305F\u3099\u3093', '\u305B\u3064\u3066\u3099\u3093', '\u305B\u3063\u306F\u309A\u3093', '\u305B\u3064\u3072\u3099', '\u305B\u3064\u3075\u3099\u3093', '\u305B\u3064\u3081\u3044', '\u305B\u3064\u308A\u3064', '\u305B\u306A\u304B', '\u305B\u306E\u3072\u3099', '\u305B\u306F\u306F\u3099', '\u305B\u3072\u3099\u308D', '\u305B\u307B\u3099\u306D', '\u305B\u307E\u3044', '\u305B\u307E\u308B', '\u305B\u3081\u308B', '\u305B\u3082\u305F\u308C', '\u305B\u308A\u3075', '\u305B\u3099\u3093\u3042\u304F', '\u305B\u3093\u3044', '\u305B\u3093\u3048\u3044', '\u305B\u3093\u304B', '\u305B\u3093\u304D\u3087', '\u305B\u3093\u304F', '\u305B\u3093\u3051\u3099\u3093', '\u305B\u3099\u3093\u3053\u3099', '\u305B\u3093\u3055\u3044', '\u305B\u3093\u3057\u3085', '\u305B\u3093\u3059\u3044', '\u305B\u3093\u305B\u3044', '\u305B\u3093\u305D\u3099', '\u305B\u3093\u305F\u304F', '\u305B\u3093\u3061\u3087\u3046', '\u305B\u3093\u3066\u3044', '\u305B\u3093\u3068\u3046', '\u305B\u3093\u306C\u304D', '\u305B\u3093\u306D\u3093', '\u305B\u3093\u306F\u309A\u3044', '\u305B\u3099\u3093\u3075\u3099', '\u305B\u3099\u3093\u307B\u309A\u3046', '\u305B\u3093\u3080', '\u305B\u3093\u3081\u3093\u3057\u3099\u3087', '\u305B\u3093\u3082\u3093', '\u305B\u3093\u3084\u304F', '\u305B\u3093\u3086\u3046', '\u305B\u3093\u3088\u3046', '\u305B\u3099\u3093\u3089', '\u305B\u3099\u3093\u308A\u3083\u304F', '\u305B\u3093\u308C\u3044', '\u305B\u3093\u308D', '\u305D\u3042\u304F', '\u305D\u3044\u3068\u3051\u3099\u308B', '\u305D\u3044\u306D', '\u305D\u3046\u304B\u3099\u3093\u304D\u3087\u3046', '\u305D\u3046\u304D', '\u305D\u3046\u3053\u3099', '\u305D\u3046\u3057\u3093', '\u305D\u3046\u305F\u3099\u3093', '\u305D\u3046\u306A\u3093', '\u305D\u3046\u3072\u3099', '\u305D\u3046\u3081\u3093', '\u305D\u3046\u308A', '\u305D\u3048\u3082\u306E', '\u305D\u3048\u3093', '\u305D\u304B\u3099\u3044', '\u305D\u3051\u3099\u304D', '\u305D\u3053\u3046', '\u305D\u3053\u305D\u3053', '\u305D\u3055\u3099\u3044', '\u305D\u3057\u306A', '\u305D\u305B\u3044', '\u305D\u305B\u3093', '\u305D\u305D\u304F\u3099', '\u305D\u305F\u3099\u3066\u308B', '\u305D\u3064\u3046', '\u305D\u3064\u3048\u3093', '\u305D\u3063\u304B\u3093', '\u305D\u3064\u304D\u3099\u3087\u3046', '\u305D\u3063\u3051\u3064', '\u305D\u3063\u3053\u3046', '\u305D\u3063\u305B\u3093', '\u305D\u3063\u3068', '\u305D\u3068\u304B\u3099\u308F', '\u305D\u3068\u3064\u3099\u3089', '\u305D\u306A\u3048\u308B', '\u305D\u306A\u305F', '\u305D\u3075\u307B\u3099', '\u305D\u307B\u3099\u304F', '\u305D\u307B\u3099\u308D', '\u305D\u307E\u3064', '\u305D\u307E\u308B', '\u305D\u3080\u304F', '\u305D\u3080\u308A\u3048', '\u305D\u3081\u308B', '\u305D\u3082\u305D\u3082', '\u305D\u3088\u304B\u305B\u3099', '\u305D\u3089\u307E\u3081', '\u305D\u308D\u3046', '\u305D\u3093\u304B\u3044', '\u305D\u3093\u3051\u3044', '\u305D\u3093\u3055\u3099\u3044', '\u305D\u3093\u3057\u3064', '\u305D\u3093\u305D\u3099\u304F', '\u305D\u3093\u3061\u3087\u3046', '\u305D\u3099\u3093\u3072\u3099', '\u305D\u3099\u3093\u3075\u3099\u3093', '\u305D\u3093\u307F\u3093', '\u305F\u3042\u3044', '\u305F\u3044\u3044\u3093', '\u305F\u3044\u3046\u3093', '\u305F\u3044\u3048\u304D', '\u305F\u3044\u304A\u3046', '\u305F\u3099\u3044\u304B\u3099\u304F', '\u305F\u3044\u304D', '\u305F\u3044\u304F\u3099\u3046', '\u305F\u3044\u3051\u3093', '\u305F\u3044\u3053', '\u305F\u3044\u3055\u3099\u3044', '\u305F\u3099\u3044\u3057\u3099\u3087\u3046\u3075\u3099', '\u305F\u3099\u3044\u3059\u304D', '\u305F\u3044\u305B\u3064', '\u305F\u3044\u305D\u3046', '\u305F\u3099\u3044\u305F\u3044', '\u305F\u3044\u3061\u3087\u3046', '\u305F\u3044\u3066\u3044', '\u305F\u3099\u3044\u3068\u3099\u3053\u308D', '\u305F\u3044\u306A\u3044', '\u305F\u3044\u306D\u3064', '\u305F\u3044\u306E\u3046', '\u305F\u3044\u306F\u3093', '\u305F\u3099\u3044\u3072\u3087\u3046', '\u305F\u3044\u3075\u3046', '\u305F\u3044\u3078\u3093', '\u305F\u3044\u307B', '\u305F\u3044\u307E\u3064\u306F\u3099\u306A', '\u305F\u3044\u307F\u3093\u304F\u3099', '\u305F\u3044\u3080', '\u305F\u3044\u3081\u3093', '\u305F\u3044\u3084\u304D', '\u305F\u3044\u3088\u3046', '\u305F\u3044\u3089', '\u305F\u3044\u308A\u3087\u304F', '\u305F\u3044\u308B', '\u305F\u3044\u308F\u3093', '\u305F\u3046\u3048', '\u305F\u3048\u308B', '\u305F\u304A\u3059', '\u305F\u304A\u308B', '\u305F\u304A\u308C\u308B', '\u305F\u304B\u3044', '\u305F\u304B\u306D', '\u305F\u304D\u3072\u3099', '\u305F\u304F\u3055\u3093', '\u305F\u3053\u304F', '\u305F\u3053\u3084\u304D', '\u305F\u3055\u3044', '\u305F\u3057\u3055\u3099\u3093', '\u305F\u3099\u3057\u3099\u3083\u308C', '\u305F\u3059\u3051\u308B', '\u305F\u3059\u3099\u3055\u308F\u308B', '\u305F\u305D\u304B\u3099\u308C', '\u305F\u305F\u304B\u3046', '\u305F\u305F\u304F', '\u305F\u305F\u3099\u3057\u3044', '\u305F\u305F\u307F', '\u305F\u3061\u306F\u3099\u306A', '\u305F\u3099\u3063\u304B\u3044', '\u305F\u3099\u3063\u304D\u3083\u304F', '\u305F\u3099\u3063\u3053', '\u305F\u3099\u3063\u3057\u3085\u3064', '\u305F\u3099\u3063\u305F\u3044', '\u305F\u3066\u308B', '\u305F\u3068\u3048\u308B', '\u305F\u306A\u306F\u3099\u305F', '\u305F\u306B\u3093', '\u305F\u306C\u304D', '\u305F\u306E\u3057\u307F', '\u305F\u306F\u3064', '\u305F\u3075\u3099\u3093', '\u305F\u3078\u3099\u308B', '\u305F\u307B\u3099\u3046', '\u305F\u307E\u3053\u3099', '\u305F\u307E\u308B', '\u305F\u3099\u3080\u308B', '\u305F\u3081\u3044\u304D', '\u305F\u3081\u3059', '\u305F\u3081\u308B', '\u305F\u3082\u3064', '\u305F\u3084\u3059\u3044', '\u305F\u3088\u308B', '\u305F\u3089\u3059', '\u305F\u308A\u304D\u307B\u3093\u304B\u3099\u3093', '\u305F\u308A\u3087\u3046', '\u305F\u308A\u308B', '\u305F\u308B\u3068', '\u305F\u308C\u308B', '\u305F\u308C\u3093\u3068', '\u305F\u308D\u3063\u3068', '\u305F\u308F\u3080\u308C\u308B', '\u305F\u3099\u3093\u3042\u3064', '\u305F\u3093\u3044', '\u305F\u3093\u304A\u3093', '\u305F\u3093\u304B', '\u305F\u3093\u304D', '\u305F\u3093\u3051\u3093', '\u305F\u3093\u3053\u3099', '\u305F\u3093\u3055\u3093', '\u305F\u3093\u3057\u3099\u3087\u3046\u3072\u3099', '\u305F\u3099\u3093\u305B\u3044', '\u305F\u3093\u305D\u304F', '\u305F\u3093\u305F\u3044', '\u305F\u3099\u3093\u3061', '\u305F\u3093\u3066\u3044', '\u305F\u3093\u3068\u3046', '\u305F\u3099\u3093\u306A', '\u305F\u3093\u306B\u3093', '\u305F\u3099\u3093\u306D\u3064', '\u305F\u3093\u306E\u3046', '\u305F\u3093\u3072\u309A\u3093', '\u305F\u3099\u3093\u307B\u3099\u3046', '\u305F\u3093\u307E\u3064', '\u305F\u3093\u3081\u3044', '\u305F\u3099\u3093\u308C\u3064', '\u305F\u3099\u3093\u308D', '\u305F\u3099\u3093\u308F', '\u3061\u3042\u3044', '\u3061\u3042\u3093', '\u3061\u3044\u304D', '\u3061\u3044\u3055\u3044', '\u3061\u3048\u3093', '\u3061\u304B\u3044', '\u3061\u304B\u3089', '\u3061\u304D\u3085\u3046', '\u3061\u304D\u3093', '\u3061\u3051\u3044\u3059\u3099', '\u3061\u3051\u3093', '\u3061\u3053\u304F', '\u3061\u3055\u3044', '\u3061\u3057\u304D', '\u3061\u3057\u308A\u3087\u3046', '\u3061\u305B\u3044', '\u3061\u305D\u3046', '\u3061\u305F\u3044', '\u3061\u305F\u3093', '\u3061\u3061\u304A\u3084', '\u3061\u3064\u3057\u3099\u3087', '\u3061\u3066\u304D', '\u3061\u3066\u3093', '\u3061\u306C\u304D', '\u3061\u306C\u308A', '\u3061\u306E\u3046', '\u3061\u3072\u3087\u3046', '\u3061\u3078\u3044\u305B\u3093', '\u3061\u307B\u3046', '\u3061\u307E\u305F', '\u3061\u307F\u3064', '\u3061\u307F\u3068\u3099\u308D', '\u3061\u3081\u3044\u3068\u3099', '\u3061\u3083\u3093\u3053\u306A\u3078\u3099', '\u3061\u3085\u3046\u3044', '\u3061\u3086\u308A\u3087\u304F', '\u3061\u3087\u3046\u3057', '\u3061\u3087\u3055\u304F\u3051\u3093', '\u3061\u3089\u3057', '\u3061\u3089\u307F', '\u3061\u308A\u304B\u3099\u307F', '\u3061\u308A\u3087\u3046', '\u3061\u308B\u3068\u3099', '\u3061\u308F\u308F', '\u3061\u3093\u305F\u3044', '\u3061\u3093\u3082\u304F', '\u3064\u3044\u304B', '\u3064\u3044\u305F\u3061', '\u3064\u3046\u304B', '\u3064\u3046\u3057\u3099\u3087\u3046', '\u3064\u3046\u306F\u3093', '\u3064\u3046\u308F', '\u3064\u304B\u3046', '\u3064\u304B\u308C\u308B', '\u3064\u304F\u306D', '\u3064\u304F\u308B', '\u3064\u3051\u306D', '\u3064\u3051\u308B', '\u3064\u3053\u3099\u3046', '\u3064\u305F\u3048\u308B', '\u3064\u3064\u3099\u304F', '\u3064\u3064\u3057\u3099', '\u3064\u3064\u3080', '\u3064\u3068\u3081\u308B', '\u3064\u306A\u304B\u3099\u308B', '\u3064\u306A\u307F', '\u3064\u306D\u3064\u3099\u306D', '\u3064\u306E\u308B', '\u3064\u3075\u3099\u3059', '\u3064\u307E\u3089\u306A\u3044', '\u3064\u307E\u308B', '\u3064\u307F\u304D', '\u3064\u3081\u305F\u3044', '\u3064\u3082\u308A', '\u3064\u3082\u308B', '\u3064\u3088\u3044', '\u3064\u308B\u307B\u3099', '\u3064\u308B\u307F\u304F', '\u3064\u308F\u3082\u306E', '\u3064\u308F\u308A', '\u3066\u3042\u3057', '\u3066\u3042\u3066', '\u3066\u3042\u307F', '\u3066\u3044\u304A\u3093', '\u3066\u3044\u304B', '\u3066\u3044\u304D', '\u3066\u3044\u3051\u3044', '\u3066\u3044\u3053\u304F', '\u3066\u3044\u3055\u3064', '\u3066\u3044\u3057', '\u3066\u3044\u305B\u3044', '\u3066\u3044\u305F\u3044', '\u3066\u3044\u3068\u3099', '\u3066\u3044\u306D\u3044', '\u3066\u3044\u3072\u3087\u3046', '\u3066\u3044\u3078\u3093', '\u3066\u3044\u307B\u3099\u3046', '\u3066\u3046\u3061', '\u3066\u304A\u304F\u308C', '\u3066\u304D\u3068\u3046', '\u3066\u304F\u3072\u3099', '\u3066\u3099\u3053\u307B\u3099\u3053', '\u3066\u3055\u304D\u3099\u3087\u3046', '\u3066\u3055\u3051\u3099', '\u3066\u3059\u308A', '\u3066\u305D\u3046', '\u3066\u3061\u304B\u3099\u3044', '\u3066\u3061\u3087\u3046', '\u3066\u3064\u304B\u3099\u304F', '\u3066\u3064\u3064\u3099\u304D', '\u3066\u3099\u3063\u306F\u309A', '\u3066\u3064\u307B\u3099\u3046', '\u3066\u3064\u3084', '\u3066\u3099\u306C\u304B\u3048', '\u3066\u306C\u304D', '\u3066\u306C\u304F\u3099\u3044', '\u3066\u306E\u3072\u3089', '\u3066\u306F\u3044', '\u3066\u3075\u3099\u304F\u308D', '\u3066\u3075\u305F\u3099', '\u3066\u307B\u3068\u3099\u304D', '\u3066\u307B\u3093', '\u3066\u307E\u3048', '\u3066\u307E\u304D\u3059\u3099\u3057', '\u3066\u307F\u3057\u3099\u304B', '\u3066\u307F\u3084\u3051\u3099', '\u3066\u3089\u3059', '\u3066\u308C\u3072\u3099', '\u3066\u308F\u3051', '\u3066\u308F\u305F\u3057', '\u3066\u3099\u3093\u3042\u3064', '\u3066\u3093\u3044\u3093', '\u3066\u3093\u304B\u3044', '\u3066\u3093\u304D', '\u3066\u3093\u304F\u3099', '\u3066\u3093\u3051\u3093', '\u3066\u3093\u3053\u3099\u304F', '\u3066\u3093\u3055\u3044', '\u3066\u3093\u3057', '\u3066\u3093\u3059\u3046', '\u3066\u3099\u3093\u3061', '\u3066\u3093\u3066\u304D', '\u3066\u3093\u3068\u3046', '\u3066\u3093\u306A\u3044', '\u3066\u3093\u3075\u309A\u3089', '\u3066\u3093\u307B\u3099\u3046\u305F\u3099\u3044', '\u3066\u3093\u3081\u3064', '\u3066\u3093\u3089\u3093\u304B\u3044', '\u3066\u3099\u3093\u308A\u3087\u304F', '\u3066\u3099\u3093\u308F', '\u3068\u3099\u3042\u3044', '\u3068\u3044\u308C', '\u3068\u3099\u3046\u304B\u3093', '\u3068\u3046\u304D\u3085\u3046', '\u3068\u3099\u3046\u304F\u3099', '\u3068\u3046\u3057', '\u3068\u3046\u3080\u304D\u3099', '\u3068\u304A\u3044', '\u3068\u304A\u304B', '\u3068\u304A\u304F', '\u3068\u304A\u3059', '\u3068\u304A\u308B', '\u3068\u304B\u3044', '\u3068\u304B\u3059', '\u3068\u304D\u304A\u308A', '\u3068\u304D\u3068\u3099\u304D', '\u3068\u304F\u3044', '\u3068\u304F\u3057\u3085\u3046', '\u3068\u304F\u3066\u3093', '\u3068\u304F\u306B', '\u3068\u304F\u3078\u3099\u3064', '\u3068\u3051\u3044', '\u3068\u3051\u308B', '\u3068\u3053\u3084', '\u3068\u3055\u304B', '\u3068\u3057\u3087\u304B\u3093', '\u3068\u305D\u3046', '\u3068\u305F\u3093', '\u3068\u3061\u3085\u3046', '\u3068\u3063\u304D\u3085\u3046', '\u3068\u3063\u304F\u3093', '\u3068\u3064\u305B\u3099\u3093', '\u3068\u3064\u306B\u3085\u3046', '\u3068\u3068\u3099\u3051\u308B', '\u3068\u3068\u306E\u3048\u308B', '\u3068\u306A\u3044', '\u3068\u306A\u3048\u308B', '\u3068\u306A\u308A', '\u3068\u306E\u3055\u307E', '\u3068\u306F\u3099\u3059', '\u3068\u3099\u3075\u3099\u304B\u3099\u308F', '\u3068\u307B\u3046', '\u3068\u307E\u308B', '\u3068\u3081\u308B', '\u3068\u3082\u305F\u3099\u3061', '\u3068\u3082\u308B', '\u3068\u3099\u3088\u3046\u3072\u3099', '\u3068\u3089\u3048\u308B', '\u3068\u3093\u304B\u3064', '\u3068\u3099\u3093\u3075\u3099\u308A', '\u306A\u3044\u304B\u304F', '\u306A\u3044\u3053\u3046', '\u306A\u3044\u3057\u3087', '\u306A\u3044\u3059', '\u306A\u3044\u305B\u3093', '\u306A\u3044\u305D\u3046', '\u306A\u304A\u3059', '\u306A\u304B\u3099\u3044', '\u306A\u304F\u3059', '\u306A\u3051\u3099\u308B', '\u306A\u3053\u3046\u3068\u3099', '\u306A\u3055\u3051', '\u306A\u305F\u3066\u3099\u3053\u3053', '\u306A\u3063\u3068\u3046', '\u306A\u3064\u3084\u3059\u307F', '\u306A\u306A\u304A\u3057', '\u306A\u306B\u3053\u3099\u3068', '\u306A\u306B\u3082\u306E', '\u306A\u306B\u308F', '\u306A\u306E\u304B', '\u306A\u3075\u305F\u3099', '\u306A\u307E\u3044\u304D', '\u306A\u307E\u3048', '\u306A\u307E\u307F', '\u306A\u307F\u305F\u3099', '\u306A\u3081\u3089\u304B', '\u306A\u3081\u308B', '\u306A\u3084\u3080', '\u306A\u3089\u3046', '\u306A\u3089\u3072\u3099', '\u306A\u3089\u3075\u3099', '\u306A\u308C\u308B', '\u306A\u308F\u3068\u3072\u3099', '\u306A\u308F\u306F\u3099\u308A', '\u306B\u3042\u3046', '\u306B\u3044\u304B\u3099\u305F', '\u306B\u3046\u3051', '\u306B\u304A\u3044', '\u306B\u304B\u3044', '\u306B\u304B\u3099\u3066', '\u306B\u304D\u3072\u3099', '\u306B\u304F\u3057\u307F', '\u306B\u304F\u307E\u3093', '\u306B\u3051\u3099\u308B', '\u306B\u3055\u3093\u304B\u305F\u3093\u305D', '\u306B\u3057\u304D', '\u306B\u305B\u3082\u306E', '\u306B\u3061\u3057\u3099\u3087\u3046', '\u306B\u3061\u3088\u3046\u3072\u3099', '\u306B\u3063\u304B', '\u306B\u3063\u304D', '\u306B\u3063\u3051\u3044', '\u306B\u3063\u3053\u3046', '\u306B\u3063\u3055\u3093', '\u306B\u3063\u3057\u3087\u304F', '\u306B\u3063\u3059\u3046', '\u306B\u3063\u305B\u304D', '\u306B\u3063\u3066\u3044', '\u306B\u306A\u3046', '\u306B\u307B\u3093', '\u306B\u307E\u3081', '\u306B\u3082\u3064', '\u306B\u3084\u308A', '\u306B\u3085\u3046\u3044\u3093', '\u306B\u308A\u3093\u3057\u3083', '\u306B\u308F\u3068\u308A', '\u306B\u3093\u3044', '\u306B\u3093\u304B', '\u306B\u3093\u304D', '\u306B\u3093\u3051\u3099\u3093', '\u306B\u3093\u3057\u304D', '\u306B\u3093\u3059\u3099\u3046', '\u306B\u3093\u305D\u3046', '\u306B\u3093\u305F\u3044', '\u306B\u3093\u3061', '\u306B\u3093\u3066\u3044', '\u306B\u3093\u306B\u304F', '\u306B\u3093\u3075\u309A', '\u306B\u3093\u307E\u308A', '\u306B\u3093\u3080', '\u306B\u3093\u3081\u3044', '\u306B\u3093\u3088\u3046', '\u306C\u3044\u304F\u304D\u3099', '\u306C\u304B\u3059', '\u306C\u304F\u3099\u3044\u3068\u308B', '\u306C\u304F\u3099\u3046', '\u306C\u304F\u3082\u308A', '\u306C\u3059\u3080', '\u306C\u307E\u3048\u3072\u3099', '\u306C\u3081\u308A', '\u306C\u3089\u3059', '\u306C\u3093\u3061\u3083\u304F', '\u306D\u3042\u3051\u3099', '\u306D\u3044\u304D', '\u306D\u3044\u308B', '\u306D\u3044\u308D', '\u306D\u304F\u3099\u305B', '\u306D\u304F\u305F\u3044', '\u306D\u304F\u3089', '\u306D\u3053\u305B\u3099', '\u306D\u3053\u3080', '\u306D\u3055\u3051\u3099', '\u306D\u3059\u3053\u3099\u3059', '\u306D\u305D\u3078\u3099\u308B', '\u306D\u305F\u3099\u3093', '\u306D\u3064\u3044', '\u306D\u3063\u3057\u3093', '\u306D\u3064\u305D\u3099\u3046', '\u306D\u3063\u305F\u3044\u304D\u3099\u3087', '\u306D\u3075\u3099\u305D\u304F', '\u306D\u3075\u305F\u3099', '\u306D\u307B\u3099\u3046', '\u306D\u307B\u308A\u306F\u307B\u308A', '\u306D\u307E\u304D', '\u306D\u307E\u308F\u3057', '\u306D\u307F\u307F', '\u306D\u3080\u3044', '\u306D\u3080\u305F\u3044', '\u306D\u3082\u3068', '\u306D\u3089\u3046', '\u306D\u308F\u3055\u3099', '\u306D\u3093\u3044\u308A', '\u306D\u3093\u304A\u3057', '\u306D\u3093\u304B\u3093', '\u306D\u3093\u304D\u3093', '\u306D\u3093\u304F\u3099', '\u306D\u3093\u3055\u3099', '\u306D\u3093\u3057', '\u306D\u3093\u3061\u3083\u304F', '\u306D\u3093\u3068\u3099', '\u306D\u3093\u3072\u309A', '\u306D\u3093\u3075\u3099\u3064', '\u306D\u3093\u307E\u3064', '\u306D\u3093\u308A\u3087\u3046', '\u306D\u3093\u308C\u3044', '\u306E\u3044\u3059\u3099', '\u306E\u304A\u3064\u3099\u307E', '\u306E\u304B\u3099\u3059', '\u306E\u304D\u306A\u307F', '\u306E\u3053\u304D\u3099\u308A', '\u306E\u3053\u3059', '\u306E\u3053\u308B', '\u306E\u305B\u308B', '\u306E\u305D\u3099\u304F', '\u306E\u305D\u3099\u3080', '\u306E\u305F\u307E\u3046', '\u306E\u3061\u307B\u3068\u3099', '\u306E\u3063\u304F', '\u306E\u306F\u3099\u3059', '\u306E\u306F\u3089', '\u306E\u3078\u3099\u308B', '\u306E\u307B\u3099\u308B', '\u306E\u307F\u3082\u306E', '\u306E\u3084\u307E', '\u306E\u3089\u3044\u306C', '\u306E\u3089\u306D\u3053', '\u306E\u308A\u3082\u306E', '\u306E\u308A\u3086\u304D', '\u306E\u308C\u3093', '\u306E\u3093\u304D', '\u306F\u3099\u3042\u3044', '\u306F\u3042\u304F', '\u306F\u3099\u3042\u3055\u3093', '\u306F\u3099\u3044\u304B', '\u306F\u3099\u3044\u304F', '\u306F\u3044\u3051\u3093', '\u306F\u3044\u3053\u3099', '\u306F\u3044\u3057\u3093', '\u306F\u3044\u3059\u3044', '\u306F\u3044\u305B\u3093', '\u306F\u3044\u305D\u3046', '\u306F\u3044\u3061', '\u306F\u3099\u3044\u306F\u3099\u3044', '\u306F\u3044\u308C\u3064', '\u306F\u3048\u308B', '\u306F\u304A\u308B', '\u306F\u304B\u3044', '\u306F\u3099\u304B\u308A', '\u306F\u304B\u308B', '\u306F\u304F\u3057\u3085', '\u306F\u3051\u3093', '\u306F\u3053\u3075\u3099', '\u306F\u3055\u307F', '\u306F\u3055\u3093', '\u306F\u3057\u3053\u3099', '\u306F\u3099\u3057\u3087', '\u306F\u3057\u308B', '\u306F\u305B\u308B', '\u306F\u309A\u305D\u3053\u3093', '\u306F\u305D\u3093', '\u306F\u305F\u3093', '\u306F\u3061\u307F\u3064', '\u306F\u3064\u304A\u3093', '\u306F\u3063\u304B\u304F', '\u306F\u3064\u3099\u304D', '\u306F\u3063\u304D\u308A', '\u306F\u3063\u304F\u3064', '\u306F\u3063\u3051\u3093', '\u306F\u3063\u3053\u3046', '\u306F\u3063\u3055\u3093', '\u306F\u3063\u3057\u3093', '\u306F\u3063\u305F\u3064', '\u306F\u3063\u3061\u3085\u3046', '\u306F\u3063\u3066\u3093', '\u306F\u3063\u3072\u309A\u3087\u3046', '\u306F\u3063\u307B\u309A\u3046', '\u306F\u306A\u3059', '\u306F\u306A\u3072\u3099', '\u306F\u306B\u304B\u3080', '\u306F\u3075\u3099\u3089\u3057', '\u306F\u307F\u304B\u3099\u304D', '\u306F\u3080\u304B\u3046', '\u306F\u3081\u3064', '\u306F\u3084\u3044', '\u306F\u3084\u3057', '\u306F\u3089\u3046', '\u306F\u308D\u3046\u3043\u3093', '\u306F\u308F\u3044', '\u306F\u3093\u3044', '\u306F\u3093\u3048\u3044', '\u306F\u3093\u304A\u3093', '\u306F\u3093\u304B\u304F', '\u306F\u3093\u304D\u3087\u3046', '\u306F\u3099\u3093\u304F\u3099\u307F', '\u306F\u3093\u3053', '\u306F\u3093\u3057\u3083', '\u306F\u3093\u3059\u3046', '\u306F\u3093\u305F\u3099\u3093', '\u306F\u309A\u3093\u3061', '\u306F\u309A\u3093\u3064', '\u306F\u3093\u3066\u3044', '\u306F\u3093\u3068\u3057', '\u306F\u3093\u306E\u3046', '\u306F\u3093\u306F\u309A', '\u306F\u3093\u3075\u3099\u3093', '\u306F\u3093\u3078\u309A\u3093', '\u306F\u3093\u307B\u3099\u3046\u304D', '\u306F\u3093\u3081\u3044', '\u306F\u3093\u3089\u3093', '\u306F\u3093\u308D\u3093', '\u3072\u3044\u304D', '\u3072\u3046\u3093', '\u3072\u3048\u308B', '\u3072\u304B\u304F', '\u3072\u304B\u308A', '\u3072\u304B\u308B', '\u3072\u304B\u3093', '\u3072\u304F\u3044', '\u3072\u3051\u3064', '\u3072\u3053\u3046\u304D', '\u3072\u3053\u304F', '\u3072\u3055\u3044', '\u3072\u3055\u3057\u3075\u3099\u308A', '\u3072\u3055\u3093', '\u3072\u3099\u3057\u3099\u3085\u3064\u304B\u3093', '\u3072\u3057\u3087', '\u3072\u305D\u304B', '\u3072\u305D\u3080', '\u3072\u305F\u3080\u304D', '\u3072\u305F\u3099\u308A', '\u3072\u305F\u308B', '\u3072\u3064\u304D\u3099', '\u3072\u3063\u3053\u3057', '\u3072\u3063\u3057', '\u3072\u3064\u3057\u3099\u3085\u3072\u3093', '\u3072\u3063\u3059', '\u3072\u3064\u305B\u3099\u3093', '\u3072\u309A\u3063\u305F\u308A', '\u3072\u309A\u3063\u3061\u308A', '\u3072\u3064\u3088\u3046', '\u3072\u3066\u3044', '\u3072\u3068\u3053\u3099\u307F', '\u3072\u306A\u307E\u3064\u308A', '\u3072\u306A\u3093', '\u3072\u306D\u308B', '\u3072\u306F\u3093', '\u3072\u3072\u3099\u304F', '\u3072\u3072\u3087\u3046', '\u3072\u307B\u3046', '\u3072\u307E\u308F\u308A', '\u3072\u307E\u3093', '\u3072\u307F\u3064', '\u3072\u3081\u3044', '\u3072\u3081\u3057\u3099\u3057', '\u3072\u3084\u3051', '\u3072\u3084\u3059', '\u3072\u3088\u3046', '\u3072\u3099\u3087\u3046\u304D', '\u3072\u3089\u304B\u3099\u306A', '\u3072\u3089\u304F', '\u3072\u308A\u3064', '\u3072\u308A\u3087\u3046', '\u3072\u308B\u307E', '\u3072\u308B\u3084\u3059\u307F', '\u3072\u308C\u3044', '\u3072\u308D\u3044', '\u3072\u308D\u3046', '\u3072\u308D\u304D', '\u3072\u308D\u3086\u304D', '\u3072\u3093\u304B\u304F', '\u3072\u3093\u3051\u3064', '\u3072\u3093\u3053\u3093', '\u3072\u3093\u3057\u3085', '\u3072\u3093\u305D\u3046', '\u3072\u309A\u3093\u3061', '\u3072\u3093\u306F\u309A\u3093', '\u3072\u3099\u3093\u307B\u3099\u3046', '\u3075\u3042\u3093', '\u3075\u3044\u3046\u3061', '\u3075\u3046\u3051\u3044', '\u3075\u3046\u305B\u3093', '\u3075\u309A\u3046\u305F\u308D\u3046', '\u3075\u3046\u3068\u3046', '\u3075\u3046\u3075', '\u3075\u3048\u308B', '\u3075\u304A\u3093', '\u3075\u304B\u3044', '\u3075\u304D\u3093', '\u3075\u304F\u3055\u3099\u3064', '\u3075\u304F\u3075\u3099\u304F\u308D', '\u3075\u3053\u3046', '\u3075\u3055\u3044', '\u3075\u3057\u304D\u3099', '\u3075\u3057\u3099\u307F', '\u3075\u3059\u307E', '\u3075\u305B\u3044', '\u3075\u305B\u304F\u3099', '\u3075\u305D\u304F', '\u3075\u3099\u305F\u306B\u304F', '\u3075\u305F\u3093', '\u3075\u3061\u3087\u3046', '\u3075\u3064\u3046', '\u3075\u3064\u304B', '\u3075\u3063\u304B\u3064', '\u3075\u3063\u304D', '\u3075\u3063\u3053\u304F', '\u3075\u3099\u3068\u3099\u3046', '\u3075\u3068\u308B', '\u3075\u3068\u3093', '\u3075\u306E\u3046', '\u3075\u306F\u3044', '\u3075\u3072\u3087\u3046', '\u3075\u3078\u3093', '\u3075\u307E\u3093', '\u3075\u307F\u3093', '\u3075\u3081\u3064', '\u3075\u3081\u3093', '\u3075\u3088\u3046', '\u3075\u308A\u3053', '\u3075\u308A\u308B', '\u3075\u308B\u3044', '\u3075\u3093\u3044\u304D', '\u3075\u3099\u3093\u304B\u3099\u304F', '\u3075\u3099\u3093\u304F\u3099', '\u3075\u3093\u3057\u3064', '\u3075\u3099\u3093\u305B\u304D', '\u3075\u3093\u305D\u3046', '\u3075\u3099\u3093\u307B\u309A\u3046', '\u3078\u3044\u3042\u3093', '\u3078\u3044\u304A\u3093', '\u3078\u3044\u304B\u3099\u3044', '\u3078\u3044\u304D', '\u3078\u3044\u3051\u3099\u3093', '\u3078\u3044\u3053\u3046', '\u3078\u3044\u3055', '\u3078\u3044\u3057\u3083', '\u3078\u3044\u305B\u3064', '\u3078\u3044\u305D', '\u3078\u3044\u305F\u304F', '\u3078\u3044\u3066\u3093', '\u3078\u3044\u306D\u3064', '\u3078\u3044\u308F', '\u3078\u304D\u304B\u3099', '\u3078\u3053\u3080', '\u3078\u3099\u306B\u3044\u308D', '\u3078\u3099\u306B\u3057\u3087\u3046\u304B\u3099', '\u3078\u3089\u3059', '\u3078\u3093\u304B\u3093', '\u3078\u3099\u3093\u304D\u3087\u3046', '\u3078\u3099\u3093\u3053\u3099\u3057', '\u3078\u3093\u3055\u3044', '\u3078\u3093\u305F\u3044', '\u3078\u3099\u3093\u308A', '\u307B\u3042\u3093', '\u307B\u3044\u304F', '\u307B\u3099\u3046\u304D\u3099\u3087', '\u307B\u3046\u3053\u304F', '\u307B\u3046\u305D\u3046', '\u307B\u3046\u307B\u3046', '\u307B\u3046\u3082\u3093', '\u307B\u3046\u308A\u3064', '\u307B\u3048\u308B', '\u307B\u304A\u3093', '\u307B\u304B\u3093', '\u307B\u304D\u3087\u3046', '\u307B\u3099\u304D\u3093', '\u307B\u304F\u308D', '\u307B\u3051\u3064', '\u307B\u3051\u3093', '\u307B\u3053\u3046', '\u307B\u3053\u308B', '\u307B\u3057\u3044', '\u307B\u3057\u3064', '\u307B\u3057\u3085', '\u307B\u3057\u3087\u3046', '\u307B\u305B\u3044', '\u307B\u305D\u3044', '\u307B\u305D\u304F', '\u307B\u305F\u3066', '\u307B\u305F\u308B', '\u307B\u309A\u3061\u3075\u3099\u304F\u308D', '\u307B\u3063\u304D\u3087\u304F', '\u307B\u3063\u3055', '\u307B\u3063\u305F\u3093', '\u307B\u3068\u3093\u3068\u3099', '\u307B\u3081\u308B', '\u307B\u3093\u3044', '\u307B\u3093\u304D', '\u307B\u3093\u3051', '\u307B\u3093\u3057\u3064', '\u307B\u3093\u3084\u304F', '\u307E\u3044\u306B\u3061', '\u307E\u304B\u3044', '\u307E\u304B\u305B\u308B', '\u307E\u304B\u3099\u308B', '\u307E\u3051\u308B', '\u307E\u3053\u3068', '\u307E\u3055\u3064', '\u307E\u3057\u3099\u3081', '\u307E\u3059\u304F', '\u307E\u305B\u3099\u308B', '\u307E\u3064\u308A', '\u307E\u3068\u3081', '\u307E\u306A\u3075\u3099', '\u307E\u306C\u3051', '\u307E\u306D\u304F', '\u307E\u307B\u3046', '\u307E\u3082\u308B', '\u307E\u3086\u3051\u3099', '\u307E\u3088\u3046', '\u307E\u308D\u3084\u304B', '\u307E\u308F\u3059', '\u307E\u308F\u308A', '\u307E\u308F\u308B', '\u307E\u3093\u304B\u3099', '\u307E\u3093\u304D\u3064', '\u307E\u3093\u305D\u3099\u304F', '\u307E\u3093\u306A\u304B', '\u307F\u3044\u3089', '\u307F\u3046\u3061', '\u307F\u3048\u308B', '\u307F\u304B\u3099\u304F', '\u307F\u304B\u305F', '\u307F\u304B\u3093', '\u307F\u3051\u3093', '\u307F\u3053\u3093', '\u307F\u3057\u3099\u304B\u3044', '\u307F\u3059\u3044', '\u307F\u3059\u3048\u308B', '\u307F\u305B\u308B', '\u307F\u3063\u304B', '\u307F\u3064\u304B\u308B', '\u307F\u3064\u3051\u308B', '\u307F\u3066\u3044', '\u307F\u3068\u3081\u308B', '\u307F\u306A\u3068', '\u307F\u306A\u307F\u304B\u3055\u3044', '\u307F\u306D\u3089\u308B', '\u307F\u306E\u3046', '\u307F\u306E\u304B\u3099\u3059', '\u307F\u307B\u3093', '\u307F\u3082\u3068', '\u307F\u3084\u3051\u3099', '\u307F\u3089\u3044', '\u307F\u308A\u3087\u304F', '\u307F\u308F\u304F', '\u307F\u3093\u304B', '\u307F\u3093\u305D\u3099\u304F', '\u3080\u3044\u304B', '\u3080\u3048\u304D', '\u3080\u3048\u3093', '\u3080\u304B\u3044', '\u3080\u304B\u3046', '\u3080\u304B\u3048', '\u3080\u304B\u3057', '\u3080\u304D\u3099\u3061\u3083', '\u3080\u3051\u308B', '\u3080\u3051\u3099\u3093', '\u3080\u3055\u307B\u3099\u308B', '\u3080\u3057\u3042\u3064\u3044', '\u3080\u3057\u306F\u3099', '\u3080\u3057\u3099\u3085\u3093', '\u3080\u3057\u308D', '\u3080\u3059\u3046', '\u3080\u3059\u3053', '\u3080\u3059\u3075\u3099', '\u3080\u3059\u3081', '\u3080\u305B\u308B', '\u3080\u305B\u3093', '\u3080\u3061\u3085\u3046', '\u3080\u306A\u3057\u3044', '\u3080\u306E\u3046', '\u3080\u3084\u307F', '\u3080\u3088\u3046', '\u3080\u3089\u3055\u304D', '\u3080\u308A\u3087\u3046', '\u3080\u308D\u3093', '\u3081\u3044\u3042\u3093', '\u3081\u3044\u3046\u3093', '\u3081\u3044\u3048\u3093', '\u3081\u3044\u304B\u304F', '\u3081\u3044\u304D\u3087\u304F', '\u3081\u3044\u3055\u3044', '\u3081\u3044\u3057', '\u3081\u3044\u305D\u3046', '\u3081\u3044\u3075\u3099\u3064', '\u3081\u3044\u308C\u3044', '\u3081\u3044\u308F\u304F', '\u3081\u304F\u3099\u307E\u308C\u308B', '\u3081\u3055\u3099\u3059', '\u3081\u3057\u305F', '\u3081\u3059\u3099\u3089\u3057\u3044', '\u3081\u305F\u3099\u3064', '\u3081\u307E\u3044', '\u3081\u3084\u3059', '\u3081\u3093\u304D\u3087', '\u3081\u3093\u305B\u304D', '\u3081\u3093\u3068\u3099\u3046', '\u3082\u3046\u3057\u3042\u3051\u3099\u308B', '\u3082\u3046\u3068\u3099\u3046\u3051\u3093', '\u3082\u3048\u308B', '\u3082\u304F\u3057', '\u3082\u304F\u3066\u304D', '\u3082\u304F\u3088\u3046\u3072\u3099', '\u3082\u3061\u308D\u3093', '\u3082\u3068\u3099\u308B', '\u3082\u3089\u3046', '\u3082\u3093\u304F', '\u3082\u3093\u305F\u3099\u3044', '\u3084\u304A\u3084', '\u3084\u3051\u308B', '\u3084\u3055\u3044', '\u3084\u3055\u3057\u3044', '\u3084\u3059\u3044', '\u3084\u3059\u305F\u308D\u3046', '\u3084\u3059\u307F', '\u3084\u305B\u308B', '\u3084\u305D\u3046', '\u3084\u305F\u3044', '\u3084\u3061\u3093', '\u3084\u3063\u3068', '\u3084\u3063\u306F\u309A\u308A', '\u3084\u3075\u3099\u308B', '\u3084\u3081\u308B', '\u3084\u3084\u3053\u3057\u3044', '\u3084\u3088\u3044', '\u3084\u308F\u3089\u304B\u3044', '\u3086\u3046\u304D', '\u3086\u3046\u3072\u3099\u3093\u304D\u3087\u304F', '\u3086\u3046\u3078\u3099', '\u3086\u3046\u3081\u3044', '\u3086\u3051\u3064', '\u3086\u3057\u3085\u3064', '\u3086\u305B\u3093', '\u3086\u305D\u3046', '\u3086\u305F\u304B', '\u3086\u3061\u3083\u304F', '\u3086\u3066\u3099\u308B', '\u3086\u306B\u3085\u3046', '\u3086\u3072\u3099\u308F', '\u3086\u3089\u3044', '\u3086\u308C\u308B', '\u3088\u3046\u3044', '\u3088\u3046\u304B', '\u3088\u3046\u304D\u3085\u3046', '\u3088\u3046\u3057\u3099', '\u3088\u3046\u3059', '\u3088\u3046\u3061\u3048\u3093', '\u3088\u304B\u305B\u3099', '\u3088\u304B\u3093', '\u3088\u304D\u3093', '\u3088\u304F\u305B\u3044', '\u3088\u304F\u307B\u3099\u3046', '\u3088\u3051\u3044', '\u3088\u3053\u3099\u308C\u308B', '\u3088\u3055\u3093', '\u3088\u3057\u3085\u3046', '\u3088\u305D\u3046', '\u3088\u305D\u304F', '\u3088\u3063\u304B', '\u3088\u3066\u3044', '\u3088\u3068\u3099\u304B\u3099\u308F\u304F', '\u3088\u306D\u3064', '\u3088\u3084\u304F', '\u3088\u3086\u3046', '\u3088\u308D\u3053\u3075\u3099', '\u3088\u308D\u3057\u3044', '\u3089\u3044\u3046', '\u3089\u304F\u304B\u3099\u304D', '\u3089\u304F\u3053\u3099', '\u3089\u304F\u3055\u3064', '\u3089\u304F\u305F\u3099', '\u3089\u3057\u3093\u306F\u3099\u3093', '\u3089\u305B\u3093', '\u3089\u305D\u3099\u304F', '\u3089\u305F\u3044', '\u3089\u3063\u304B', '\u3089\u308C\u3064', '\u308A\u3048\u304D', '\u308A\u304B\u3044', '\u308A\u304D\u3055\u304F', '\u308A\u304D\u305B\u3064', '\u308A\u304F\u304F\u3099\u3093', '\u308A\u304F\u3064', '\u308A\u3051\u3093', '\u308A\u3053\u3046', '\u308A\u305B\u3044', '\u308A\u305D\u3046', '\u308A\u305D\u304F', '\u308A\u3066\u3093', '\u308A\u306D\u3093', '\u308A\u3086\u3046', '\u308A\u3085\u3046\u304B\u3099\u304F', '\u308A\u3088\u3046', '\u308A\u3087\u3046\u308A', '\u308A\u3087\u304B\u3093', '\u308A\u3087\u304F\u3061\u3083', '\u308A\u3087\u3053\u3046', '\u308A\u308A\u304F', '\u308A\u308C\u304D', '\u308A\u308D\u3093', '\u308A\u3093\u3053\u3099', '\u308B\u3044\u3051\u3044', '\u308B\u3044\u3055\u3044', '\u308B\u3044\u3057\u3099', '\u308B\u3044\u305B\u304D', '\u308B\u3059\u306F\u3099\u3093', '\u308B\u308A\u304B\u3099\u308F\u3089', '\u308C\u3044\u304B\u3093', '\u308C\u3044\u304D\u3099', '\u308C\u3044\u305B\u3044', '\u308C\u3044\u305D\u3099\u3046\u3053', '\u308C\u3044\u3068\u3046', '\u308C\u3044\u307B\u3099\u3046', '\u308C\u304D\u3057', '\u308C\u304D\u305F\u3099\u3044', '\u308C\u3093\u3042\u3044', '\u308C\u3093\u3051\u3044', '\u308C\u3093\u3053\u3093', '\u308C\u3093\u3055\u3044', '\u308C\u3093\u3057\u3085\u3046', '\u308C\u3093\u305D\u3099\u304F', '\u308C\u3093\u3089\u304F', '\u308D\u3046\u304B', '\u308D\u3046\u3053\u3099', '\u308D\u3046\u3057\u3099\u3093', '\u308D\u3046\u305D\u304F', '\u308D\u304F\u304B\u3099', '\u308D\u3053\u3064', '\u308D\u3057\u3099\u3046\u3089', '\u308D\u3057\u3085\u3064', '\u308D\u305B\u3093', '\u308D\u3066\u3093', '\u308D\u3081\u3093', '\u308D\u308C\u3064', '\u308D\u3093\u304D\u3099', '\u308D\u3093\u306F\u309A', '\u308D\u3093\u3075\u3099\u3093', '\u308D\u3093\u308A', '\u308F\u304B\u3059', '\u308F\u304B\u3081', '\u308F\u304B\u3084\u307E', '\u308F\u304B\u308C\u308B', '\u308F\u3057\u3064', '\u308F\u3057\u3099\u307E\u3057', '\u308F\u3059\u308C\u3082\u306E', '\u308F\u3089\u3046', '\u308F\u308C\u308B'];\n\nmodule.exports = japanese;\n", "'use strict';\n\nvar korean = ['\u1100\u1161\u1100\u1167\u11A8', '\u1100\u1161\u1101\u1173\u11B7', '\u1100\u1161\u1102\u1161\u11AB', '\u1100\u1161\u1102\u1173\u11BC', '\u1100\u1161\u1103\u1173\u11A8', '\u1100\u1161\u1105\u1173\u110E\u1175\u11B7', '\u1100\u1161\u1106\u116E\u11B7', '\u1100\u1161\u1107\u1161\u11BC', '\u1100\u1161\u1109\u1161\u11BC', '\u1100\u1161\u1109\u1173\u11B7', '\u1100\u1161\u110B\u116E\u11AB\u1103\u1166', '\u1100\u1161\u110B\u1173\u11AF', '\u1100\u1161\u110B\u1175\u1103\u1173', '\u1100\u1161\u110B\u1175\u11B8', '\u1100\u1161\u110C\u1161\u11BC', '\u1100\u1161\u110C\u1165\u11BC', '\u1100\u1161\u110C\u1169\u11A8', '\u1100\u1161\u110C\u116E\u11A8', '\u1100\u1161\u11A8\u110B\u1169', '\u1100\u1161\u11A8\u110C\u1161', '\u1100\u1161\u11AB\u1100\u1167\u11A8', '\u1100\u1161\u11AB\u1107\u116E', '\u1100\u1161\u11AB\u1109\u1165\u11B8', '\u1100\u1161\u11AB\u110C\u1161\u11BC', '\u1100\u1161\u11AB\u110C\u1165\u11B8', '\u1100\u1161\u11AB\u1111\u1161\u11AB', '\u1100\u1161\u11AF\u1103\u1173\u11BC', '\u1100\u1161\u11AF\u1107\u1175', '\u1100\u1161\u11AF\u1109\u1162\u11A8', '\u1100\u1161\u11AF\u110C\u1173\u11BC', '\u1100\u1161\u11B7\u1100\u1161\u11A8', '\u1100\u1161\u11B7\u1100\u1175', '\u1100\u1161\u11B7\u1109\u1169', '\u1100\u1161\u11B7\u1109\u116E\u1109\u1165\u11BC', '\u1100\u1161\u11B7\u110C\u1161', '\u1100\u1161\u11B7\u110C\u1165\u11BC', '\u1100\u1161\u11B8\u110C\u1161\u1100\u1175', '\u1100\u1161\u11BC\u1102\u1161\u11B7', '\u1100\u1161\u11BC\u1103\u1161\u11BC', '\u1100\u1161\u11BC\u1103\u1169', '\u1100\u1161\u11BC\u1105\u1167\u11A8\u1112\u1175', '\u1100\u1161\u11BC\u1107\u1167\u11AB', '\u1100\u1161\u11BC\u1107\u116E\u11A8', '\u1100\u1161\u11BC\u1109\u1161', '\u1100\u1161\u11BC\u1109\u116E\u1105\u1163\u11BC', '\u1100\u1161\u11BC\u110B\u1161\u110C\u1175', '\u1100\u1161\u11BC\u110B\u116F\u11AB\u1103\u1169', '\u1100\u1161\u11BC\u110B\u1174', '\u1100\u1161\u11BC\u110C\u1166', '\u1100\u1161\u11BC\u110C\u1169', '\u1100\u1161\u11C0\u110B\u1175', '\u1100\u1162\u1100\u116E\u1105\u1175', '\u1100\u1162\u1102\u1161\u1105\u1175', '\u1100\u1162\u1107\u1161\u11BC', '\u1100\u1162\u1107\u1167\u11AF', '\u1100\u1162\u1109\u1165\u11AB', '\u1100\u1162\u1109\u1165\u11BC', '\u1100\u1162\u110B\u1175\u11AB', '\u1100\u1162\u11A8\u1100\u116A\u11AB\u110C\u1165\u11A8', '\u1100\u1165\u1109\u1175\u11AF', '\u1100\u1165\u110B\u1162\u11A8', '\u1100\u1165\u110B\u116E\u11AF', '\u1100\u1165\u110C\u1175\u11BA', '\u1100\u1165\u1111\u116E\u11B7', '\u1100\u1165\u11A8\u110C\u1165\u11BC', '\u1100\u1165\u11AB\u1100\u1161\u11BC', '\u1100\u1165\u11AB\u1106\u116E\u11AF', '\u1100\u1165\u11AB\u1109\u1165\u11AF', '\u1100\u1165\u11AB\u110C\u1169', '\u1100\u1165\u11AB\u110E\u116E\u11A8', '\u1100\u1165\u11AF\u110B\u1173\u11B7', '\u1100\u1165\u11B7\u1109\u1161', '\u1100\u1165\u11B7\u1110\u1169', '\u1100\u1166\u1109\u1175\u1111\u1161\u11AB', '\u1100\u1166\u110B\u1175\u11B7', '\u1100\u1167\u110B\u116E\u11AF', '\u1100\u1167\u11AB\u1112\u1162', '\u1100\u1167\u11AF\u1100\u116A', '\u1100\u1167\u11AF\u1100\u116E\u11A8', '\u1100\u1167\u11AF\u1105\u1169\u11AB', '\u1100\u1167\u11AF\u1109\u1165\u11A8', '\u1100\u1167\u11AF\u1109\u1173\u11BC', '\u1100\u1167\u11AF\u1109\u1175\u11B7', '\u1100\u1167\u11AF\u110C\u1165\u11BC', '\u1100\u1167\u11AF\u1112\u1169\u11AB', '\u1100\u1167\u11BC\u1100\u1168', '\u1100\u1167\u11BC\u1100\u1169', '\u1100\u1167\u11BC\u1100\u1175', '\u1100\u1167\u11BC\u1105\u1167\u11A8', '\u1100\u1167\u11BC\u1107\u1169\u11A8\u1100\u116E\u11BC', '\u1100\u1167\u11BC\u1107\u1175', '\u1100\u1167\u11BC\u1109\u1161\u11BC\u1103\u1169', '\u1100\u1167\u11BC\u110B\u1167\u11BC', '\u1100\u1167\u11BC\u110B\u116E', '\u1100\u1167\u11BC\u110C\u1162\u11BC', '\u1100\u1167\u11BC\u110C\u1166', '\u1100\u1167\u11BC\u110C\u116E', '\u1100\u1167\u11BC\u110E\u1161\u11AF', '\u1100\u1167\u11BC\u110E\u1175', '\u1100\u1167\u11BC\u1112\u1163\u11BC', '\u1100\u1167\u11BC\u1112\u1165\u11B7', '\u1100\u1168\u1100\u1169\u11A8', '\u1100\u1168\u1103\u1161\u11AB', '\u1100\u1168\u1105\u1161\u11AB', '\u1100\u1168\u1109\u1161\u11AB', '\u1100\u1168\u1109\u1169\u11A8', '\u1100\u1168\u110B\u1163\u11A8', '\u1100\u1168\u110C\u1165\u11AF', '\u1100\u1168\u110E\u1173\u11BC', '\u1100\u1168\u1112\u116C\u11A8', '\u1100\u1169\u1100\u1162\u11A8', '\u1100\u1169\u1100\u116E\u1105\u1167', '\u1100\u1169\u1100\u116E\u11BC', '\u1100\u1169\u1100\u1173\u11B8', '\u1100\u1169\u1103\u1173\u11BC\u1112\u1161\u11A8\u1109\u1162\u11BC', '\u1100\u1169\u1106\u116E\u1109\u1175\u11AB', '\u1100\u1169\u1106\u1175\u11AB', '\u1100\u1169\u110B\u1163\u11BC\u110B\u1175', '\u1100\u1169\u110C\u1161\u11BC', '\u1100\u1169\u110C\u1165\u11AB', '\u1100\u1169\u110C\u1175\u11B8', '\u1100\u1169\u110E\u116E\u11BA\u1100\u1161\u1105\u116E', '\u1100\u1169\u1110\u1169\u11BC', '\u1100\u1169\u1112\u1163\u11BC', '\u1100\u1169\u11A8\u1109\u1175\u11A8', '\u1100\u1169\u11AF\u1106\u1169\u11A8', '\u1100\u1169\u11AF\u110D\u1161\u1100\u1175', '\u1100\u1169\u11AF\u1111\u1173', '\u1100\u1169\u11BC\u1100\u1161\u11AB', '\u1100\u1169\u11BC\u1100\u1162', '\u1100\u1169\u11BC\u1100\u1167\u11A8', '\u1100\u1169\u11BC\u1100\u116E\u11AB', '\u1100\u1169\u11BC\u1100\u1173\u11B8', '\u1100\u1169\u11BC\u1100\u1175', '\u1100\u1169\u11BC\u1103\u1169\u11BC', '\u1100\u1169\u11BC\u1106\u116E\u110B\u116F\u11AB', '\u1100\u1169\u11BC\u1107\u116E', '\u1100\u1169\u11BC\u1109\u1161', '\u1100\u1169\u11BC\u1109\u1175\u11A8', '\u1100\u1169\u11BC\u110B\u1165\u11B8', '\u1100\u1169\u11BC\u110B\u1167\u11AB', '\u1100\u1169\u11BC\u110B\u116F\u11AB', '\u1100\u1169\u11BC\u110C\u1161\u11BC', '\u1100\u1169\u11BC\u110D\u1161', '\u1100\u1169\u11BC\u110E\u1162\u11A8', '\u1100\u1169\u11BC\u1110\u1169\u11BC', '\u1100\u1169\u11BC\u1111\u1169', '\u1100\u1169\u11BC\u1112\u1161\u11BC', '\u1100\u1169\u11BC\u1112\u1172\u110B\u1175\u11AF', '\u1100\u116A\u1106\u1169\u11A8', '\u1100\u116A\u110B\u1175\u11AF', '\u1100\u116A\u110C\u1161\u11BC', '\u1100\u116A\u110C\u1165\u11BC', '\u1100\u116A\u1112\u1161\u11A8', '\u1100\u116A\u11AB\u1100\u1162\u11A8', '\u1100\u116A\u11AB\u1100\u1168', '\u1100\u116A\u11AB\u1100\u116A\u11BC', '\u1100\u116A\u11AB\u1102\u1167\u11B7', '\u1100\u116A\u11AB\u1105\u1161\u11B7', '\u1100\u116A\u11AB\u1105\u1167\u11AB', '\u1100\u116A\u11AB\u1105\u1175', '\u1100\u116A\u11AB\u1109\u1173\u11B8', '\u1100\u116A\u11AB\u1109\u1175\u11B7', '\u1100\u116A\u11AB\u110C\u1165\u11B7', '\u1100\u116A\u11AB\u110E\u1161\u11AF', '\u1100\u116A\u11BC\u1100\u1167\u11BC', '\u1100\u116A\u11BC\u1100\u1169', '\u1100\u116A\u11BC\u110C\u1161\u11BC', '\u1100\u116A\u11BC\u110C\u116E', '\u1100\u116C\u1105\u1169\u110B\u116E\u11B7', '\u1100\u116C\u11BC\u110C\u1161\u11BC\u1112\u1175', '\u1100\u116D\u1100\u116A\u1109\u1165', '\u1100\u116D\u1106\u116E\u11AB', '\u1100\u116D\u1107\u1169\u11A8', '\u1100\u116D\u1109\u1175\u11AF', '\u1100\u116D\u110B\u1163\u11BC', '\u1100\u116D\u110B\u1172\u11A8', '\u1100\u116D\u110C\u1161\u11BC', '\u1100\u116D\u110C\u1175\u11A8', '\u1100\u116D\u1110\u1169\u11BC', '\u1100\u116D\u1112\u116A\u11AB', '\u1100\u116D\u1112\u116E\u11AB', '\u1100\u116E\u1100\u1167\u11BC', '\u1100\u116E\u1105\u1173\u11B7', '\u1100\u116E\u1106\u1165\u11BC', '\u1100\u116E\u1107\u1167\u11AF', '\u1100\u116E\u1107\u116E\u11AB', '\u1100\u116E\u1109\u1165\u11A8', '\u1100\u116E\u1109\u1165\u11BC', '\u1100\u116E\u1109\u1169\u11A8', '\u1100\u116E\u110B\u1167\u11A8', '\u1100\u116E\u110B\u1175\u11B8', '\u1100\u116E\u110E\u1165\u11BC', '\u1100\u116E\u110E\u1166\u110C\u1165\u11A8', '\u1100\u116E\u11A8\u1100\u1161', '\u1100\u116E\u11A8\u1100\u1175', '\u1100\u116E\u11A8\u1102\u1162', '\u1100\u116E\u11A8\u1105\u1175\u11B8', '\u1100\u116E\u11A8\u1106\u116E\u11AF', '\u1100\u116E\u11A8\u1106\u1175\u11AB', '\u1100\u116E\u11A8\u1109\u116E', '\u1100\u116E\u11A8\u110B\u1165', '\u1100\u116E\u11A8\u110B\u116A\u11BC', '\u1100\u116E\u11A8\u110C\u1165\u11A8', '\u1100\u116E\u11A8\u110C\u1166', '\u1100\u116E\u11A8\u1112\u116C', '\u1100\u116E\u11AB\u1103\u1162', '\u1100\u116E\u11AB\u1109\u1161', '\u1100\u116E\u11AB\u110B\u1175\u11AB', '\u1100\u116E\u11BC\u1100\u1173\u11A8\u110C\u1165\u11A8', '\u1100\u116F\u11AB\u1105\u1175', '\u1100\u116F\u11AB\u110B\u1171', '\u1100\u116F\u11AB\u1110\u116E', '\u1100\u1171\u1100\u116E\u11A8', '\u1100\u1171\u1109\u1175\u11AB', '\u1100\u1172\u110C\u1165\u11BC', '\u1100\u1172\u110E\u1175\u11A8', '\u1100\u1172\u11AB\u1112\u1167\u11BC', '\u1100\u1173\u1102\u1161\u11AF', '\u1100\u1173\u1102\u1163\u11BC', '\u1100\u1173\u1102\u1173\u11AF', '\u1100\u1173\u1105\u1165\u1102\u1161', '\u1100\u1173\u1105\u116E\u11B8', '\u1100\u1173\u1105\u1173\u11BA', '\u1100\u1173\u1105\u1175\u11B7', '\u1100\u1173\u110C\u1166\u1109\u1165\u110B\u1163', '\u1100\u1173\u1110\u1169\u1105\u1169\u11A8', '\u1100\u1173\u11A8\u1107\u1169\u11A8', '\u1100\u1173\u11A8\u1112\u1175', '\u1100\u1173\u11AB\u1100\u1165', '\u1100\u1173\u11AB\u1100\u116D', '\u1100\u1173\u11AB\u1105\u1162', '\u1100\u1173\u11AB\u1105\u1169', '\u1100\u1173\u11AB\u1106\u116E', '\u1100\u1173\u11AB\u1107\u1169\u11AB', '\u1100\u1173\u11AB\u110B\u116F\u11AB', '\u1100\u1173\u11AB\u110B\u1172\u11A8', '\u1100\u1173\u11AB\u110E\u1165', '\u1100\u1173\u11AF\u110A\u1175', '\u1100\u1173\u11AF\u110C\u1161', '\u1100\u1173\u11B7\u1100\u1161\u11BC\u1109\u1161\u11AB', '\u1100\u1173\u11B7\u1100\u1169', '\u1100\u1173\u11B7\u1102\u1167\u11AB', '\u1100\u1173\u11B7\u1106\u1166\u1103\u1161\u11AF', '\u1100\u1173\u11B7\u110B\u1162\u11A8', '\u1100\u1173\u11B7\u110B\u1167\u11AB', '\u1100\u1173\u11B7\u110B\u116D\u110B\u1175\u11AF', '\u1100\u1173\u11B7\u110C\u1175', '\u1100\u1173\u11BC\u110C\u1165\u11BC\u110C\u1165\u11A8', '\u1100\u1175\u1100\u1161\u11AB', '\u1100\u1175\u1100\u116A\u11AB', '\u1100\u1175\u1102\u1167\u11B7', '\u1100\u1175\u1102\u1173\u11BC', '\u1100\u1175\u1103\u1169\u11A8\u1100\u116D', '\u1100\u1175\u1103\u116E\u11BC', '\u1100\u1175\u1105\u1169\u11A8', '\u1100\u1175\u1105\u1173\u11B7', '\u1100\u1175\u1107\u1165\u11B8', '\u1100\u1175\u1107\u1169\u11AB', '\u1100\u1175\u1107\u116E\u11AB', '\u1100\u1175\u1108\u1173\u11B7', '\u1100\u1175\u1109\u116E\u11A8\u1109\u1161', '\u1100\u1175\u1109\u116E\u11AF', '\u1100\u1175\u110B\u1165\u11A8', '\u1100\u1175\u110B\u1165\u11B8', '\u1100\u1175\u110B\u1169\u11AB', '\u1100\u1175\u110B\u116E\u11AB', '\u1100\u1175\u110B\u116F\u11AB', '\u1100\u1175\u110C\u1165\u11A8', '\u1100\u1175\u110C\u116E\u11AB', '\u1100\u1175\u110E\u1175\u11B7', '\u1100\u1175\u1112\u1169\u11AB', '\u1100\u1175\u1112\u116C\u11A8', '\u1100\u1175\u11AB\u1100\u1173\u11B8', '\u1100\u1175\u11AB\u110C\u1161\u11BC', '\u1100\u1175\u11AF\u110B\u1175', '\u1100\u1175\u11B7\u1107\u1161\u11B8', '\u1100\u1175\u11B7\u110E\u1175', '\u1100\u1175\u11B7\u1111\u1169\u1100\u1169\u11BC\u1112\u1161\u11BC', '\u1101\u1161\u11A8\u1103\u116E\u1100\u1175', '\u1101\u1161\u11B7\u1108\u1161\u11A8', '\u1101\u1162\u1103\u1161\u11AF\u110B\u1173\u11B7', '\u1101\u1162\u1109\u1169\u1100\u1173\u11B7', '\u1101\u1165\u11B8\u110C\u1175\u11AF', '\u1101\u1169\u11A8\u1103\u1162\u1100\u1175', '\u1101\u1169\u11BE\u110B\u1175\u11C1', '\u1102\u1161\u1103\u1173\u11AF\u110B\u1175', '\u1102\u1161\u1105\u1161\u11AB\u1112\u1175', '\u1102\u1161\u1106\u1165\u110C\u1175', '\u1102\u1161\u1106\u116E\u11AF', '\u1102\u1161\u110E\u1175\u11B7\u1107\u1161\u11AB', '\u1102\u1161\u1112\u1173\u11AF', '\u1102\u1161\u11A8\u110B\u1167\u11B8', '\u1102\u1161\u11AB\u1107\u1161\u11BC', '\u1102\u1161\u11AF\u1100\u1162', '\u1102\u1161\u11AF\u110A\u1175', '\u1102\u1161\u11AF\u110D\u1161', '\u1102\u1161\u11B7\u1102\u1167', '\u1102\u1161\u11B7\u1103\u1162\u1106\u116E\u11AB', '\u1102\u1161\u11B7\u1106\u1162', '\u1102\u1161\u11B7\u1109\u1161\u11AB', '\u1102\u1161\u11B7\u110C\u1161', '\u1102\u1161\u11B7\u1111\u1167\u11AB', '\u1102\u1161\u11B7\u1112\u1161\u11A8\u1109\u1162\u11BC', '\u1102\u1161\u11BC\u1107\u1175', '\u1102\u1161\u11C0\u1106\u1161\u11AF', '\u1102\u1162\u1102\u1167\u11AB', '\u1102\u1162\u110B\u116D\u11BC', '\u1102\u1162\u110B\u1175\u11AF', '\u1102\u1162\u11B7\u1107\u1175', '\u1102\u1162\u11B7\u1109\u1162', '\u1102\u1162\u11BA\u1106\u116E\u11AF', '\u1102\u1162\u11BC\u1103\u1169\u11BC', '\u1102\u1162\u11BC\u1106\u1167\u11AB', '\u1102\u1162\u11BC\u1107\u1161\u11BC', '\u1102\u1162\u11BC\u110C\u1161\u11BC\u1100\u1169', '\u1102\u1166\u11A8\u1110\u1161\u110B\u1175', '\u1102\u1166\u11BA\u110D\u1162', '\u1102\u1169\u1103\u1169\u11BC', '\u1102\u1169\u1105\u1161\u11AB\u1109\u1162\u11A8', '\u1102\u1169\u1105\u1167\u11A8', '\u1102\u1169\u110B\u1175\u11AB', '\u1102\u1169\u11A8\u110B\u1173\u11B7', '\u1102\u1169\u11A8\u110E\u1161', '\u1102\u1169\u11A8\u1112\u116A', '\u1102\u1169\u11AB\u1105\u1175', '\u1102\u1169\u11AB\u1106\u116E\u11AB', '\u1102\u1169\u11AB\u110C\u1162\u11BC', '\u1102\u1169\u11AF\u110B\u1175', '\u1102\u1169\u11BC\u1100\u116E', '\u1102\u1169\u11BC\u1103\u1161\u11B7', '\u1102\u1169\u11BC\u1106\u1175\u11AB', '\u1102\u1169\u11BC\u1107\u116E', '\u1102\u1169\u11BC\u110B\u1165\u11B8', '\u1102\u1169\u11BC\u110C\u1161\u11BC', '\u1102\u1169\u11BC\u110E\u1169\u11AB', '\u1102\u1169\u11C1\u110B\u1175', '\u1102\u116E\u11AB\u1103\u1169\u11BC\u110C\u1161', '\u1102\u116E\u11AB\u1106\u116E\u11AF', '\u1102\u116E\u11AB\u110A\u1165\u11B8', '\u1102\u1172\u110B\u116D\u11A8', '\u1102\u1173\u1101\u1175\u11B7', '\u1102\u1173\u11A8\u1103\u1162', '\u1102\u1173\u11BC\u1103\u1169\u11BC\u110C\u1165\u11A8', '\u1102\u1173\u11BC\u1105\u1167\u11A8', '\u1103\u1161\u1107\u1161\u11BC', '\u1103\u1161\u110B\u1163\u11BC\u1109\u1165\u11BC', '\u1103\u1161\u110B\u1173\u11B7', '\u1103\u1161\u110B\u1175\u110B\u1165\u1110\u1173', '\u1103\u1161\u1112\u1162\u11BC', '\u1103\u1161\u11AB\u1100\u1168', '\u1103\u1161\u11AB\u1100\u1169\u11AF', '\u1103\u1161\u11AB\u1103\u1169\u11A8', '\u1103\u1161\u11AB\u1106\u1161\u11BA', '\u1103\u1161\u11AB\u1109\u116E\u11AB', '\u1103\u1161\u11AB\u110B\u1165', '\u1103\u1161\u11AB\u110B\u1171', '\u1103\u1161\u11AB\u110C\u1165\u11B7', '\u1103\u1161\u11AB\u110E\u1166', '\u1103\u1161\u11AB\u110E\u116E', '\u1103\u1161\u11AB\u1111\u1167\u11AB', '\u1103\u1161\u11AB\u1111\u116E\u11BC', '\u1103\u1161\u11AF\u1100\u1163\u11AF', '\u1103\u1161\u11AF\u1105\u1165', '\u1103\u1161\u11AF\u1105\u1167\u11A8', '\u1103\u1161\u11AF\u1105\u1175', '\u1103\u1161\u11B0\u1100\u1169\u1100\u1175', '\u1103\u1161\u11B7\u1103\u1161\u11BC', '\u1103\u1161\u11B7\u1107\u1162', '\u1103\u1161\u11B7\u110B\u116D', '\u1103\u1161\u11B7\u110B\u1175\u11B7', '\u1103\u1161\u11B8\u1107\u1167\u11AB', '\u1103\u1161\u11B8\u110C\u1161\u11BC', '\u1103\u1161\u11BC\u1100\u1173\u11AB', '\u1103\u1161\u11BC\u1107\u116E\u11AB\u1100\u1161\u11AB', '\u1103\u1161\u11BC\u110B\u1167\u11AB\u1112\u1175', '\u1103\u1161\u11BC\u110C\u1161\u11BC', '\u1103\u1162\u1100\u1172\u1106\u1169', '\u1103\u1162\u1102\u1161\u11BD', '\u1103\u1162\u1103\u1161\u11AB\u1112\u1175', '\u1103\u1162\u1103\u1161\u11B8', '\u1103\u1162\u1103\u1169\u1109\u1175', '\u1103\u1162\u1105\u1163\u11A8', '\u1103\u1162\u1105\u1163\u11BC', '\u1103\u1162\u1105\u1172\u11A8', '\u1103\u1162\u1106\u116E\u11AB', '\u1103\u1162\u1107\u116E\u1107\u116E\u11AB', '\u1103\u1162\u1109\u1175\u11AB', '\u1103\u1162\u110B\u1173\u11BC', '\u1103\u1162\u110C\u1161\u11BC', '\u1103\u1162\u110C\u1165\u11AB', '\u1103\u1162\u110C\u1165\u11B8', '\u1103\u1162\u110C\u116E\u11BC', '\u1103\u1162\u110E\u1162\u11A8', '\u1103\u1162\u110E\u116E\u11AF', '\u1103\u1162\u110E\u116E\u11BC', '\u1103\u1162\u1110\u1169\u11BC\u1105\u1167\u11BC', '\u1103\u1162\u1112\u1161\u11A8', '\u1103\u1162\u1112\u1161\u11AB\u1106\u1175\u11AB\u1100\u116E\u11A8', '\u1103\u1162\u1112\u1161\u11B8\u1109\u1175\u11AF', '\u1103\u1162\u1112\u1167\u11BC', '\u1103\u1165\u11BC\u110B\u1165\u1105\u1175', '\u1103\u1166\u110B\u1175\u1110\u1173', '\u1103\u1169\u1103\u1162\u110E\u1166', '\u1103\u1169\u1103\u1165\u11A8', '\u1103\u1169\u1103\u116E\u11A8', '\u1103\u1169\u1106\u1161\u11BC', '\u1103\u1169\u1109\u1165\u1100\u116A\u11AB', '\u1103\u1169\u1109\u1175\u11B7', '\u1103\u1169\u110B\u116E\u11B7', '\u1103\u1169\u110B\u1175\u11B8', '\u1103\u1169\u110C\u1161\u1100\u1175', '\u1103\u1169\u110C\u1165\u1112\u1175', '\u1103\u1169\u110C\u1165\u11AB', '\u1103\u1169\u110C\u116E\u11BC', '\u1103\u1169\u110E\u1161\u11A8', '\u1103\u1169\u11A8\u1100\u1161\u11B7', '\u1103\u1169\u11A8\u1105\u1175\u11B8', '\u1103\u1169\u11A8\u1109\u1165', '\u1103\u1169\u11A8\u110B\u1175\u11AF', '\u1103\u1169\u11A8\u110E\u1161\u11BC\u110C\u1165\u11A8', '\u1103\u1169\u11BC\u1112\u116A\u110E\u1162\u11A8', '\u1103\u1171\u11BA\u1106\u1169\u1109\u1173\u11B8', '\u1103\u1171\u11BA\u1109\u1161\u11AB', '\u1104\u1161\u11AF\u110B\u1161\u110B\u1175', '\u1106\u1161\u1102\u116E\u1105\u1161', '\u1106\u1161\u1102\u1173\u11AF', '\u1106\u1161\u1103\u1161\u11BC', '\u1106\u1161\u1105\u1161\u1110\u1169\u11AB', '\u1106\u1161\u1105\u1167\u11AB', '\u1106\u1161\u1106\u116E\u1105\u1175', '\u1106\u1161\u1109\u1161\u110C\u1175', '\u1106\u1161\u110B\u1163\u11A8', '\u1106\u1161\u110B\u116D\u1102\u1166\u110C\u1173', '\u1106\u1161\u110B\u1173\u11AF', '\u1106\u1161\u110B\u1173\u11B7', '\u1106\u1161\u110B\u1175\u110F\u1173', '\u1106\u1161\u110C\u116E\u11BC', '\u1106\u1161\u110C\u1175\u1106\u1161\u11A8', '\u1106\u1161\u110E\u1161\u11AB\u1100\u1161\u110C\u1175', '\u1106\u1161\u110E\u1161\u11AF', '\u1106\u1161\u1112\u1173\u11AB', '\u1106\u1161\u11A8\u1100\u1165\u11AF\u1105\u1175', '\u1106\u1161\u11A8\u1102\u1162', '\u1106\u1161\u11A8\u1109\u1161\u11BC', '\u1106\u1161\u11AB\u1102\u1161\u11B7', '\u1106\u1161\u11AB\u1103\u116E', '\u1106\u1161\u11AB\u1109\u1166', '\u1106\u1161\u11AB\u110B\u1163\u11A8', '\u1106\u1161\u11AB\u110B\u1175\u11AF', '\u1106\u1161\u11AB\u110C\u1165\u11B7', '\u1106\u1161\u11AB\u110C\u1169\u11A8', '\u1106\u1161\u11AB\u1112\u116A', '\u1106\u1161\u11AD\u110B\u1175', '\u1106\u1161\u11AF\u1100\u1175', '\u1106\u1161\u11AF\u110A\u1173\u11B7', '\u1106\u1161\u11AF\u1110\u116E', '\u1106\u1161\u11B7\u1103\u1162\u1105\u1169', '\u1106\u1161\u11BC\u110B\u116F\u11AB\u1100\u1167\u11BC', '\u1106\u1162\u1102\u1167\u11AB', '\u1106\u1162\u1103\u1161\u11AF', '\u1106\u1162\u1105\u1167\u11A8', '\u1106\u1162\u1107\u1165\u11AB', '\u1106\u1162\u1109\u1173\u110F\u1165\u11B7', '\u1106\u1162\u110B\u1175\u11AF', '\u1106\u1162\u110C\u1161\u11BC', '\u1106\u1162\u11A8\u110C\u116E', '\u1106\u1165\u11A8\u110B\u1175', '\u1106\u1165\u11AB\u110C\u1165', '\u1106\u1165\u11AB\u110C\u1175', '\u1106\u1165\u11AF\u1105\u1175', '\u1106\u1166\u110B\u1175\u11AF', '\u1106\u1167\u1102\u1173\u1105\u1175', '\u1106\u1167\u110E\u1175\u11AF', '\u1106\u1167\u11AB\u1103\u1161\u11B7', '\u1106\u1167\u11AF\u110E\u1175', '\u1106\u1167\u11BC\u1103\u1161\u11AB', '\u1106\u1167\u11BC\u1105\u1167\u11BC', '\u1106\u1167\u11BC\u110B\u1168', '\u1106\u1167\u11BC\u110B\u1174', '\u1106\u1167\u11BC\u110C\u1165\u11AF', '\u1106\u1167\u11BC\u110E\u1175\u11BC', '\u1106\u1167\u11BC\u1112\u1161\u11B7', '\u1106\u1169\u1100\u1173\u11B7', '\u1106\u1169\u1102\u1175\u1110\u1165', '\u1106\u1169\u1103\u1166\u11AF', '\u1106\u1169\u1103\u1173\u11AB', '\u1106\u1169\u1107\u1165\u11B7', '\u1106\u1169\u1109\u1173\u11B8', '\u1106\u1169\u110B\u1163\u11BC', '\u1106\u1169\u110B\u1175\u11B7', '\u1106\u1169\u110C\u1169\u1105\u1175', '\u1106\u1169\u110C\u1175\u11B8', '\u1106\u1169\u1110\u116E\u11BC\u110B\u1175', '\u1106\u1169\u11A8\u1100\u1165\u11AF\u110B\u1175', '\u1106\u1169\u11A8\u1105\u1169\u11A8', '\u1106\u1169\u11A8\u1109\u1161', '\u1106\u1169\u11A8\u1109\u1169\u1105\u1175', '\u1106\u1169\u11A8\u1109\u116E\u11B7', '\u1106\u1169\u11A8\u110C\u1165\u11A8', '\u1106\u1169\u11A8\u1111\u116D', '\u1106\u1169\u11AF\u1105\u1162', '\u1106\u1169\u11B7\u1106\u1162', '\u1106\u1169\u11B7\u1106\u116E\u1100\u1166', '\u1106\u1169\u11B7\u1109\u1161\u11AF', '\u1106\u1169\u11B7\u1109\u1169\u11A8', '\u1106\u1169\u11B7\u110C\u1175\u11BA', '\u1106\u1169\u11B7\u1110\u1169\u11BC', '\u1106\u1169\u11B8\u1109\u1175', '\u1106\u116E\u1100\u116A\u11AB\u1109\u1175\u11B7', '\u1106\u116E\u1100\u116E\u11BC\u1112\u116A', '\u1106\u116E\u1103\u1165\u110B\u1171', '\u1106\u116E\u1103\u1165\u11B7', '\u1106\u116E\u1105\u1173\u11C1', '\u1106\u116E\u1109\u1173\u11AB', '\u1106\u116E\u110B\u1165\u11BA', '\u1106\u116E\u110B\u1167\u11A8', '\u1106\u116E\u110B\u116D\u11BC', '\u1106\u116E\u110C\u1169\u1100\u1165\u11AB', '\u1106\u116E\u110C\u1175\u1100\u1162', '\u1106\u116E\u110E\u1165\u11A8', '\u1106\u116E\u11AB\u1100\u116E', '\u1106\u116E\u11AB\u1103\u1173\u11A8', '\u1106\u116E\u11AB\u1107\u1165\u11B8', '\u1106\u116E\u11AB\u1109\u1165', '\u1106\u116E\u11AB\u110C\u1166', '\u1106\u116E\u11AB\u1112\u1161\u11A8', '\u1106\u116E\u11AB\u1112\u116A', '\u1106\u116E\u11AF\u1100\u1161', '\u1106\u116E\u11AF\u1100\u1165\u11AB', '\u1106\u116E\u11AF\u1100\u1167\u11AF', '\u1106\u116E\u11AF\u1100\u1169\u1100\u1175', '\u1106\u116E\u11AF\u1105\u1169\u11AB', '\u1106\u116E\u11AF\u1105\u1175\u1112\u1161\u11A8', '\u1106\u116E\u11AF\u110B\u1173\u11B7', '\u1106\u116E\u11AF\u110C\u1175\u11AF', '\u1106\u116E\u11AF\u110E\u1166', '\u1106\u1175\u1100\u116E\u11A8', '\u1106\u1175\u1103\u1175\u110B\u1165', '\u1106\u1175\u1109\u1161\u110B\u1175\u11AF', '\u1106\u1175\u1109\u116E\u11AF', '\u1106\u1175\u110B\u1167\u11A8', '\u1106\u1175\u110B\u116D\u11BC\u1109\u1175\u11AF', '\u1106\u1175\u110B\u116E\u11B7', '\u1106\u1175\u110B\u1175\u11AB', '\u1106\u1175\u1110\u1175\u11BC', '\u1106\u1175\u1112\u1169\u11AB', '\u1106\u1175\u11AB\u1100\u1161\u11AB', '\u1106\u1175\u11AB\u110C\u1169\u11A8', '\u1106\u1175\u11AB\u110C\u116E', '\u1106\u1175\u11AE\u110B\u1173\u11B7', '\u1106\u1175\u11AF\u1100\u1161\u1105\u116E', '\u1106\u1175\u11AF\u1105\u1175\u1106\u1175\u1110\u1165', '\u1106\u1175\u11C0\u1107\u1161\u1103\u1161\u11A8', '\u1107\u1161\u1100\u1161\u110C\u1175', '\u1107\u1161\u1100\u116E\u1102\u1175', '\u1107\u1161\u1102\u1161\u1102\u1161', '\u1107\u1161\u1102\u1173\u11AF', '\u1107\u1161\u1103\u1161\u11A8', '\u1107\u1161\u1103\u1161\u11BA\u1100\u1161', '\u1107\u1161\u1105\u1161\u11B7', '\u1107\u1161\u110B\u1175\u1105\u1165\u1109\u1173', '\u1107\u1161\u1110\u1161\u11BC', '\u1107\u1161\u11A8\u1106\u116E\u11AF\u1100\u116A\u11AB', '\u1107\u1161\u11A8\u1109\u1161', '\u1107\u1161\u11A8\u1109\u116E', '\u1107\u1161\u11AB\u1103\u1162', '\u1107\u1161\u11AB\u1103\u1173\u1109\u1175', '\u1107\u1161\u11AB\u1106\u1161\u11AF', '\u1107\u1161\u11AB\u1107\u1161\u11AF', '\u1107\u1161\u11AB\u1109\u1165\u11BC', '\u1107\u1161\u11AB\u110B\u1173\u11BC', '\u1107\u1161\u11AB\u110C\u1161\u11BC', '\u1107\u1161\u11AB\u110C\u116E\u11A8', '\u1107\u1161\u11AB\u110C\u1175', '\u1107\u1161\u11AB\u110E\u1161\u11AB', '\u1107\u1161\u11AE\u110E\u1175\u11B7', '\u1107\u1161\u11AF\u1100\u1161\u1105\u1161\u11A8', '\u1107\u1161\u11AF\u1100\u1165\u11AF\u110B\u1173\u11B7', '\u1107\u1161\u11AF\u1100\u1167\u11AB', '\u1107\u1161\u11AF\u1103\u1161\u11AF', '\u1107\u1161\u11AF\u1105\u1166', '\u1107\u1161\u11AF\u1106\u1169\u11A8', '\u1107\u1161\u11AF\u1107\u1161\u1103\u1161\u11A8', '\u1107\u1161\u11AF\u1109\u1162\u11BC', '\u1107\u1161\u11AF\u110B\u1173\u11B7', '\u1107\u1161\u11AF\u110C\u1161\u1100\u116E\u11A8', '\u1107\u1161\u11AF\u110C\u1165\u11AB', '\u1107\u1161\u11AF\u1110\u1169\u11B8', '\u1107\u1161\u11AF\u1111\u116D', '\u1107\u1161\u11B7\u1112\u1161\u1102\u1173\u11AF', '\u1107\u1161\u11B8\u1100\u1173\u1105\u1173\u11BA', '\u1107\u1161\u11B8\u1106\u1161\u11BA', '\u1107\u1161\u11B8\u1109\u1161\u11BC', '\u1107\u1161\u11B8\u1109\u1169\u11C0', '\u1107\u1161\u11BC\u1100\u1173\u11B7', '\u1107\u1161\u11BC\u1106\u1167\u11AB', '\u1107\u1161\u11BC\u1106\u116E\u11AB', '\u1107\u1161\u11BC\u1107\u1161\u1103\u1161\u11A8', '\u1107\u1161\u11BC\u1107\u1165\u11B8', '\u1107\u1161\u11BC\u1109\u1169\u11BC', '\u1107\u1161\u11BC\u1109\u1175\u11A8', '\u1107\u1161\u11BC\u110B\u1161\u11AB', '\u1107\u1161\u11BC\u110B\u116E\u11AF', '\u1107\u1161\u11BC\u110C\u1175', '\u1107\u1161\u11BC\u1112\u1161\u11A8', '\u1107\u1161\u11BC\u1112\u1162', '\u1107\u1161\u11BC\u1112\u1163\u11BC', '\u1107\u1162\u1100\u1167\u11BC', '\u1107\u1162\u1101\u1169\u11B8', '\u1107\u1162\u1103\u1161\u11AF', '\u1107\u1162\u1103\u1173\u1106\u1175\u11AB\u1110\u1165\u11AB', '\u1107\u1162\u11A8\u1103\u116E\u1109\u1161\u11AB', '\u1107\u1162\u11A8\u1109\u1162\u11A8', '\u1107\u1162\u11A8\u1109\u1165\u11BC', '\u1107\u1162\u11A8\u110B\u1175\u11AB', '\u1107\u1162\u11A8\u110C\u1166', '\u1107\u1162\u11A8\u1112\u116A\u110C\u1165\u11B7', '\u1107\u1165\u1105\u1173\u11BA', '\u1107\u1165\u1109\u1165\u11BA', '\u1107\u1165\u1110\u1173\u11AB', '\u1107\u1165\u11AB\u1100\u1162', '\u1107\u1165\u11AB\u110B\u1167\u11A8', '\u1107\u1165\u11AB\u110C\u1175', '\u1107\u1165\u11AB\u1112\u1169', '\u1107\u1165\u11AF\u1100\u1173\u11B7', '\u1107\u1165\u11AF\u1105\u1166', '\u1107\u1165\u11AF\u110A\u1165', '\u1107\u1165\u11B7\u110B\u1171', '\u1107\u1165\u11B7\u110B\u1175\u11AB', '\u1107\u1165\u11B7\u110C\u116C', '\u1107\u1165\u11B8\u1105\u1172\u11AF', '\u1107\u1165\u11B8\u110B\u116F\u11AB', '\u1107\u1165\u11B8\u110C\u1165\u11A8', '\u1107\u1165\u11B8\u110E\u1175\u11A8', '\u1107\u1166\u110B\u1175\u110C\u1175\u11BC', '\u1107\u1166\u11AF\u1110\u1173', '\u1107\u1167\u11AB\u1100\u1167\u11BC', '\u1107\u1167\u11AB\u1103\u1169\u11BC', '\u1107\u1167\u11AB\u1106\u1167\u11BC', '\u1107\u1167\u11AB\u1109\u1175\u11AB', '\u1107\u1167\u11AB\u1112\u1169\u1109\u1161', '\u1107\u1167\u11AB\u1112\u116A', '\u1107\u1167\u11AF\u1103\u1169', '\u1107\u1167\u11AF\u1106\u1167\u11BC', '\u1107\u1167\u11AF\u110B\u1175\u11AF', '\u1107\u1167\u11BC\u1109\u1175\u11AF', '\u1107\u1167\u11BC\u110B\u1161\u1105\u1175', '\u1107\u1167\u11BC\u110B\u116F\u11AB', '\u1107\u1169\u1100\u116A\u11AB', '\u1107\u1169\u1102\u1165\u1109\u1173', '\u1107\u1169\u1105\u1161\u1109\u1162\u11A8', '\u1107\u1169\u1105\u1161\u11B7', '\u1107\u1169\u1105\u1173\u11B7', '\u1107\u1169\u1109\u1161\u11BC', '\u1107\u1169\u110B\u1161\u11AB', '\u1107\u1169\u110C\u1161\u1100\u1175', '\u1107\u1169\u110C\u1161\u11BC', '\u1107\u1169\u110C\u1165\u11AB', '\u1107\u1169\u110C\u1169\u11AB', '\u1107\u1169\u1110\u1169\u11BC', '\u1107\u1169\u1111\u1167\u11AB\u110C\u1165\u11A8', '\u1107\u1169\u1112\u1165\u11B7', '\u1107\u1169\u11A8\u1103\u1169', '\u1107\u1169\u11A8\u1109\u1161', '\u1107\u1169\u11A8\u1109\u116E\u11BC\u110B\u1161', '\u1107\u1169\u11A8\u1109\u1173\u11B8', '\u1107\u1169\u11A9\u110B\u1173\u11B7', '\u1107\u1169\u11AB\u1100\u1167\u11A8\u110C\u1165\u11A8', '\u1107\u1169\u11AB\u1105\u1162', '\u1107\u1169\u11AB\u1107\u116E', '\u1107\u1169\u11AB\u1109\u1161', '\u1107\u1169\u11AB\u1109\u1165\u11BC', '\u1107\u1169\u11AB\u110B\u1175\u11AB', '\u1107\u1169\u11AB\u110C\u1175\u11AF', '\u1107\u1169\u11AF\u1111\u1166\u11AB', '\u1107\u1169\u11BC\u1109\u1161', '\u1107\u1169\u11BC\u110C\u1175', '\u1107\u1169\u11BC\u1110\u116E', '\u1107\u116E\u1100\u1173\u11AB', '\u1107\u116E\u1101\u1173\u1105\u1165\u110B\u116E\u11B7', '\u1107\u116E\u1103\u1161\u11B7', '\u1107\u116E\u1103\u1169\u11BC\u1109\u1161\u11AB', '\u1107\u116E\u1106\u116E\u11AB', '\u1107\u116E\u1107\u116E\u11AB', '\u1107\u116E\u1109\u1161\u11AB', '\u1107\u116E\u1109\u1161\u11BC', '\u1107\u116E\u110B\u1165\u11BF', '\u1107\u116E\u110B\u1175\u11AB', '\u1107\u116E\u110C\u1161\u11A8\u110B\u116D\u11BC', '\u1107\u116E\u110C\u1161\u11BC', '\u1107\u116E\u110C\u1165\u11BC', '\u1107\u116E\u110C\u1169\u11A8', '\u1107\u116E\u110C\u1175\u1105\u1165\u11AB\u1112\u1175', '\u1107\u116E\u110E\u1175\u11AB', '\u1107\u116E\u1110\u1161\u11A8', '\u1107\u116E\u1111\u116E\u11B7', '\u1107\u116E\u1112\u116C\u110C\u1161\u11BC', '\u1107\u116E\u11A8\u1107\u116E', '\u1107\u116E\u11A8\u1112\u1161\u11AB', '\u1107\u116E\u11AB\u1102\u1169', '\u1107\u116E\u11AB\u1105\u1163\u11BC', '\u1107\u116E\u11AB\u1105\u1175', '\u1107\u116E\u11AB\u1106\u1167\u11BC', '\u1107\u116E\u11AB\u1109\u1165\u11A8', '\u1107\u116E\u11AB\u110B\u1163', '\u1107\u116E\u11AB\u110B\u1171\u1100\u1175', '\u1107\u116E\u11AB\u1111\u1175\u11AF', '\u1107\u116E\u11AB\u1112\u1169\u11BC\u1109\u1162\u11A8', '\u1107\u116E\u11AF\u1100\u1169\u1100\u1175', '\u1107\u116E\u11AF\u1100\u116A', '\u1107\u116E\u11AF\u1100\u116D', '\u1107\u116E\u11AF\u1101\u1169\u11BE', '\u1107\u116E\u11AF\u1106\u1161\u11AB', '\u1107\u116E\u11AF\u1107\u1165\u11B8', '\u1107\u116E\u11AF\u1107\u1175\u11BE', '\u1107\u116E\u11AF\u110B\u1161\u11AB', '\u1107\u116E\u11AF\u110B\u1175\u110B\u1175\u11A8', '\u1107\u116E\u11AF\u1112\u1162\u11BC', '\u1107\u1173\u1105\u1162\u11AB\u1103\u1173', '\u1107\u1175\u1100\u1173\u11A8', '\u1107\u1175\u1102\u1161\u11AB', '\u1107\u1175\u1102\u1175\u11AF', '\u1107\u1175\u1103\u116E\u11AF\u1100\u1175', '\u1107\u1175\u1103\u1175\u110B\u1169', '\u1107\u1175\u1105\u1169\u1109\u1169', '\u1107\u1175\u1106\u1161\u11AB', '\u1107\u1175\u1106\u1167\u11BC', '\u1107\u1175\u1106\u1175\u11AF', '\u1107\u1175\u1107\u1161\u1105\u1161\u11B7', '\u1107\u1175\u1107\u1175\u11B7\u1107\u1161\u11B8', '\u1107\u1175\u1109\u1161\u11BC', '\u1107\u1175\u110B\u116D\u11BC', '\u1107\u1175\u110B\u1172\u11AF', '\u1107\u1175\u110C\u116E\u11BC', '\u1107\u1175\u1110\u1161\u1106\u1175\u11AB', '\u1107\u1175\u1111\u1161\u11AB', '\u1107\u1175\u11AF\u1103\u1175\u11BC', '\u1107\u1175\u11BA\u1106\u116E\u11AF', '\u1107\u1175\u11BA\u1107\u1161\u11BC\u110B\u116E\u11AF', '\u1107\u1175\u11BA\u110C\u116E\u11AF\u1100\u1175', '\u1107\u1175\u11BE\u1101\u1161\u11AF', '\u1108\u1161\u11AF\u1100\u1161\u11AB\u1109\u1162\u11A8', '\u1108\u1161\u11AF\u1105\u1162', '\u1108\u1161\u11AF\u1105\u1175', '\u1109\u1161\u1100\u1165\u11AB', '\u1109\u1161\u1100\u1168\u110C\u1165\u11AF', '\u1109\u1161\u1102\u1161\u110B\u1175', '\u1109\u1161\u1102\u1163\u11BC', '\u1109\u1161\u1105\u1161\u11B7', '\u1109\u1161\u1105\u1161\u11BC', '\u1109\u1161\u1105\u1175\u11B8', '\u1109\u1161\u1106\u1169\u1102\u1175\u11B7', '\u1109\u1161\u1106\u116E\u11AF', '\u1109\u1161\u1107\u1161\u11BC', '\u1109\u1161\u1109\u1161\u11BC', '\u1109\u1161\u1109\u1162\u11BC\u1112\u116A\u11AF', '\u1109\u1161\u1109\u1165\u11AF', '\u1109\u1161\u1109\u1173\u11B7', '\u1109\u1161\u1109\u1175\u11AF', '\u1109\u1161\u110B\u1165\u11B8', '\u1109\u1161\u110B\u116D\u11BC', '\u1109\u1161\u110B\u116F\u11AF', '\u1109\u1161\u110C\u1161\u11BC', '\u1109\u1161\u110C\u1165\u11AB', '\u1109\u1161\u110C\u1175\u11AB', '\u1109\u1161\u110E\u1169\u11AB', '\u1109\u1161\u110E\u116E\u11AB\u1100\u1175', '\u1109\u1161\u1110\u1161\u11BC', '\u1109\u1161\u1110\u116E\u1105\u1175', '\u1109\u1161\u1112\u1173\u11AF', '\u1109\u1161\u11AB\u1100\u1175\u11AF', '\u1109\u1161\u11AB\u1107\u116E\u110B\u1175\u11AB\u1100\u116A', '\u1109\u1161\u11AB\u110B\u1165\u11B8', '\u1109\u1161\u11AB\u110E\u1162\u11A8', '\u1109\u1161\u11AF\u1105\u1175\u11B7', '\u1109\u1161\u11AF\u110B\u1175\u11AB', '\u1109\u1161\u11AF\u110D\u1161\u11A8', '\u1109\u1161\u11B7\u1100\u1168\u1110\u1161\u11BC', '\u1109\u1161\u11B7\u1100\u116E\u11A8', '\u1109\u1161\u11B7\u1109\u1175\u11B8', '\u1109\u1161\u11B7\u110B\u116F\u11AF', '\u1109\u1161\u11B7\u110E\u1169\u11AB', '\u1109\u1161\u11BC\u1100\u116A\u11AB', '\u1109\u1161\u11BC\u1100\u1173\u11B7', '\u1109\u1161\u11BC\u1103\u1162', '\u1109\u1161\u11BC\u1105\u1172', '\u1109\u1161\u11BC\u1107\u1161\u11AB\u1100\u1175', '\u1109\u1161\u11BC\u1109\u1161\u11BC', '\u1109\u1161\u11BC\u1109\u1175\u11A8', '\u1109\u1161\u11BC\u110B\u1165\u11B8', '\u1109\u1161\u11BC\u110B\u1175\u11AB', '\u1109\u1161\u11BC\u110C\u1161', '\u1109\u1161\u11BC\u110C\u1165\u11B7', '\u1109\u1161\u11BC\u110E\u1165', '\u1109\u1161\u11BC\u110E\u116E', '\u1109\u1161\u11BC\u1110\u1162', '\u1109\u1161\u11BC\u1111\u116D', '\u1109\u1161\u11BC\u1111\u116E\u11B7', '\u1109\u1161\u11BC\u1112\u116A\u11BC', '\u1109\u1162\u1107\u1167\u11A8', '\u1109\u1162\u11A8\u1101\u1161\u11AF', '\u1109\u1162\u11A8\u110B\u1167\u11AB\u1111\u1175\u11AF', '\u1109\u1162\u11BC\u1100\u1161\u11A8', '\u1109\u1162\u11BC\u1106\u1167\u11BC', '\u1109\u1162\u11BC\u1106\u116E\u11AF', '\u1109\u1162\u11BC\u1107\u1161\u11BC\u1109\u1169\u11BC', '\u1109\u1162\u11BC\u1109\u1161\u11AB', '\u1109\u1162\u11BC\u1109\u1165\u11AB', '\u1109\u1162\u11BC\u1109\u1175\u11AB', '\u1109\u1162\u11BC\u110B\u1175\u11AF', '\u1109\u1162\u11BC\u1112\u116A\u11AF', '\u1109\u1165\u1105\u1161\u11B8', '\u1109\u1165\u1105\u1173\u11AB', '\u1109\u1165\u1106\u1167\u11BC', '\u1109\u1165\u1106\u1175\u11AB', '\u1109\u1165\u1107\u1175\u1109\u1173', '\u1109\u1165\u110B\u1163\u11BC', '\u1109\u1165\u110B\u116E\u11AF', '\u1109\u1165\u110C\u1165\u11A8', '\u1109\u1165\u110C\u1165\u11B7', '\u1109\u1165\u110D\u1169\u11A8', '\u1109\u1165\u110F\u1173\u11AF', '\u1109\u1165\u11A8\u1109\u1161', '\u1109\u1165\u11A8\u110B\u1172', '\u1109\u1165\u11AB\u1100\u1165', '\u1109\u1165\u11AB\u1106\u116E\u11AF', '\u1109\u1165\u11AB\u1107\u1162', '\u1109\u1165\u11AB\u1109\u1162\u11BC', '\u1109\u1165\u11AB\u1109\u116E', '\u1109\u1165\u11AB\u110B\u116F\u11AB', '\u1109\u1165\u11AB\u110C\u1161\u11BC', '\u1109\u1165\u11AB\u110C\u1165\u11AB', '\u1109\u1165\u11AB\u1110\u1162\u11A8', '\u1109\u1165\u11AB\u1111\u116E\u11BC\u1100\u1175', '\u1109\u1165\u11AF\u1100\u1165\u110C\u1175', '\u1109\u1165\u11AF\u1102\u1161\u11AF', '\u1109\u1165\u11AF\u1105\u1165\u11BC\u1110\u1161\u11BC', '\u1109\u1165\u11AF\u1106\u1167\u11BC', '\u1109\u1165\u11AF\u1106\u116E\u11AB', '\u1109\u1165\u11AF\u1109\u1161', '\u1109\u1165\u11AF\u110B\u1161\u11A8\u1109\u1161\u11AB', '\u1109\u1165\u11AF\u110E\u1175', '\u1109\u1165\u11AF\u1110\u1161\u11BC', '\u1109\u1165\u11B8\u110A\u1175', '\u1109\u1165\u11BC\u1100\u1169\u11BC', '\u1109\u1165\u11BC\u1103\u1161\u11BC', '\u1109\u1165\u11BC\u1106\u1167\u11BC', '\u1109\u1165\u11BC\u1107\u1167\u11AF', '\u1109\u1165\u11BC\u110B\u1175\u11AB', '\u1109\u1165\u11BC\u110C\u1161\u11BC', '\u1109\u1165\u11BC\u110C\u1165\u11A8', '\u1109\u1165\u11BC\u110C\u1175\u11AF', '\u1109\u1165\u11BC\u1112\u1161\u11B7', '\u1109\u1166\u1100\u1173\u11B7', '\u1109\u1166\u1106\u1175\u1102\u1161', '\u1109\u1166\u1109\u1161\u11BC', '\u1109\u1166\u110B\u116F\u11AF', '\u1109\u1166\u110C\u1169\u11BC\u1103\u1162\u110B\u116A\u11BC', '\u1109\u1166\u1110\u1161\u11A8', '\u1109\u1166\u11AB\u1110\u1165', '\u1109\u1166\u11AB\u1110\u1175\u1106\u1175\u1110\u1165', '\u1109\u1166\u11BA\u110D\u1162', '\u1109\u1169\u1100\u1172\u1106\u1169', '\u1109\u1169\u1100\u1173\u11A8\u110C\u1165\u11A8', '\u1109\u1169\u1100\u1173\u11B7', '\u1109\u1169\u1102\u1161\u1100\u1175', '\u1109\u1169\u1102\u1167\u11AB', '\u1109\u1169\u1103\u1173\u11A8', '\u1109\u1169\u1106\u1161\u11BC', '\u1109\u1169\u1106\u116E\u11AB', '\u1109\u1169\u1109\u1165\u11AF', '\u1109\u1169\u1109\u1169\u11A8', '\u1109\u1169\u110B\u1161\u1100\u116A', '\u1109\u1169\u110B\u116D\u11BC', '\u1109\u1169\u110B\u116F\u11AB', '\u1109\u1169\u110B\u1173\u11B7', '\u1109\u1169\u110C\u116E\u11BC\u1112\u1175', '\u1109\u1169\u110C\u1175\u1111\u116E\u11B7', '\u1109\u1169\u110C\u1175\u11AF', '\u1109\u1169\u1111\u116E\u11BC', '\u1109\u1169\u1112\u1167\u11BC', '\u1109\u1169\u11A8\u1103\u1161\u11B7', '\u1109\u1169\u11A8\u1103\u1169', '\u1109\u1169\u11A8\u110B\u1169\u11BA', '\u1109\u1169\u11AB\u1100\u1161\u1105\u1161\u11A8', '\u1109\u1169\u11AB\u1100\u1175\u11AF', '\u1109\u1169\u11AB\u1102\u1167', '\u1109\u1169\u11AB\u1102\u1175\u11B7', '\u1109\u1169\u11AB\u1103\u1173\u11BC', '\u1109\u1169\u11AB\u1106\u1169\u11A8', '\u1109\u1169\u11AB\u1108\u1167\u11A8', '\u1109\u1169\u11AB\u1109\u1175\u11AF', '\u1109\u1169\u11AB\u110C\u1175\u11AF', '\u1109\u1169\u11AB\u1110\u1169\u11B8', '\u1109\u1169\u11AB\u1112\u1162', '\u1109\u1169\u11AF\u110C\u1175\u11A8\u1112\u1175', '\u1109\u1169\u11B7\u110A\u1175', '\u1109\u1169\u11BC\u110B\u1161\u110C\u1175', '\u1109\u1169\u11BC\u110B\u1175', '\u1109\u1169\u11BC\u1111\u1167\u11AB', '\u1109\u116C\u1100\u1169\u1100\u1175', '\u1109\u116D\u1111\u1175\u11BC', '\u1109\u116E\u1100\u1165\u11AB', '\u1109\u116E\u1102\u1167\u11AB', '\u1109\u116E\u1103\u1161\u11AB', '\u1109\u116E\u1103\u1169\u11BA\u1106\u116E\u11AF', '\u1109\u116E\u1103\u1169\u11BC\u110C\u1165\u11A8', '\u1109\u116E\u1106\u1167\u11AB', '\u1109\u116E\u1106\u1167\u11BC', '\u1109\u116E\u1107\u1161\u11A8', '\u1109\u116E\u1109\u1161\u11BC', '\u1109\u116E\u1109\u1165\u11A8', '\u1109\u116E\u1109\u116E\u11AF', '\u1109\u116E\u1109\u1175\u1105\u1169', '\u1109\u116E\u110B\u1165\u11B8', '\u1109\u116E\u110B\u1167\u11B7', '\u1109\u116E\u110B\u1167\u11BC', '\u1109\u116E\u110B\u1175\u11B8', '\u1109\u116E\u110C\u116E\u11AB', '\u1109\u116E\u110C\u1175\u11B8', '\u1109\u116E\u110E\u116E\u11AF', '\u1109\u116E\u110F\u1165\u11BA', '\u1109\u116E\u1111\u1175\u11AF', '\u1109\u116E\u1112\u1161\u11A8', '\u1109\u116E\u1112\u1165\u11B7\u1109\u1162\u11BC', '\u1109\u116E\u1112\u116A\u1100\u1175', '\u1109\u116E\u11A8\u1102\u1167', '\u1109\u116E\u11A8\u1109\u1169', '\u1109\u116E\u11A8\u110C\u1166', '\u1109\u116E\u11AB\u1100\u1161\u11AB', '\u1109\u116E\u11AB\u1109\u1165', '\u1109\u116E\u11AB\u1109\u116E', '\u1109\u116E\u11AB\u1109\u1175\u11A8\u1100\u1161\u11AB', '\u1109\u116E\u11AB\u110B\u1171', '\u1109\u116E\u11AE\u1100\u1161\u1105\u1161\u11A8', '\u1109\u116E\u11AF\u1107\u1167\u11BC', '\u1109\u116E\u11AF\u110C\u1175\u11B8', '\u1109\u116E\u11BA\u110C\u1161', '\u1109\u1173\u1102\u1175\u11B7', '\u1109\u1173\u1106\u116E\u11AF', '\u1109\u1173\u1109\u1173\u1105\u1169', '\u1109\u1173\u1109\u1173\u11BC', '\u1109\u1173\u110B\u1170\u1110\u1165', '\u1109\u1173\u110B\u1171\u110E\u1175', '\u1109\u1173\u110F\u1166\u110B\u1175\u1110\u1173', '\u1109\u1173\u1110\u1172\u1103\u1175\u110B\u1169', '\u1109\u1173\u1110\u1173\u1105\u1166\u1109\u1173', '\u1109\u1173\u1111\u1169\u110E\u1173', '\u1109\u1173\u11AF\u110D\u1165\u11A8', '\u1109\u1173\u11AF\u1111\u1173\u11B7', '\u1109\u1173\u11B8\u1100\u116A\u11AB', '\u1109\u1173\u11B8\u1100\u1175', '\u1109\u1173\u11BC\u1100\u1162\u11A8', '\u1109\u1173\u11BC\u1105\u1175', '\u1109\u1173\u11BC\u1107\u116E', '\u1109\u1173\u11BC\u110B\u116D\u11BC\u110E\u1161', '\u1109\u1173\u11BC\u110C\u1175\u11AB', '\u1109\u1175\u1100\u1161\u11A8', '\u1109\u1175\u1100\u1161\u11AB', '\u1109\u1175\u1100\u1169\u11AF', '\u1109\u1175\u1100\u1173\u11B7\u110E\u1175', '\u1109\u1175\u1102\u1161\u1105\u1175\u110B\u1169', '\u1109\u1175\u1103\u1162\u11A8', '\u1109\u1175\u1105\u1175\u110C\u1173', '\u1109\u1175\u1106\u1166\u11AB\u1110\u1173', '\u1109\u1175\u1106\u1175\u11AB', '\u1109\u1175\u1107\u116E\u1106\u1169', '\u1109\u1175\u1109\u1165\u11AB', '\u1109\u1175\u1109\u1165\u11AF', '\u1109\u1175\u1109\u1173\u1110\u1166\u11B7', '\u1109\u1175\u110B\u1161\u1107\u1165\u110C\u1175', '\u1109\u1175\u110B\u1165\u1106\u1165\u1102\u1175', '\u1109\u1175\u110B\u116F\u11AF', '\u1109\u1175\u110B\u1175\u11AB', '\u1109\u1175\u110B\u1175\u11AF', '\u1109\u1175\u110C\u1161\u11A8', '\u1109\u1175\u110C\u1161\u11BC', '\u1109\u1175\u110C\u1165\u11AF', '\u1109\u1175\u110C\u1165\u11B7', '\u1109\u1175\u110C\u116E\u11BC', '\u1109\u1175\u110C\u1173\u11AB', '\u1109\u1175\u110C\u1175\u11B8', '\u1109\u1175\u110E\u1165\u11BC', '\u1109\u1175\u1112\u1161\u11B8', '\u1109\u1175\u1112\u1165\u11B7', '\u1109\u1175\u11A8\u1100\u116E', '\u1109\u1175\u11A8\u1100\u1175', '\u1109\u1175\u11A8\u1103\u1161\u11BC', '\u1109\u1175\u11A8\u1105\u1163\u11BC', '\u1109\u1175\u11A8\u1105\u116D\u1111\u116E\u11B7', '\u1109\u1175\u11A8\u1106\u116E\u11AF', '\u1109\u1175\u11A8\u1108\u1161\u11BC', '\u1109\u1175\u11A8\u1109\u1161', '\u1109\u1175\u11A8\u1109\u1162\u11BC\u1112\u116A\u11AF', '\u1109\u1175\u11A8\u110E\u1169', '\u1109\u1175\u11A8\u1110\u1161\u11A8', '\u1109\u1175\u11A8\u1111\u116E\u11B7', '\u1109\u1175\u11AB\u1100\u1169', '\u1109\u1175\u11AB\u1100\u1172', '\u1109\u1175\u11AB\u1102\u1167\u11B7', '\u1109\u1175\u11AB\u1106\u116E\u11AB', '\u1109\u1175\u11AB\u1107\u1161\u11AF', '\u1109\u1175\u11AB\u1107\u1175', '\u1109\u1175\u11AB\u1109\u1161', '\u1109\u1175\u11AB\u1109\u1166', '\u1109\u1175\u11AB\u110B\u116D\u11BC', '\u1109\u1175\u11AB\u110C\u1166\u1111\u116E\u11B7', '\u1109\u1175\u11AB\u110E\u1165\u11BC', '\u1109\u1175\u11AB\u110E\u1166', '\u1109\u1175\u11AB\u1112\u116A', '\u1109\u1175\u11AF\u1100\u1161\u11B7', '\u1109\u1175\u11AF\u1102\u1162', '\u1109\u1175\u11AF\u1105\u1167\u11A8', '\u1109\u1175\u11AF\u1105\u1168', '\u1109\u1175\u11AF\u1106\u1161\u11BC', '\u1109\u1175\u11AF\u1109\u116E', '\u1109\u1175\u11AF\u1109\u1173\u11B8', '\u1109\u1175\u11AF\u1109\u1175', '\u1109\u1175\u11AF\u110C\u1161\u11BC', '\u1109\u1175\u11AF\u110C\u1165\u11BC', '\u1109\u1175\u11AF\u110C\u1175\u11AF\u110C\u1165\u11A8', '\u1109\u1175\u11AF\u110E\u1165\u11AB', '\u1109\u1175\u11AF\u110E\u1166', '\u1109\u1175\u11AF\u110F\u1165\u11BA', '\u1109\u1175\u11AF\u1110\u1162', '\u1109\u1175\u11AF\u1111\u1162', '\u1109\u1175\u11AF\u1112\u1165\u11B7', '\u1109\u1175\u11AF\u1112\u1167\u11AB', '\u1109\u1175\u11B7\u1105\u1175', '\u1109\u1175\u11B7\u1107\u116E\u1105\u1173\u11B7', '\u1109\u1175\u11B7\u1109\u1161', '\u1109\u1175\u11B7\u110C\u1161\u11BC', '\u1109\u1175\u11B7\u110C\u1165\u11BC', '\u1109\u1175\u11B7\u1111\u1161\u11AB', '\u110A\u1161\u11BC\u1103\u116E\u11BC\u110B\u1175', '\u110A\u1175\u1105\u1173\u11B7', '\u110A\u1175\u110B\u1161\u11BA', '\u110B\u1161\u1100\u1161\u110A\u1175', '\u110B\u1161\u1102\u1161\u110B\u116E\u11AB\u1109\u1165', '\u110B\u1161\u1103\u1173\u1102\u1175\u11B7', '\u110B\u1161\u1103\u1173\u11AF', '\u110B\u1161\u1109\u1171\u110B\u116E\u11B7', '\u110B\u1161\u1109\u1173\u1111\u1161\u11AF\u1110\u1173', '\u110B\u1161\u1109\u1175\u110B\u1161', '\u110B\u1161\u110B\u116E\u11AF\u1105\u1165', '\u110B\u1161\u110C\u1165\u110A\u1175', '\u110B\u1161\u110C\u116E\u11B7\u1106\u1161', '\u110B\u1161\u110C\u1175\u11A8', '\u110B\u1161\u110E\u1175\u11B7', '\u110B\u1161\u1111\u1161\u1110\u1173', '\u110B\u1161\u1111\u1173\u1105\u1175\u110F\u1161', '\u110B\u1161\u1111\u1173\u11B7', '\u110B\u1161\u1112\u1169\u11B8', '\u110B\u1161\u1112\u1173\u11AB', '\u110B\u1161\u11A8\u1100\u1175', '\u110B\u1161\u11A8\u1106\u1169\u11BC', '\u110B\u1161\u11A8\u1109\u116E', '\u110B\u1161\u11AB\u1100\u1162', '\u110B\u1161\u11AB\u1100\u1167\u11BC', '\u110B\u1161\u11AB\u1100\u116A', '\u110B\u1161\u11AB\u1102\u1162', '\u110B\u1161\u11AB\u1102\u1167\u11BC', '\u110B\u1161\u11AB\u1103\u1169\u11BC', '\u110B\u1161\u11AB\u1107\u1161\u11BC', '\u110B\u1161\u11AB\u1107\u116E', '\u110B\u1161\u11AB\u110C\u116E', '\u110B\u1161\u11AF\u1105\u116E\u1106\u1175\u1102\u1172\u11B7', '\u110B\u1161\u11AF\u110F\u1169\u110B\u1169\u11AF', '\u110B\u1161\u11B7\u1109\u1175', '\u110B\u1161\u11B7\u110F\u1165\u11BA', '\u110B\u1161\u11B8\u1105\u1167\u11A8', '\u110B\u1161\u11C1\u1102\u1161\u11AF', '\u110B\u1161\u11C1\u1106\u116E\u11AB', '\u110B\u1162\u110B\u1175\u11AB', '\u110B\u1162\u110C\u1165\u11BC', '\u110B\u1162\u11A8\u1109\u116E', '\u110B\u1162\u11AF\u1107\u1165\u11B7', '\u110B\u1163\u1100\u1161\u11AB', '\u110B\u1163\u1103\u1161\u11AB', '\u110B\u1163\u110B\u1169\u11BC', '\u110B\u1163\u11A8\u1100\u1161\u11AB', '\u110B\u1163\u11A8\u1100\u116E\u11A8', '\u110B\u1163\u11A8\u1109\u1169\u11A8', '\u110B\u1163\u11A8\u1109\u116E', '\u110B\u1163\u11A8\u110C\u1165\u11B7', '\u110B\u1163\u11A8\u1111\u116E\u11B7', '\u110B\u1163\u11A8\u1112\u1169\u11AB\u1102\u1167', '\u110B\u1163\u11BC\u1102\u1167\u11B7', '\u110B\u1163\u11BC\u1105\u1167\u11A8', '\u110B\u1163\u11BC\u1106\u1161\u11AF', '\u110B\u1163\u11BC\u1107\u1162\u110E\u116E', '\u110B\u1163\u11BC\u110C\u116E', '\u110B\u1163\u11BC\u1111\u1161', '\u110B\u1165\u1103\u116E\u11B7', '\u110B\u1165\u1105\u1167\u110B\u116E\u11B7', '\u110B\u1165\u1105\u1173\u11AB', '\u110B\u1165\u110C\u1166\u11BA\u1107\u1161\u11B7', '\u110B\u1165\u110D\u1162\u11BB\u1103\u1173\u11AB', '\u110B\u1165\u110D\u1165\u1103\u1161\u1100\u1161', '\u110B\u1165\u110D\u1165\u11AB\u110C\u1175', '\u110B\u1165\u11AB\u1102\u1175', '\u110B\u1165\u11AB\u1103\u1165\u11A8', '\u110B\u1165\u11AB\u1105\u1169\u11AB', '\u110B\u1165\u11AB\u110B\u1165', '\u110B\u1165\u11AF\u1100\u116E\u11AF', '\u110B\u1165\u11AF\u1105\u1173\u11AB', '\u110B\u1165\u11AF\u110B\u1173\u11B7', '\u110B\u1165\u11AF\u1111\u1175\u11BA', '\u110B\u1165\u11B7\u1106\u1161', '\u110B\u1165\u11B8\u1106\u116E', '\u110B\u1165\u11B8\u110C\u1169\u11BC', '\u110B\u1165\u11B8\u110E\u1166', '\u110B\u1165\u11BC\u1103\u1165\u11BC\u110B\u1175', '\u110B\u1165\u11BC\u1106\u1161\u11BC', '\u110B\u1165\u11BC\u1110\u1165\u1105\u1175', '\u110B\u1165\u11BD\u1100\u1173\u110C\u1166', '\u110B\u1166\u1102\u1165\u110C\u1175', '\u110B\u1166\u110B\u1165\u110F\u1165\u11AB', '\u110B\u1166\u11AB\u110C\u1175\u11AB', '\u110B\u1167\u1100\u1165\u11AB', '\u110B\u1167\u1100\u1169\u1109\u1162\u11BC', '\u110B\u1167\u1100\u116A\u11AB', '\u110B\u1167\u1100\u116E\u11AB', '\u110B\u1167\u1100\u116F\u11AB', '\u110B\u1167\u1103\u1162\u1109\u1162\u11BC', '\u110B\u1167\u1103\u1165\u11B2', '\u110B\u1167\u1103\u1169\u11BC\u1109\u1162\u11BC', '\u110B\u1167\u1103\u1173\u11AB', '\u110B\u1167\u1105\u1169\u11AB', '\u110B\u1167\u1105\u1173\u11B7', '\u110B\u1167\u1109\u1165\u11BA', '\u110B\u1167\u1109\u1165\u11BC', '\u110B\u1167\u110B\u116A\u11BC', '\u110B\u1167\u110B\u1175\u11AB', '\u110B\u1167\u110C\u1165\u11AB\u1112\u1175', '\u110B\u1167\u110C\u1175\u11A8\u110B\u116F\u11AB', '\u110B\u1167\u1112\u1161\u11A8\u1109\u1162\u11BC', '\u110B\u1167\u1112\u1162\u11BC', '\u110B\u1167\u11A8\u1109\u1161', '\u110B\u1167\u11A8\u1109\u1175', '\u110B\u1167\u11A8\u1112\u1161\u11AF', '\u110B\u1167\u11AB\u1100\u1167\u11AF', '\u110B\u1167\u11AB\u1100\u116E', '\u110B\u1167\u11AB\u1100\u1173\u11A8', '\u110B\u1167\u11AB\u1100\u1175', '\u110B\u1167\u11AB\u1105\u1161\u11A8', '\u110B\u1167\u11AB\u1109\u1165\u11AF', '\u110B\u1167\u11AB\u1109\u1166', '\u110B\u1167\u11AB\u1109\u1169\u11A8', '\u110B\u1167\u11AB\u1109\u1173\u11B8', '\u110B\u1167\u11AB\u110B\u1162', '\u110B\u1167\u11AB\u110B\u1168\u110B\u1175\u11AB', '\u110B\u1167\u11AB\u110B\u1175\u11AB', '\u110B\u1167\u11AB\u110C\u1161\u11BC', '\u110B\u1167\u11AB\u110C\u116E', '\u110B\u1167\u11AB\u110E\u116E\u11AF', '\u110B\u1167\u11AB\u1111\u1175\u11AF', '\u110B\u1167\u11AB\u1112\u1161\u11B8', '\u110B\u1167\u11AB\u1112\u1172', '\u110B\u1167\u11AF\u1100\u1175', '\u110B\u1167\u11AF\u1106\u1162', '\u110B\u1167\u11AF\u1109\u116C', '\u110B\u1167\u11AF\u1109\u1175\u11B7\u1112\u1175', '\u110B\u1167\u11AF\u110C\u1165\u11BC', '\u110B\u1167\u11AF\u110E\u1161', '\u110B\u1167\u11AF\u1112\u1173\u11AF', '\u110B\u1167\u11B7\u1105\u1167', '\u110B\u1167\u11B8\u1109\u1165', '\u110B\u1167\u11BC\u1100\u116E\u11A8', '\u110B\u1167\u11BC\u1102\u1161\u11B7', '\u110B\u1167\u11BC\u1109\u1161\u11BC', '\u110B\u1167\u11BC\u110B\u1163\u11BC', '\u110B\u1167\u11BC\u110B\u1167\u11A8', '\u110B\u1167\u11BC\u110B\u116E\u11BC', '\u110B\u1167\u11BC\u110B\u116F\u11AB\u1112\u1175', '\u110B\u1167\u11BC\u1112\u1161', '\u110B\u1167\u11BC\u1112\u1163\u11BC', '\u110B\u1167\u11BC\u1112\u1169\u11AB', '\u110B\u1167\u11BC\u1112\u116A', '\u110B\u1167\u11C1\u1100\u116E\u1105\u1175', '\u110B\u1167\u11C1\u1107\u1161\u11BC', '\u110B\u1167\u11C1\u110C\u1175\u11B8', '\u110B\u1168\u1100\u1161\u11B7', '\u110B\u1168\u1100\u1173\u11B7', '\u110B\u1168\u1107\u1161\u11BC', '\u110B\u1168\u1109\u1161\u11AB', '\u110B\u1168\u1109\u1161\u11BC', '\u110B\u1168\u1109\u1165\u11AB', '\u110B\u1168\u1109\u116E\u11AF', '\u110B\u1168\u1109\u1173\u11B8', '\u110B\u1168\u1109\u1175\u11A8\u110C\u1161\u11BC', '\u110B\u1168\u110B\u1163\u11A8', '\u110B\u1168\u110C\u1165\u11AB', '\u110B\u1168\u110C\u1165\u11AF', '\u110B\u1168\u110C\u1165\u11BC', '\u110B\u1168\u110F\u1165\u11AB\u1103\u1162', '\u110B\u1168\u11BA\u1102\u1161\u11AF', '\u110B\u1169\u1102\u1173\u11AF', '\u110B\u1169\u1105\u1161\u11A8', '\u110B\u1169\u1105\u1162\u11BA\u1103\u1169\u11BC\u110B\u1161\u11AB', '\u110B\u1169\u1105\u1166\u11AB\u110C\u1175', '\u110B\u1169\u1105\u1169\u110C\u1175', '\u110B\u1169\u1105\u1173\u11AB\u1107\u1161\u11AF', '\u110B\u1169\u1107\u1173\u11AB', '\u110B\u1169\u1109\u1175\u11B8', '\u110B\u1169\u110B\u1167\u11B7', '\u110B\u1169\u110B\u116F\u11AF', '\u110B\u1169\u110C\u1165\u11AB', '\u110B\u1169\u110C\u1175\u11A8', '\u110B\u1169\u110C\u1175\u11BC\u110B\u1165', '\u110B\u1169\u1111\u1166\u1105\u1161', '\u110B\u1169\u1111\u1175\u1109\u1173\u1110\u1166\u11AF', '\u110B\u1169\u1112\u1175\u1105\u1167', '\u110B\u1169\u11A8\u1109\u1161\u11BC', '\u110B\u1169\u11A8\u1109\u116E\u1109\u116E', '\u110B\u1169\u11AB\u1100\u1161\u11BD', '\u110B\u1169\u11AB\u1105\u1161\u110B\u1175\u11AB', '\u110B\u1169\u11AB\u1106\u1169\u11B7', '\u110B\u1169\u11AB\u110C\u1169\u11BC\u110B\u1175\u11AF', '\u110B\u1169\u11AB\u1110\u1169\u11BC', '\u110B\u1169\u11AF\u1100\u1161\u110B\u1173\u11AF', '\u110B\u1169\u11AF\u1105\u1175\u11B7\u1111\u1175\u11A8', '\u110B\u1169\u11AF\u1112\u1162', '\u110B\u1169\u11BA\u110E\u1161\u1105\u1175\u11B7', '\u110B\u116A\u110B\u1175\u1109\u1167\u110E\u1173', '\u110B\u116A\u110B\u1175\u11AB', '\u110B\u116A\u11AB\u1109\u1165\u11BC', '\u110B\u116A\u11AB\u110C\u1165\u11AB', '\u110B\u116A\u11BC\u1107\u1175', '\u110B\u116A\u11BC\u110C\u1161', '\u110B\u116B\u1102\u1163\u1112\u1161\u1106\u1167\u11AB', '\u110B\u116B\u11AB\u110C\u1175', '\u110B\u116C\u1100\u1161\u11BA\u110C\u1175\u11B8', '\u110B\u116C\u1100\u116E\u11A8', '\u110B\u116C\u1105\u1169\u110B\u116E\u11B7', '\u110B\u116C\u1109\u1161\u11B7\u110E\u1169\u11AB', '\u110B\u116C\u110E\u116E\u11AF', '\u110B\u116C\u110E\u1175\u11B7', '\u110B\u116C\u1112\u1161\u11AF\u1106\u1165\u1102\u1175', '\u110B\u116C\u11AB\u1107\u1161\u11AF', '\u110B\u116C\u11AB\u1109\u1169\u11AB', '\u110B\u116C\u11AB\u110D\u1169\u11A8', '\u110B\u116D\u1100\u1173\u11B7', '\u110B\u116D\u110B\u1175\u11AF', '\u110B\u116D\u110C\u1173\u11B7', '\u110B\u116D\u110E\u1165\u11BC', '\u110B\u116D\u11BC\u1100\u1175', '\u110B\u116D\u11BC\u1109\u1165', '\u110B\u116D\u11BC\u110B\u1165', '\u110B\u116E\u1109\u1161\u11AB', '\u110B\u116E\u1109\u1165\u11AB', '\u110B\u116E\u1109\u1173\u11BC', '\u110B\u116E\u110B\u1167\u11AB\u1112\u1175', '\u110B\u116E\u110C\u1165\u11BC', '\u110B\u116E\u110E\u1166\u1100\u116E\u11A8', '\u110B\u116E\u1111\u1167\u11AB', '\u110B\u116E\u11AB\u1103\u1169\u11BC', '\u110B\u116E\u11AB\u1106\u1167\u11BC', '\u110B\u116E\u11AB\u1107\u1161\u11AB', '\u110B\u116E\u11AB\u110C\u1165\u11AB', '\u110B\u116E\u11AB\u1112\u1162\u11BC', '\u110B\u116E\u11AF\u1109\u1161\u11AB', '\u110B\u116E\u11AF\u110B\u1173\u11B7', '\u110B\u116E\u11B7\u110C\u1175\u11A8\u110B\u1175\u11B7', '\u110B\u116E\u11BA\u110B\u1165\u1105\u1173\u11AB', '\u110B\u116E\u11BA\u110B\u1173\u11B7', '\u110B\u116F\u1102\u1161\u11A8', '\u110B\u116F\u11AB\u1100\u1169', '\u110B\u116F\u11AB\u1105\u1162', '\u110B\u116F\u11AB\u1109\u1165', '\u110B\u116F\u11AB\u1109\u116E\u11BC\u110B\u1175', '\u110B\u116F\u11AB\u110B\u1175\u11AB', '\u110B\u116F\u11AB\u110C\u1161\u11BC', '\u110B\u116F\u11AB\u1111\u1175\u1109\u1173', '\u110B\u116F\u11AF\u1100\u1173\u11B8', '\u110B\u116F\u11AF\u1103\u1173\u110F\u1165\u11B8', '\u110B\u116F\u11AF\u1109\u1166', '\u110B\u116F\u11AF\u110B\u116D\u110B\u1175\u11AF', '\u110B\u1170\u110B\u1175\u1110\u1165', '\u110B\u1171\u1107\u1161\u11AB', '\u110B\u1171\u1107\u1165\u11B8', '\u110B\u1171\u1109\u1165\u11BC', '\u110B\u1171\u110B\u116F\u11AB', '\u110B\u1171\u1112\u1165\u11B7', '\u110B\u1171\u1112\u1167\u11B8', '\u110B\u1171\u11BA\u1109\u1161\u1105\u1161\u11B7', '\u110B\u1172\u1102\u1161\u11AB\u1112\u1175', '\u110B\u1172\u1105\u1165\u11B8', '\u110B\u1172\u1106\u1167\u11BC', '\u110B\u1172\u1106\u116E\u11AF', '\u110B\u1172\u1109\u1161\u11AB', '\u110B\u1172\u110C\u1165\u11A8', '\u110B\u1172\u110E\u1175\u110B\u116F\u11AB', '\u110B\u1172\u1112\u1161\u11A8', '\u110B\u1172\u1112\u1162\u11BC', '\u110B\u1172\u1112\u1167\u11BC', '\u110B\u1172\u11A8\u1100\u116E\u11AB', '\u110B\u1172\u11A8\u1109\u1161\u11BC', '\u110B\u1172\u11A8\u1109\u1175\u11B8', '\u110B\u1172\u11A8\u110E\u1166', '\u110B\u1173\u11AB\u1112\u1162\u11BC', '\u110B\u1173\u11B7\u1105\u1167\u11A8', '\u110B\u1173\u11B7\u1105\u116D', '\u110B\u1173\u11B7\u1107\u1161\u11AB', '\u110B\u1173\u11B7\u1109\u1165\u11BC', '\u110B\u1173\u11B7\u1109\u1175\u11A8', '\u110B\u1173\u11B7\u110B\u1161\u11A8', '\u110B\u1173\u11B7\u110C\u116E', '\u110B\u1174\u1100\u1167\u11AB', '\u110B\u1174\u1102\u1169\u11AB', '\u110B\u1174\u1106\u116E\u11AB', '\u110B\u1174\u1107\u1169\u11A8', '\u110B\u1174\u1109\u1175\u11A8', '\u110B\u1174\u1109\u1175\u11B7', '\u110B\u1174\u110B\u116C\u1105\u1169', '\u110B\u1174\u110B\u116D\u11A8', '\u110B\u1174\u110B\u116F\u11AB', '\u110B\u1174\u1112\u1161\u11A8', '\u110B\u1175\u1100\u1165\u11BA', '\u110B\u1175\u1100\u1169\u11BA', '\u110B\u1175\u1102\u1167\u11B7', '\u110B\u1175\u1102\u1169\u11B7', '\u110B\u1175\u1103\u1161\u11AF', '\u110B\u1175\u1103\u1162\u1105\u1169', '\u110B\u1175\u1103\u1169\u11BC', '\u110B\u1175\u1105\u1165\u11C2\u1100\u1166', '\u110B\u1175\u1105\u1167\u11A8\u1109\u1165', '\u110B\u1175\u1105\u1169\u11AB\u110C\u1165\u11A8', '\u110B\u1175\u1105\u1173\u11B7', '\u110B\u1175\u1106\u1175\u11AB', '\u110B\u1175\u1107\u1161\u11AF\u1109\u1169', '\u110B\u1175\u1107\u1167\u11AF', '\u110B\u1175\u1107\u116E\u11AF', '\u110B\u1175\u1108\u1161\u11AF', '\u110B\u1175\u1109\u1161\u11BC', '\u110B\u1175\u1109\u1165\u11BC', '\u110B\u1175\u1109\u1173\u11AF', '\u110B\u1175\u110B\u1163\u1100\u1175', '\u110B\u1175\u110B\u116D\u11BC', '\u110B\u1175\u110B\u116E\u11BA', '\u110B\u1175\u110B\u116F\u11AF', '\u110B\u1175\u110B\u1173\u11A8\u1100\u1169', '\u110B\u1175\u110B\u1175\u11A8', '\u110B\u1175\u110C\u1165\u11AB', '\u110B\u1175\u110C\u116E\u11BC', '\u110B\u1175\u1110\u1173\u11AE\u1102\u1161\u11AF', '\u110B\u1175\u1110\u1173\u11AF', '\u110B\u1175\u1112\u1169\u11AB', '\u110B\u1175\u11AB\u1100\u1161\u11AB', '\u110B\u1175\u11AB\u1100\u1167\u11A8', '\u110B\u1175\u11AB\u1100\u1169\u11BC', '\u110B\u1175\u11AB\u1100\u116E', '\u110B\u1175\u11AB\u1100\u1173\u11AB', '\u110B\u1175\u11AB\u1100\u1175', '\u110B\u1175\u11AB\u1103\u1169', '\u110B\u1175\u11AB\u1105\u1172', '\u110B\u1175\u11AB\u1106\u116E\u11AF', '\u110B\u1175\u11AB\u1109\u1162\u11BC', '\u110B\u1175\u11AB\u1109\u116B', '\u110B\u1175\u11AB\u110B\u1167\u11AB', '\u110B\u1175\u11AB\u110B\u116F\u11AB', '\u110B\u1175\u11AB\u110C\u1162', '\u110B\u1175\u11AB\u110C\u1169\u11BC', '\u110B\u1175\u11AB\u110E\u1165\u11AB', '\u110B\u1175\u11AB\u110E\u1166', '\u110B\u1175\u11AB\u1110\u1165\u1102\u1166\u11BA', '\u110B\u1175\u11AB\u1112\u1161', '\u110B\u1175\u11AB\u1112\u1167\u11BC', '\u110B\u1175\u11AF\u1100\u1169\u11B8', '\u110B\u1175\u11AF\u1100\u1175', '\u110B\u1175\u11AF\u1103\u1161\u11AB', '\u110B\u1175\u11AF\u1103\u1162', '\u110B\u1175\u11AF\u1103\u1173\u11BC', '\u110B\u1175\u11AF\u1107\u1161\u11AB', '\u110B\u1175\u11AF\u1107\u1169\u11AB', '\u110B\u1175\u11AF\u1107\u116E', '\u110B\u1175\u11AF\u1109\u1161\u11BC', '\u110B\u1175\u11AF\u1109\u1162\u11BC', '\u110B\u1175\u11AF\u1109\u1169\u11AB', '\u110B\u1175\u11AF\u110B\u116D\u110B\u1175\u11AF', '\u110B\u1175\u11AF\u110B\u116F\u11AF', '\u110B\u1175\u11AF\u110C\u1165\u11BC', '\u110B\u1175\u11AF\u110C\u1169\u11BC', '\u110B\u1175\u11AF\u110C\u116E\u110B\u1175\u11AF', '\u110B\u1175\u11AF\u110D\u1175\u11A8', '\u110B\u1175\u11AF\u110E\u1166', '\u110B\u1175\u11AF\u110E\u1175', '\u110B\u1175\u11AF\u1112\u1162\u11BC', '\u110B\u1175\u11AF\u1112\u116C\u110B\u116D\u11BC', '\u110B\u1175\u11B7\u1100\u1173\u11B7', '\u110B\u1175\u11B7\u1106\u116E', '\u110B\u1175\u11B8\u1103\u1162', '\u110B\u1175\u11B8\u1105\u1167\u11A8', '\u110B\u1175\u11B8\u1106\u1161\u11BA', '\u110B\u1175\u11B8\u1109\u1161', '\u110B\u1175\u11B8\u1109\u116E\u11AF', '\u110B\u1175\u11B8\u1109\u1175', '\u110B\u1175\u11B8\u110B\u116F\u11AB', '\u110B\u1175\u11B8\u110C\u1161\u11BC', '\u110B\u1175\u11B8\u1112\u1161\u11A8', '\u110C\u1161\u1100\u1161\u110B\u116D\u11BC', '\u110C\u1161\u1100\u1167\u11A8', '\u110C\u1161\u1100\u1173\u11A8', '\u110C\u1161\u1103\u1169\u11BC', '\u110C\u1161\u1105\u1161\u11BC', '\u110C\u1161\u1107\u116E\u1109\u1175\u11B7', '\u110C\u1161\u1109\u1175\u11A8', '\u110C\u1161\u1109\u1175\u11AB', '\u110C\u1161\u110B\u1167\u11AB', '\u110C\u1161\u110B\u116F\u11AB', '\u110C\u1161\u110B\u1172\u11AF', '\u110C\u1161\u110C\u1165\u11AB\u1100\u1165', '\u110C\u1161\u110C\u1165\u11BC', '\u110C\u1161\u110C\u1169\u11AB\u1109\u1175\u11B7', '\u110C\u1161\u1111\u1161\u11AB', '\u110C\u1161\u11A8\u1100\u1161', '\u110C\u1161\u11A8\u1102\u1167\u11AB', '\u110C\u1161\u11A8\u1109\u1165\u11BC', '\u110C\u1161\u11A8\u110B\u1165\u11B8', '\u110C\u1161\u11A8\u110B\u116D\u11BC', '\u110C\u1161\u11A8\u110B\u1173\u11AB\u1104\u1161\u11AF', '\u110C\u1161\u11A8\u1111\u116E\u11B7', '\u110C\u1161\u11AB\u1103\u1175', '\u110C\u1161\u11AB\u1104\u1173\u11A8', '\u110C\u1161\u11AB\u110E\u1175', '\u110C\u1161\u11AF\u1106\u1169\u11BA', '\u110C\u1161\u11B7\u1101\u1161\u11AB', '\u110C\u1161\u11B7\u1109\u116E\u1112\u1161\u11B7', '\u110C\u1161\u11B7\u1109\u1175', '\u110C\u1161\u11B7\u110B\u1169\u11BA', '\u110C\u1161\u11B7\u110C\u1161\u1105\u1175', '\u110C\u1161\u11B8\u110C\u1175', '\u110C\u1161\u11BC\u1100\u116A\u11AB', '\u110C\u1161\u11BC\u1100\u116E\u11AB', '\u110C\u1161\u11BC\u1100\u1175\u1100\u1161\u11AB', '\u110C\u1161\u11BC\u1105\u1162', '\u110C\u1161\u11BC\u1105\u1168', '\u110C\u1161\u11BC\u1105\u1173', '\u110C\u1161\u11BC\u1106\u1161', '\u110C\u1161\u11BC\u1106\u1167\u11AB', '\u110C\u1161\u11BC\u1106\u1169', '\u110C\u1161\u11BC\u1106\u1175', '\u110C\u1161\u11BC\u1107\u1175', '\u110C\u1161\u11BC\u1109\u1161', '\u110C\u1161\u11BC\u1109\u1169', '\u110C\u1161\u11BC\u1109\u1175\u11A8', '\u110C\u1161\u11BC\u110B\u1162\u110B\u1175\u11AB', '\u110C\u1161\u11BC\u110B\u1175\u11AB', '\u110C\u1161\u11BC\u110C\u1165\u11B7', '\u110C\u1161\u11BC\u110E\u1161', '\u110C\u1161\u11BC\u1112\u1161\u11A8\u1100\u1173\u11B7', '\u110C\u1162\u1102\u1173\u11BC', '\u110C\u1162\u1108\u1161\u11AF\u1105\u1175', '\u110C\u1162\u1109\u1161\u11AB', '\u110C\u1162\u1109\u1162\u11BC', '\u110C\u1162\u110C\u1161\u11A8\u1102\u1167\u11AB', '\u110C\u1162\u110C\u1165\u11BC', '\u110C\u1162\u110E\u1162\u1100\u1175', '\u110C\u1162\u1111\u1161\u11AB', '\u110C\u1162\u1112\u1161\u11A8', '\u110C\u1162\u1112\u116A\u11AF\u110B\u116D\u11BC', '\u110C\u1165\u1100\u1165\u11BA', '\u110C\u1165\u1100\u1169\u1105\u1175', '\u110C\u1165\u1100\u1169\u11BA', '\u110C\u1165\u1102\u1167\u11A8', '\u110C\u1165\u1105\u1165\u11AB', '\u110C\u1165\u1105\u1165\u11C2\u1100\u1166', '\u110C\u1165\u1107\u1165\u11AB', '\u110C\u1165\u110B\u116E\u11AF', '\u110C\u1165\u110C\u1165\u11AF\u1105\u1169', '\u110C\u1165\u110E\u116E\u11A8', '\u110C\u1165\u11A8\u1100\u1173\u11A8', '\u110C\u1165\u11A8\u1103\u1161\u11BC\u1112\u1175', '\u110C\u1165\u11A8\u1109\u1165\u11BC', '\u110C\u1165\u11A8\u110B\u116D\u11BC', '\u110C\u1165\u11A8\u110B\u1173\u11BC', '\u110C\u1165\u11AB\u1100\u1162', '\u110C\u1165\u11AB\u1100\u1169\u11BC', '\u110C\u1165\u11AB\u1100\u1175', '\u110C\u1165\u11AB\u1103\u1161\u11AF', '\u110C\u1165\u11AB\u1105\u1161\u1103\u1169', '\u110C\u1165\u11AB\u1106\u1161\u11BC', '\u110C\u1165\u11AB\u1106\u116E\u11AB', '\u110C\u1165\u11AB\u1107\u1161\u11AB', '\u110C\u1165\u11AB\u1107\u116E', '\u110C\u1165\u11AB\u1109\u1166', '\u110C\u1165\u11AB\u1109\u1175', '\u110C\u1165\u11AB\u110B\u116D\u11BC', '\u110C\u1165\u11AB\u110C\u1161', '\u110C\u1165\u11AB\u110C\u1162\u11BC', '\u110C\u1165\u11AB\u110C\u116E', '\u110C\u1165\u11AB\u110E\u1165\u11AF', '\u110C\u1165\u11AB\u110E\u1166', '\u110C\u1165\u11AB\u1110\u1169\u11BC', '\u110C\u1165\u11AB\u1112\u1167', '\u110C\u1165\u11AB\u1112\u116E', '\u110C\u1165\u11AF\u1103\u1162', '\u110C\u1165\u11AF\u1106\u1161\u11BC', '\u110C\u1165\u11AF\u1107\u1161\u11AB', '\u110C\u1165\u11AF\u110B\u1163\u11A8', '\u110C\u1165\u11AF\u110E\u1161', '\u110C\u1165\u11B7\u1100\u1165\u11B7', '\u110C\u1165\u11B7\u1109\u116E', '\u110C\u1165\u11B7\u1109\u1175\u11B7', '\u110C\u1165\u11B7\u110B\u116F\u11AB', '\u110C\u1165\u11B7\u110C\u1165\u11B7', '\u110C\u1165\u11B7\u110E\u1161', '\u110C\u1165\u11B8\u1100\u1173\u11AB', '\u110C\u1165\u11B8\u1109\u1175', '\u110C\u1165\u11B8\u110E\u1169\u11A8', '\u110C\u1165\u11BA\u1100\u1161\u1105\u1161\u11A8', '\u110C\u1165\u11BC\u1100\u1165\u110C\u1161\u11BC', '\u110C\u1165\u11BC\u1103\u1169', '\u110C\u1165\u11BC\u1105\u1172\u110C\u1161\u11BC', '\u110C\u1165\u11BC\u1105\u1175', '\u110C\u1165\u11BC\u1106\u1161\u11AF', '\u110C\u1165\u11BC\u1106\u1167\u11AB', '\u110C\u1165\u11BC\u1106\u116E\u11AB', '\u110C\u1165\u11BC\u1107\u1161\u11AB\u1103\u1162', '\u110C\u1165\u11BC\u1107\u1169', '\u110C\u1165\u11BC\u1107\u116E', '\u110C\u1165\u11BC\u1107\u1175', '\u110C\u1165\u11BC\u1109\u1161\u11BC', '\u110C\u1165\u11BC\u1109\u1165\u11BC', '\u110C\u1165\u11BC\u110B\u1169', '\u110C\u1165\u11BC\u110B\u116F\u11AB', '\u110C\u1165\u11BC\u110C\u1161\u11BC', '\u110C\u1165\u11BC\u110C\u1175', '\u110C\u1165\u11BC\u110E\u1175', '\u110C\u1165\u11BC\u1112\u116A\u11A8\u1112\u1175', '\u110C\u1166\u1100\u1169\u11BC', '\u110C\u1166\u1100\u116A\u110C\u1165\u11B7', '\u110C\u1166\u1103\u1162\u1105\u1169', '\u110C\u1166\u1106\u1169\u11A8', '\u110C\u1166\u1107\u1161\u11AF', '\u110C\u1166\u1107\u1165\u11B8', '\u110C\u1166\u1109\u1161\u11BA\u1102\u1161\u11AF', '\u110C\u1166\u110B\u1161\u11AB', '\u110C\u1166\u110B\u1175\u11AF', '\u110C\u1166\u110C\u1161\u11A8', '\u110C\u1166\u110C\u116E\u1103\u1169', '\u110C\u1166\u110E\u116E\u11AF', '\u110C\u1166\u1111\u116E\u11B7', '\u110C\u1166\u1112\u1161\u11AB', '\u110C\u1169\u1100\u1161\u11A8', '\u110C\u1169\u1100\u1165\u11AB', '\u110C\u1169\u1100\u1173\u11B7', '\u110C\u1169\u1100\u1175\u11BC', '\u110C\u1169\u1106\u1167\u11BC', '\u110C\u1169\u1106\u1175\u1105\u116D', '\u110C\u1169\u1109\u1161\u11BC', '\u110C\u1169\u1109\u1165\u11AB', '\u110C\u1169\u110B\u116D\u11BC\u1112\u1175', '\u110C\u1169\u110C\u1165\u11AF', '\u110C\u1169\u110C\u1165\u11BC', '\u110C\u1169\u110C\u1175\u11A8', '\u110C\u1169\u11AB\u1103\u1162\u11BA\u1106\u1161\u11AF', '\u110C\u1169\u11AB\u110C\u1162', '\u110C\u1169\u11AF\u110B\u1165\u11B8', '\u110C\u1169\u11AF\u110B\u1173\u11B7', '\u110C\u1169\u11BC\u1100\u116D', '\u110C\u1169\u11BC\u1105\u1169', '\u110C\u1169\u11BC\u1105\u1172', '\u110C\u1169\u11BC\u1109\u1169\u1105\u1175', '\u110C\u1169\u11BC\u110B\u1165\u11B8\u110B\u116F\u11AB', '\u110C\u1169\u11BC\u110C\u1169\u11BC', '\u110C\u1169\u11BC\u1112\u1161\u11B8', '\u110C\u116A\u1109\u1165\u11A8', '\u110C\u116C\u110B\u1175\u11AB', '\u110C\u116E\u1100\u116A\u11AB\u110C\u1165\u11A8', '\u110C\u116E\u1105\u1173\u11B7', '\u110C\u116E\u1106\u1161\u11AF', '\u110C\u116E\u1106\u1165\u1102\u1175', '\u110C\u116E\u1106\u1165\u11A8', '\u110C\u116E\u1106\u116E\u11AB', '\u110C\u116E\u1106\u1175\u11AB', '\u110C\u116E\u1107\u1161\u11BC', '\u110C\u116E\u1107\u1167\u11AB', '\u110C\u116E\u1109\u1175\u11A8', '\u110C\u116E\u110B\u1175\u11AB', '\u110C\u116E\u110B\u1175\u11AF', '\u110C\u116E\u110C\u1161\u11BC', '\u110C\u116E\u110C\u1165\u11AB\u110C\u1161', '\u110C\u116E\u1110\u1162\u11A8', '\u110C\u116E\u11AB\u1107\u1175', '\u110C\u116E\u11AF\u1100\u1165\u1105\u1175', '\u110C\u116E\u11AF\u1100\u1175', '\u110C\u116E\u11AF\u1106\u116E\u1102\u1174', '\u110C\u116E\u11BC\u1100\u1161\u11AB', '\u110C\u116E\u11BC\u1100\u1168\u1107\u1161\u11BC\u1109\u1169\u11BC', '\u110C\u116E\u11BC\u1100\u116E\u11A8', '\u110C\u116E\u11BC\u1102\u1167\u11AB', '\u110C\u116E\u11BC\u1103\u1161\u11AB', '\u110C\u116E\u11BC\u1103\u1169\u11A8', '\u110C\u116E\u11BC\u1107\u1161\u11AB', '\u110C\u116E\u11BC\u1107\u116E', '\u110C\u116E\u11BC\u1109\u1166', '\u110C\u116E\u11BC\u1109\u1169\u1100\u1175\u110B\u1165\u11B8', '\u110C\u116E\u11BC\u1109\u116E\u11AB', '\u110C\u116E\u11BC\u110B\u1161\u11BC', '\u110C\u116E\u11BC\u110B\u116D', '\u110C\u116E\u11BC\u1112\u1161\u11A8\u1100\u116D', '\u110C\u1173\u11A8\u1109\u1165\u11A8', '\u110C\u1173\u11A8\u1109\u1175', '\u110C\u1173\u11AF\u1100\u1165\u110B\u116E\u11B7', '\u110C\u1173\u11BC\u1100\u1161', '\u110C\u1173\u11BC\u1100\u1165', '\u110C\u1173\u11BC\u1100\u116F\u11AB', '\u110C\u1173\u11BC\u1109\u1161\u11BC', '\u110C\u1173\u11BC\u1109\u1166', '\u110C\u1175\u1100\u1161\u11A8', '\u110C\u1175\u1100\u1161\u11B8', '\u110C\u1175\u1100\u1167\u11BC', '\u110C\u1175\u1100\u1173\u11A8\u1112\u1175', '\u110C\u1175\u1100\u1173\u11B7', '\u110C\u1175\u1100\u1173\u11B8', '\u110C\u1175\u1102\u1173\u11BC', '\u110C\u1175\u1105\u1173\u11B7\u1100\u1175\u11AF', '\u110C\u1175\u1105\u1175\u1109\u1161\u11AB', '\u110C\u1175\u1107\u1161\u11BC', '\u110C\u1175\u1107\u116E\u11BC', '\u110C\u1175\u1109\u1175\u11A8', '\u110C\u1175\u110B\u1167\u11A8', '\u110C\u1175\u110B\u116E\u1100\u1162', '\u110C\u1175\u110B\u116F\u11AB', '\u110C\u1175\u110C\u1165\u11A8', '\u110C\u1175\u110C\u1165\u11B7', '\u110C\u1175\u110C\u1175\u11AB', '\u110C\u1175\u110E\u116E\u11AF', '\u110C\u1175\u11A8\u1109\u1165\u11AB', '\u110C\u1175\u11A8\u110B\u1165\u11B8', '\u110C\u1175\u11A8\u110B\u116F\u11AB', '\u110C\u1175\u11A8\u110C\u1161\u11BC', '\u110C\u1175\u11AB\u1100\u1173\u11B8', '\u110C\u1175\u11AB\u1103\u1169\u11BC', '\u110C\u1175\u11AB\u1105\u1169', '\u110C\u1175\u11AB\u1105\u116D', '\u110C\u1175\u11AB\u1105\u1175', '\u110C\u1175\u11AB\u110D\u1161', '\u110C\u1175\u11AB\u110E\u1161\u11AF', '\u110C\u1175\u11AB\u110E\u116E\u11AF', '\u110C\u1175\u11AB\u1110\u1169\u11BC', '\u110C\u1175\u11AB\u1112\u1162\u11BC', '\u110C\u1175\u11AF\u1106\u116E\u11AB', '\u110C\u1175\u11AF\u1107\u1167\u11BC', '\u110C\u1175\u11AF\u1109\u1165', '\u110C\u1175\u11B7\u110C\u1161\u11A8', '\u110C\u1175\u11B8\u1103\u1161\u11AB', '\u110C\u1175\u11B8\u110B\u1161\u11AB', '\u110C\u1175\u11B8\u110C\u116E\u11BC', '\u110D\u1161\u110C\u1173\u11BC', '\u110D\u1175\u1101\u1165\u1100\u1175', '\u110E\u1161\u1102\u1161\u11B7', '\u110E\u1161\u1105\u1161\u1105\u1175', '\u110E\u1161\u1105\u1163\u11BC', '\u110E\u1161\u1105\u1175\u11B7', '\u110E\u1161\u1107\u1167\u11AF', '\u110E\u1161\u1109\u1165\u11AB', '\u110E\u1161\u110E\u1173\u11B7', '\u110E\u1161\u11A8\u1100\u1161\u11A8', '\u110E\u1161\u11AB\u1106\u116E\u11AF', '\u110E\u1161\u11AB\u1109\u1165\u11BC', '\u110E\u1161\u11B7\u1100\u1161', '\u110E\u1161\u11B7\u1100\u1175\u1105\u1173\u11B7', '\u110E\u1161\u11B7\u1109\u1162', '\u110E\u1161\u11B7\u1109\u1165\u11A8', '\u110E\u1161\u11B7\u110B\u1167', '\u110E\u1161\u11B7\u110B\u116C', '\u110E\u1161\u11B7\u110C\u1169', '\u110E\u1161\u11BA\u110C\u1161\u11AB', '\u110E\u1161\u11BC\u1100\u1161', '\u110E\u1161\u11BC\u1100\u1169', '\u110E\u1161\u11BC\u1100\u116E', '\u110E\u1161\u11BC\u1106\u116E\u11AB', '\u110E\u1161\u11BC\u1107\u1161\u11A9', '\u110E\u1161\u11BC\u110C\u1161\u11A8', '\u110E\u1161\u11BC\u110C\u1169', '\u110E\u1162\u1102\u1165\u11AF', '\u110E\u1162\u110C\u1165\u11B7', '\u110E\u1162\u11A8\u1100\u1161\u1107\u1161\u11BC', '\u110E\u1162\u11A8\u1107\u1161\u11BC', '\u110E\u1162\u11A8\u1109\u1161\u11BC', '\u110E\u1162\u11A8\u110B\u1175\u11B7', '\u110E\u1162\u11B7\u1111\u1175\u110B\u1165\u11AB', '\u110E\u1165\u1107\u1165\u11AF', '\u110E\u1165\u110B\u1173\u11B7', '\u110E\u1165\u11AB\u1100\u116E\u11A8', '\u110E\u1165\u11AB\u1103\u116E\u11BC', '\u110E\u1165\u11AB\u110C\u1161\u11BC', '\u110E\u1165\u11AB\u110C\u1162', '\u110E\u1165\u11AB\u110E\u1165\u11AB\u1112\u1175', '\u110E\u1165\u11AF\u1103\u1169', '\u110E\u1165\u11AF\u110C\u1165\u1112\u1175', '\u110E\u1165\u11AF\u1112\u1161\u11A8', '\u110E\u1165\u11BA\u1102\u1161\u11AF', '\u110E\u1165\u11BA\u110D\u1162', '\u110E\u1165\u11BC\u1102\u1167\u11AB', '\u110E\u1165\u11BC\u1107\u1161\u110C\u1175', '\u110E\u1165\u11BC\u1109\u1169', '\u110E\u1165\u11BC\u110E\u116E\u11AB', '\u110E\u1166\u1100\u1168', '\u110E\u1166\u1105\u1167\u11A8', '\u110E\u1166\u110B\u1169\u11AB', '\u110E\u1166\u110B\u1172\u11A8', '\u110E\u1166\u110C\u116E\u11BC', '\u110E\u1166\u1112\u1165\u11B7', '\u110E\u1169\u1103\u1173\u11BC\u1112\u1161\u11A8\u1109\u1162\u11BC', '\u110E\u1169\u1107\u1161\u11AB', '\u110E\u1169\u1107\u1161\u11B8', '\u110E\u1169\u1109\u1161\u11BC\u1112\u116A', '\u110E\u1169\u1109\u116E\u11AB', '\u110E\u1169\u110B\u1167\u1105\u1173\u11B7', '\u110E\u1169\u110B\u116F\u11AB', '\u110E\u1169\u110C\u1165\u1102\u1167\u11A8', '\u110E\u1169\u110C\u1165\u11B7', '\u110E\u1169\u110E\u1165\u11BC', '\u110E\u1169\u110F\u1169\u11AF\u1105\u1175\u11BA', '\u110E\u1169\u11BA\u1107\u116E\u11AF', '\u110E\u1169\u11BC\u1100\u1161\u11A8', '\u110E\u1169\u11BC\u1105\u1175', '\u110E\u1169\u11BC\u110C\u1161\u11BC', '\u110E\u116A\u11AF\u110B\u1167\u11BC', '\u110E\u116C\u1100\u1173\u11AB', '\u110E\u116C\u1109\u1161\u11BC', '\u110E\u116C\u1109\u1165\u11AB', '\u110E\u116C\u1109\u1175\u11AB', '\u110E\u116C\u110B\u1161\u11A8', '\u110E\u116C\u110C\u1169\u11BC', '\u110E\u116E\u1109\u1165\u11A8', '\u110E\u116E\u110B\u1165\u11A8', '\u110E\u116E\u110C\u1175\u11AB', '\u110E\u116E\u110E\u1165\u11AB', '\u110E\u116E\u110E\u1173\u11A8', '\u110E\u116E\u11A8\u1100\u116E', '\u110E\u116E\u11A8\u1109\u1169', '\u110E\u116E\u11A8\u110C\u1166', '\u110E\u116E\u11A8\u1112\u1161', '\u110E\u116E\u11AF\u1100\u1173\u11AB', '\u110E\u116E\u11AF\u1107\u1161\u11AF', '\u110E\u116E\u11AF\u1109\u1161\u11AB', '\u110E\u116E\u11AF\u1109\u1175\u11AB', '\u110E\u116E\u11AF\u110B\u1167\u11AB', '\u110E\u116E\u11AF\u110B\u1175\u11B8', '\u110E\u116E\u11AF\u110C\u1161\u11BC', '\u110E\u116E\u11AF\u1111\u1161\u11AB', '\u110E\u116E\u11BC\u1100\u1167\u11A8', '\u110E\u116E\u11BC\u1100\u1169', '\u110E\u116E\u11BC\u1103\u1169\u11AF', '\u110E\u116E\u11BC\u1107\u116E\u11AB\u1112\u1175', '\u110E\u116E\u11BC\u110E\u1165\u11BC\u1103\u1169', '\u110E\u1171\u110B\u1165\u11B8', '\u110E\u1171\u110C\u1175\u11A8', '\u110E\u1171\u1112\u1163\u11BC', '\u110E\u1175\u110B\u1163\u11A8', '\u110E\u1175\u11AB\u1100\u116E', '\u110E\u1175\u11AB\u110E\u1165\u11A8', '\u110E\u1175\u11AF\u1109\u1175\u11B8', '\u110E\u1175\u11AF\u110B\u116F\u11AF', '\u110E\u1175\u11AF\u1111\u1161\u11AB', '\u110E\u1175\u11B7\u1103\u1162', '\u110E\u1175\u11B7\u1106\u116E\u11A8', '\u110E\u1175\u11B7\u1109\u1175\u11AF', '\u110E\u1175\u11BA\u1109\u1169\u11AF', '\u110E\u1175\u11BC\u110E\u1161\u11AB', '\u110F\u1161\u1106\u1166\u1105\u1161', '\u110F\u1161\u110B\u116E\u11AB\u1110\u1165', '\u110F\u1161\u11AF\u1100\u116E\u11A8\u1109\u116E', '\u110F\u1162\u1105\u1175\u11A8\u1110\u1165', '\u110F\u1162\u11B7\u1111\u1165\u1109\u1173', '\u110F\u1162\u11B7\u1111\u1166\u110B\u1175\u11AB', '\u110F\u1165\u1110\u1173\u11AB', '\u110F\u1165\u11AB\u1103\u1175\u1109\u1167\u11AB', '\u110F\u1165\u11AF\u1105\u1165', '\u110F\u1165\u11B7\u1111\u1172\u1110\u1165', '\u110F\u1169\u1101\u1175\u1105\u1175', '\u110F\u1169\u1106\u1175\u1103\u1175', '\u110F\u1169\u11AB\u1109\u1165\u1110\u1173', '\u110F\u1169\u11AF\u1105\u1161', '\u110F\u1169\u11B7\u1111\u1173\u11AF\u1105\u1166\u11A8\u1109\u1173', '\u110F\u1169\u11BC\u1102\u1161\u1106\u116E\u11AF', '\u110F\u116B\u1100\u1161\u11B7', '\u110F\u116E\u1103\u1166\u1110\u1161', '\u110F\u1173\u1105\u1175\u11B7', '\u110F\u1173\u11AB\u1100\u1175\u11AF', '\u110F\u1173\u11AB\u1104\u1161\u11AF', '\u110F\u1173\u11AB\u1109\u1169\u1105\u1175', '\u110F\u1173\u11AB\u110B\u1161\u1103\u1173\u11AF', '\u110F\u1173\u11AB\u110B\u1165\u1106\u1165\u1102\u1175', '\u110F\u1173\u11AB\u110B\u1175\u11AF', '\u110F\u1173\u11AB\u110C\u1165\u11AF', '\u110F\u1173\u11AF\u1105\u1162\u1109\u1175\u11A8', '\u110F\u1173\u11AF\u1105\u1165\u11B8', '\u110F\u1175\u11AF\u1105\u1169', '\u1110\u1161\u110B\u1175\u11B8', '\u1110\u1161\u110C\u1161\u1100\u1175', '\u1110\u1161\u11A8\u1100\u116E', '\u1110\u1161\u11A8\u110C\u1161', '\u1110\u1161\u11AB\u1109\u1162\u11BC', '\u1110\u1162\u1100\u116F\u11AB\u1103\u1169', '\u1110\u1162\u110B\u1163\u11BC', '\u1110\u1162\u1111\u116E\u11BC', '\u1110\u1162\u11A8\u1109\u1175', '\u1110\u1162\u11AF\u1105\u1165\u11AB\u1110\u1173', '\u1110\u1165\u1102\u1165\u11AF', '\u1110\u1165\u1106\u1175\u1102\u1165\u11AF', '\u1110\u1166\u1102\u1175\u1109\u1173', '\u1110\u1166\u1109\u1173\u1110\u1173', '\u1110\u1166\u110B\u1175\u1107\u1173\u11AF', '\u1110\u1166\u11AF\u1105\u1166\u1107\u1175\u110C\u1165\u11AB', '\u1110\u1169\u1105\u1169\u11AB', '\u1110\u1169\u1106\u1161\u1110\u1169', '\u1110\u1169\u110B\u116D\u110B\u1175\u11AF', '\u1110\u1169\u11BC\u1100\u1168', '\u1110\u1169\u11BC\u1100\u116A', '\u1110\u1169\u11BC\u1105\u1169', '\u1110\u1169\u11BC\u1109\u1175\u11AB', '\u1110\u1169\u11BC\u110B\u1167\u11A8', '\u1110\u1169\u11BC\u110B\u1175\u11AF', '\u1110\u1169\u11BC\u110C\u1161\u11BC', '\u1110\u1169\u11BC\u110C\u1166', '\u1110\u1169\u11BC\u110C\u1173\u11BC', '\u1110\u1169\u11BC\u1112\u1161\u11B8', '\u1110\u1169\u11BC\u1112\u116A', '\u1110\u116C\u1100\u1173\u11AB', '\u1110\u116C\u110B\u116F\u11AB', '\u1110\u116C\u110C\u1175\u11A8\u1100\u1173\u11B7', '\u1110\u1171\u1100\u1175\u11B7', '\u1110\u1173\u1105\u1165\u11A8', '\u1110\u1173\u11A8\u1100\u1173\u11B8', '\u1110\u1173\u11A8\u1107\u1167\u11AF', '\u1110\u1173\u11A8\u1109\u1165\u11BC', '\u1110\u1173\u11A8\u1109\u116E', '\u1110\u1173\u11A8\u110C\u1175\u11BC', '\u1110\u1173\u11A8\u1112\u1175', '\u1110\u1173\u11AB\u1110\u1173\u11AB\u1112\u1175', '\u1110\u1175\u1109\u1167\u110E\u1173', '\u1111\u1161\u1105\u1161\u11AB\u1109\u1162\u11A8', '\u1111\u1161\u110B\u1175\u11AF', '\u1111\u1161\u110E\u116E\u11AF\u1109\u1169', '\u1111\u1161\u11AB\u1100\u1167\u11AF', '\u1111\u1161\u11AB\u1103\u1161\u11AB', '\u1111\u1161\u11AB\u1106\u1162', '\u1111\u1161\u11AB\u1109\u1161', '\u1111\u1161\u11AF\u1109\u1175\u11B8', '\u1111\u1161\u11AF\u110B\u116F\u11AF', '\u1111\u1161\u11B8\u1109\u1169\u11BC', '\u1111\u1162\u1109\u1167\u11AB', '\u1111\u1162\u11A8\u1109\u1173', '\u1111\u1162\u11A8\u1109\u1175\u1106\u1175\u11AF\u1105\u1175', '\u1111\u1162\u11AB\u1110\u1175', '\u1111\u1165\u1109\u1166\u11AB\u1110\u1173', '\u1111\u1166\u110B\u1175\u11AB\u1110\u1173', '\u1111\u1167\u11AB\u1100\u1167\u11AB', '\u1111\u1167\u11AB\u110B\u1174', '\u1111\u1167\u11AB\u110C\u1175', '\u1111\u1167\u11AB\u1112\u1175', '\u1111\u1167\u11BC\u1100\u1161', '\u1111\u1167\u11BC\u1100\u1172\u11AB', '\u1111\u1167\u11BC\u1109\u1162\u11BC', '\u1111\u1167\u11BC\u1109\u1169', '\u1111\u1167\u11BC\u110B\u1163\u11BC', '\u1111\u1167\u11BC\u110B\u1175\u11AF', '\u1111\u1167\u11BC\u1112\u116A', '\u1111\u1169\u1109\u1173\u1110\u1165', '\u1111\u1169\u110B\u1175\u11AB\u1110\u1173', '\u1111\u1169\u110C\u1161\u11BC', '\u1111\u1169\u1112\u1161\u11B7', '\u1111\u116D\u1106\u1167\u11AB', '\u1111\u116D\u110C\u1165\u11BC', '\u1111\u116D\u110C\u116E\u11AB', '\u1111\u116D\u1112\u1167\u11AB', '\u1111\u116E\u11B7\u1106\u1169\u11A8', '\u1111\u116E\u11B7\u110C\u1175\u11AF', '\u1111\u116E\u11BC\u1100\u1167\u11BC', '\u1111\u116E\u11BC\u1109\u1169\u11A8', '\u1111\u116E\u11BC\u1109\u1173\u11B8', '\u1111\u1173\u1105\u1161\u11BC\u1109\u1173', '\u1111\u1173\u1105\u1175\u11AB\u1110\u1165', '\u1111\u1173\u11AF\u1105\u1161\u1109\u1173\u1110\u1175\u11A8', '\u1111\u1175\u1100\u1169\u11AB', '\u1111\u1175\u1106\u1161\u11BC', '\u1111\u1175\u110B\u1161\u1102\u1169', '\u1111\u1175\u11AF\u1105\u1173\u11B7', '\u1111\u1175\u11AF\u1109\u116E', '\u1111\u1175\u11AF\u110B\u116D', '\u1111\u1175\u11AF\u110C\u1161', '\u1111\u1175\u11AF\u1110\u1169\u11BC', '\u1111\u1175\u11BC\u1100\u1168', '\u1112\u1161\u1102\u1173\u1102\u1175\u11B7', '\u1112\u1161\u1102\u1173\u11AF', '\u1112\u1161\u1103\u1173\u110B\u1170\u110B\u1165', '\u1112\u1161\u1105\u116E\u11BA\u1107\u1161\u11B7', '\u1112\u1161\u1107\u1161\u11AB\u1100\u1175', '\u1112\u1161\u1109\u116E\u11A8\u110C\u1175\u11B8', '\u1112\u1161\u1109\u116E\u11AB', '\u1112\u1161\u110B\u1167\u1110\u1173\u11AB', '\u1112\u1161\u110C\u1175\u1106\u1161\u11AB', '\u1112\u1161\u110E\u1165\u11AB', '\u1112\u1161\u1111\u116E\u11B7', '\u1112\u1161\u1111\u1175\u11AF', '\u1112\u1161\u11A8\u1100\u116A', '\u1112\u1161\u11A8\u1100\u116D', '\u1112\u1161\u11A8\u1100\u1173\u11B8', '\u1112\u1161\u11A8\u1100\u1175', '\u1112\u1161\u11A8\u1102\u1167\u11AB', '\u1112\u1161\u11A8\u1105\u1167\u11A8', '\u1112\u1161\u11A8\u1107\u1165\u11AB', '\u1112\u1161\u11A8\u1107\u116E\u1106\u1169', '\u1112\u1161\u11A8\u1107\u1175', '\u1112\u1161\u11A8\u1109\u1162\u11BC', '\u1112\u1161\u11A8\u1109\u116E\u11AF', '\u1112\u1161\u11A8\u1109\u1173\u11B8', '\u1112\u1161\u11A8\u110B\u116D\u11BC\u1111\u116E\u11B7', '\u1112\u1161\u11A8\u110B\u116F\u11AB', '\u1112\u1161\u11A8\u110B\u1171', '\u1112\u1161\u11A8\u110C\u1161', '\u1112\u1161\u11A8\u110C\u1165\u11B7', '\u1112\u1161\u11AB\u1100\u1168', '\u1112\u1161\u11AB\u1100\u1173\u11AF', '\u1112\u1161\u11AB\u1101\u1165\u1107\u1165\u11AB\u110B\u1166', '\u1112\u1161\u11AB\u1102\u1161\u11BD', '\u1112\u1161\u11AB\u1102\u116E\u11AB', '\u1112\u1161\u11AB\u1103\u1169\u11BC\u110B\u1161\u11AB', '\u1112\u1161\u11AB\u1104\u1162', '\u1112\u1161\u11AB\u1105\u1161\u1109\u1161\u11AB', '\u1112\u1161\u11AB\u1106\u1161\u1103\u1175', '\u1112\u1161\u11AB\u1106\u116E\u11AB', '\u1112\u1161\u11AB\u1107\u1165\u11AB', '\u1112\u1161\u11AB\u1107\u1169\u11A8', '\u1112\u1161\u11AB\u1109\u1175\u11A8', '\u1112\u1161\u11AB\u110B\u1167\u1105\u1173\u11B7', '\u1112\u1161\u11AB\u110D\u1169\u11A8', '\u1112\u1161\u11AF\u1106\u1165\u1102\u1175', '\u1112\u1161\u11AF\u110B\u1161\u1107\u1165\u110C\u1175', '\u1112\u1161\u11AF\u110B\u1175\u11AB', '\u1112\u1161\u11B7\u1101\u1166', '\u1112\u1161\u11B7\u1107\u116E\u1105\u1169', '\u1112\u1161\u11B8\u1100\u1167\u11A8', '\u1112\u1161\u11B8\u1105\u1175\u110C\u1165\u11A8', '\u1112\u1161\u11BC\u1100\u1169\u11BC', '\u1112\u1161\u11BC\u1100\u116E', '\u1112\u1161\u11BC\u1109\u1161\u11BC', '\u1112\u1161\u11BC\u110B\u1174', '\u1112\u1162\u1100\u1167\u11AF', '\u1112\u1162\u1100\u116E\u11AB', '\u1112\u1162\u1103\u1161\u11B8', '\u1112\u1162\u1103\u1161\u11BC', '\u1112\u1162\u1106\u116E\u11AF', '\u1112\u1162\u1109\u1165\u11A8', '\u1112\u1162\u1109\u1165\u11AF', '\u1112\u1162\u1109\u116E\u110B\u116D\u11A8\u110C\u1161\u11BC', '\u1112\u1162\u110B\u1161\u11AB', '\u1112\u1162\u11A8\u1109\u1175\u11B7', '\u1112\u1162\u11AB\u1103\u1173\u1107\u1162\u11A8', '\u1112\u1162\u11B7\u1107\u1165\u1100\u1165', '\u1112\u1162\u11BA\u1107\u1167\u11C0', '\u1112\u1162\u11BA\u1109\u1161\u11AF', '\u1112\u1162\u11BC\u1103\u1169\u11BC', '\u1112\u1162\u11BC\u1107\u1169\u11A8', '\u1112\u1162\u11BC\u1109\u1161', '\u1112\u1162\u11BC\u110B\u116E\u11AB', '\u1112\u1162\u11BC\u110B\u1171', '\u1112\u1163\u11BC\u1100\u1175', '\u1112\u1163\u11BC\u1109\u1161\u11BC', '\u1112\u1163\u11BC\u1109\u116E', '\u1112\u1165\u1105\u1161\u11A8', '\u1112\u1165\u110B\u116D\u11BC', '\u1112\u1166\u11AF\u1100\u1175', '\u1112\u1167\u11AB\u1100\u116A\u11AB', '\u1112\u1167\u11AB\u1100\u1173\u11B7', '\u1112\u1167\u11AB\u1103\u1162', '\u1112\u1167\u11AB\u1109\u1161\u11BC', '\u1112\u1167\u11AB\u1109\u1175\u11AF', '\u1112\u1167\u11AB\u110C\u1161\u11BC', '\u1112\u1167\u11AB\u110C\u1162', '\u1112\u1167\u11AB\u110C\u1175', '\u1112\u1167\u11AF\u110B\u1162\u11A8', '\u1112\u1167\u11B8\u1105\u1167\u11A8', '\u1112\u1167\u11BC\u1107\u116E', '\u1112\u1167\u11BC\u1109\u1161', '\u1112\u1167\u11BC\u1109\u116E', '\u1112\u1167\u11BC\u1109\u1175\u11A8', '\u1112\u1167\u11BC\u110C\u1166', '\u1112\u1167\u11BC\u1110\u1162', '\u1112\u1167\u11BC\u1111\u1167\u11AB', '\u1112\u1168\u1110\u1162\u11A8', '\u1112\u1169\u1100\u1175\u1109\u1175\u11B7', '\u1112\u1169\u1102\u1161\u11B7', '\u1112\u1169\u1105\u1161\u11BC\u110B\u1175', '\u1112\u1169\u1107\u1161\u11A8', '\u1112\u1169\u1110\u1166\u11AF', '\u1112\u1169\u1112\u1173\u11B8', '\u1112\u1169\u11A8\u1109\u1175', '\u1112\u1169\u11AF\u1105\u1169', '\u1112\u1169\u11B7\u1111\u1166\u110B\u1175\u110C\u1175', '\u1112\u1169\u11BC\u1107\u1169', '\u1112\u1169\u11BC\u1109\u116E', '\u1112\u1169\u11BC\u110E\u1161', '\u1112\u116A\u1106\u1167\u11AB', '\u1112\u116A\u1107\u116E\u11AB', '\u1112\u116A\u1109\u1161\u11AF', '\u1112\u116A\u110B\u116D\u110B\u1175\u11AF', '\u1112\u116A\u110C\u1161\u11BC', '\u1112\u116A\u1112\u1161\u11A8', '\u1112\u116A\u11A8\u1107\u1169', '\u1112\u116A\u11A8\u110B\u1175\u11AB', '\u1112\u116A\u11A8\u110C\u1161\u11BC', '\u1112\u116A\u11A8\u110C\u1165\u11BC', '\u1112\u116A\u11AB\u1100\u1161\u11B8', '\u1112\u116A\u11AB\u1100\u1167\u11BC', '\u1112\u116A\u11AB\u110B\u1167\u11BC', '\u1112\u116A\u11AB\u110B\u1172\u11AF', '\u1112\u116A\u11AB\u110C\u1161', '\u1112\u116A\u11AF\u1100\u1175', '\u1112\u116A\u11AF\u1103\u1169\u11BC', '\u1112\u116A\u11AF\u1107\u1161\u11AF\u1112\u1175', '\u1112\u116A\u11AF\u110B\u116D\u11BC', '\u1112\u116A\u11AF\u110D\u1161\u11A8', '\u1112\u116C\u1100\u1167\u11AB', '\u1112\u116C\u1100\u116A\u11AB', '\u1112\u116C\u1107\u1169\u11A8', '\u1112\u116C\u1109\u1162\u11A8', '\u1112\u116C\u110B\u116F\u11AB', '\u1112\u116C\u110C\u1161\u11BC', '\u1112\u116C\u110C\u1165\u11AB', '\u1112\u116C\u11BA\u1109\u116E', '\u1112\u116C\u11BC\u1103\u1161\u11AB\u1107\u1169\u1103\u1169', '\u1112\u116D\u110B\u1172\u11AF\u110C\u1165\u11A8', '\u1112\u116E\u1107\u1161\u11AB', '\u1112\u116E\u110E\u116E\u11BA\u1100\u1161\u1105\u116E', '\u1112\u116E\u11AB\u1105\u1167\u11AB', '\u1112\u116F\u11AF\u110A\u1175\u11AB', '\u1112\u1172\u1109\u1175\u11A8', '\u1112\u1172\u110B\u1175\u11AF', '\u1112\u1172\u11BC\u1102\u1162', '\u1112\u1173\u1105\u1173\u11B7', '\u1112\u1173\u11A8\u1107\u1162\u11A8', '\u1112\u1173\u11A8\u110B\u1175\u11AB', '\u1112\u1173\u11AB\u110C\u1165\u11A8', '\u1112\u1173\u11AB\u1112\u1175', '\u1112\u1173\u11BC\u1106\u1175', '\u1112\u1173\u11BC\u1107\u116E\u11AB', '\u1112\u1174\u1100\u1169\u11A8', '\u1112\u1174\u1106\u1161\u11BC', '\u1112\u1174\u1109\u1162\u11BC', '\u1112\u1174\u11AB\u1109\u1162\u11A8', '\u1112\u1175\u11B7\u1101\u1165\u11BA'];\n\nmodule.exports = korean;\n", "'use strict';\n\nvar spanish = ['a\u0301baco', 'abdomen', 'abeja', 'abierto', 'abogado', 'abono', 'aborto', 'abrazo', 'abrir', 'abuelo', 'abuso', 'acabar', 'academia', 'acceso', 'accio\u0301n', 'aceite', 'acelga', 'acento', 'aceptar', 'a\u0301cido', 'aclarar', 'acne\u0301', 'acoger', 'acoso', 'activo', 'acto', 'actriz', 'actuar', 'acudir', 'acuerdo', 'acusar', 'adicto', 'admitir', 'adoptar', 'adorno', 'aduana', 'adulto', 'ae\u0301reo', 'afectar', 'aficio\u0301n', 'afinar', 'afirmar', 'a\u0301gil', 'agitar', 'agoni\u0301a', 'agosto', 'agotar', 'agregar', 'agrio', 'agua', 'agudo', 'a\u0301guila', 'aguja', 'ahogo', 'ahorro', 'aire', 'aislar', 'ajedrez', 'ajeno', 'ajuste', 'alacra\u0301n', 'alambre', 'alarma', 'alba', 'a\u0301lbum', 'alcalde', 'aldea', 'alegre', 'alejar', 'alerta', 'aleta', 'alfiler', 'alga', 'algodo\u0301n', 'aliado', 'aliento', 'alivio', 'alma', 'almeja', 'almi\u0301bar', 'altar', 'alteza', 'altivo', 'alto', 'altura', 'alumno', 'alzar', 'amable', 'amante', 'amapola', 'amargo', 'amasar', 'a\u0301mbar', 'a\u0301mbito', 'ameno', 'amigo', 'amistad', 'amor', 'amparo', 'amplio', 'ancho', 'anciano', 'ancla', 'andar', 'ande\u0301n', 'anemia', 'a\u0301ngulo', 'anillo', 'a\u0301nimo', 'ani\u0301s', 'anotar', 'antena', 'antiguo', 'antojo', 'anual', 'anular', 'anuncio', 'an\u0303adir', 'an\u0303ejo', 'an\u0303o', 'apagar', 'aparato', 'apetito', 'apio', 'aplicar', 'apodo', 'aporte', 'apoyo', 'aprender', 'aprobar', 'apuesta', 'apuro', 'arado', 'aran\u0303a', 'arar', 'a\u0301rbitro', 'a\u0301rbol', 'arbusto', 'archivo', 'arco', 'arder', 'ardilla', 'arduo', 'a\u0301rea', 'a\u0301rido', 'aries', 'armoni\u0301a', 'arne\u0301s', 'aroma', 'arpa', 'arpo\u0301n', 'arreglo', 'arroz', 'arruga', 'arte', 'artista', 'asa', 'asado', 'asalto', 'ascenso', 'asegurar', 'aseo', 'asesor', 'asiento', 'asilo', 'asistir', 'asno', 'asombro', 'a\u0301spero', 'astilla', 'astro', 'astuto', 'asumir', 'asunto', 'atajo', 'ataque', 'atar', 'atento', 'ateo', 'a\u0301tico', 'atleta', 'a\u0301tomo', 'atraer', 'atroz', 'atu\u0301n', 'audaz', 'audio', 'auge', 'aula', 'aumento', 'ausente', 'autor', 'aval', 'avance', 'avaro', 'ave', 'avellana', 'avena', 'avestruz', 'avio\u0301n', 'aviso', 'ayer', 'ayuda', 'ayuno', 'azafra\u0301n', 'azar', 'azote', 'azu\u0301car', 'azufre', 'azul', 'baba', 'babor', 'bache', 'bahi\u0301a', 'baile', 'bajar', 'balanza', 'balco\u0301n', 'balde', 'bambu\u0301', 'banco', 'banda', 'ban\u0303o', 'barba', 'barco', 'barniz', 'barro', 'ba\u0301scula', 'basto\u0301n', 'basura', 'batalla', 'bateri\u0301a', 'batir', 'batuta', 'bau\u0301l', 'bazar', 'bebe\u0301', 'bebida', 'bello', 'besar', 'beso', 'bestia', 'bicho', 'bien', 'bingo', 'blanco', 'bloque', 'blusa', 'boa', 'bobina', 'bobo', 'boca', 'bocina', 'boda', 'bodega', 'boina', 'bola', 'bolero', 'bolsa', 'bomba', 'bondad', 'bonito', 'bono', 'bonsa\u0301i', 'borde', 'borrar', 'bosque', 'bote', 'boti\u0301n', 'bo\u0301veda', 'bozal', 'bravo', 'brazo', 'brecha', 'breve', 'brillo', 'brinco', 'brisa', 'broca', 'broma', 'bronce', 'brote', 'bruja', 'brusco', 'bruto', 'buceo', 'bucle', 'bueno', 'buey', 'bufanda', 'bufo\u0301n', 'bu\u0301ho', 'buitre', 'bulto', 'burbuja', 'burla', 'burro', 'buscar', 'butaca', 'buzo\u0301n', 'caballo', 'cabeza', 'cabina', 'cabra', 'cacao', 'cada\u0301ver', 'cadena', 'caer', 'cafe\u0301', 'cai\u0301da', 'caima\u0301n', 'caja', 'cajo\u0301n', 'cal', 'calamar', 'calcio', 'caldo', 'calidad', 'calle', 'calma', 'calor', 'calvo', 'cama', 'cambio', 'camello', 'camino', 'campo', 'ca\u0301ncer', 'candil', 'canela', 'canguro', 'canica', 'canto', 'can\u0303a', 'can\u0303o\u0301n', 'caoba', 'caos', 'capaz', 'capita\u0301n', 'capote', 'captar', 'capucha', 'cara', 'carbo\u0301n', 'ca\u0301rcel', 'careta', 'carga', 'carin\u0303o', 'carne', 'carpeta', 'carro', 'carta', 'casa', 'casco', 'casero', 'caspa', 'castor', 'catorce', 'catre', 'caudal', 'causa', 'cazo', 'cebolla', 'ceder', 'cedro', 'celda', 'ce\u0301lebre', 'celoso', 'ce\u0301lula', 'cemento', 'ceniza', 'centro', 'cerca', 'cerdo', 'cereza', 'cero', 'cerrar', 'certeza', 'ce\u0301sped', 'cetro', 'chacal', 'chaleco', 'champu\u0301', 'chancla', 'chapa', 'charla', 'chico', 'chiste', 'chivo', 'choque', 'choza', 'chuleta', 'chupar', 'ciclo\u0301n', 'ciego', 'cielo', 'cien', 'cierto', 'cifra', 'cigarro', 'cima', 'cinco', 'cine', 'cinta', 'cipre\u0301s', 'circo', 'ciruela', 'cisne', 'cita', 'ciudad', 'clamor', 'clan', 'claro', 'clase', 'clave', 'cliente', 'clima', 'cli\u0301nica', 'cobre', 'coccio\u0301n', 'cochino', 'cocina', 'coco', 'co\u0301digo', 'codo', 'cofre', 'coger', 'cohete', 'coji\u0301n', 'cojo', 'cola', 'colcha', 'colegio', 'colgar', 'colina', 'collar', 'colmo', 'columna', 'combate', 'comer', 'comida', 'co\u0301modo', 'compra', 'conde', 'conejo', 'conga', 'conocer', 'consejo', 'contar', 'copa', 'copia', 'corazo\u0301n', 'corbata', 'corcho', 'cordo\u0301n', 'corona', 'correr', 'coser', 'cosmos', 'costa', 'cra\u0301neo', 'cra\u0301ter', 'crear', 'crecer', 'crei\u0301do', 'crema', 'cri\u0301a', 'crimen', 'cripta', 'crisis', 'cromo', 'cro\u0301nica', 'croqueta', 'crudo', 'cruz', 'cuadro', 'cuarto', 'cuatro', 'cubo', 'cubrir', 'cuchara', 'cuello', 'cuento', 'cuerda', 'cuesta', 'cueva', 'cuidar', 'culebra', 'culpa', 'culto', 'cumbre', 'cumplir', 'cuna', 'cuneta', 'cuota', 'cupo\u0301n', 'cu\u0301pula', 'curar', 'curioso', 'curso', 'curva', 'cutis', 'dama', 'danza', 'dar', 'dardo', 'da\u0301til', 'deber', 'de\u0301bil', 'de\u0301cada', 'decir', 'dedo', 'defensa', 'definir', 'dejar', 'delfi\u0301n', 'delgado', 'delito', 'demora', 'denso', 'dental', 'deporte', 'derecho', 'derrota', 'desayuno', 'deseo', 'desfile', 'desnudo', 'destino', 'desvi\u0301o', 'detalle', 'detener', 'deuda', 'di\u0301a', 'diablo', 'diadema', 'diamante', 'diana', 'diario', 'dibujo', 'dictar', 'diente', 'dieta', 'diez', 'difi\u0301cil', 'digno', 'dilema', 'diluir', 'dinero', 'directo', 'dirigir', 'disco', 'disen\u0303o', 'disfraz', 'diva', 'divino', 'doble', 'doce', 'dolor', 'domingo', 'don', 'donar', 'dorado', 'dormir', 'dorso', 'dos', 'dosis', 'drago\u0301n', 'droga', 'ducha', 'duda', 'duelo', 'duen\u0303o', 'dulce', 'du\u0301o', 'duque', 'durar', 'dureza', 'duro', 'e\u0301bano', 'ebrio', 'echar', 'eco', 'ecuador', 'edad', 'edicio\u0301n', 'edificio', 'editor', 'educar', 'efecto', 'eficaz', 'eje', 'ejemplo', 'elefante', 'elegir', 'elemento', 'elevar', 'elipse', 'e\u0301lite', 'elixir', 'elogio', 'eludir', 'embudo', 'emitir', 'emocio\u0301n', 'empate', 'empen\u0303o', 'empleo', 'empresa', 'enano', 'encargo', 'enchufe', 'enci\u0301a', 'enemigo', 'enero', 'enfado', 'enfermo', 'engan\u0303o', 'enigma', 'enlace', 'enorme', 'enredo', 'ensayo', 'ensen\u0303ar', 'entero', 'entrar', 'envase', 'envi\u0301o', 'e\u0301poca', 'equipo', 'erizo', 'escala', 'escena', 'escolar', 'escribir', 'escudo', 'esencia', 'esfera', 'esfuerzo', 'espada', 'espejo', 'espi\u0301a', 'esposa', 'espuma', 'esqui\u0301', 'estar', 'este', 'estilo', 'estufa', 'etapa', 'eterno', 'e\u0301tica', 'etnia', 'evadir', 'evaluar', 'evento', 'evitar', 'exacto', 'examen', 'exceso', 'excusa', 'exento', 'exigir', 'exilio', 'existir', 'e\u0301xito', 'experto', 'explicar', 'exponer', 'extremo', 'fa\u0301brica', 'fa\u0301bula', 'fachada', 'fa\u0301cil', 'factor', 'faena', 'faja', 'falda', 'fallo', 'falso', 'faltar', 'fama', 'familia', 'famoso', 'farao\u0301n', 'farmacia', 'farol', 'farsa', 'fase', 'fatiga', 'fauna', 'favor', 'fax', 'febrero', 'fecha', 'feliz', 'feo', 'feria', 'feroz', 'fe\u0301rtil', 'fervor', 'festi\u0301n', 'fiable', 'fianza', 'fiar', 'fibra', 'ficcio\u0301n', 'ficha', 'fideo', 'fiebre', 'fiel', 'fiera', 'fiesta', 'figura', 'fijar', 'fijo', 'fila', 'filete', 'filial', 'filtro', 'fin', 'finca', 'fingir', 'finito', 'firma', 'flaco', 'flauta', 'flecha', 'flor', 'flota', 'fluir', 'flujo', 'flu\u0301or', 'fobia', 'foca', 'fogata', 'fogo\u0301n', 'folio', 'folleto', 'fondo', 'forma', 'forro', 'fortuna', 'forzar', 'fosa', 'foto', 'fracaso', 'fra\u0301gil', 'franja', 'frase', 'fraude', 'frei\u0301r', 'freno', 'fresa', 'fri\u0301o', 'frito', 'fruta', 'fuego', 'fuente', 'fuerza', 'fuga', 'fumar', 'funcio\u0301n', 'funda', 'furgo\u0301n', 'furia', 'fusil', 'fu\u0301tbol', 'futuro', 'gacela', 'gafas', 'gaita', 'gajo', 'gala', 'galeri\u0301a', 'gallo', 'gamba', 'ganar', 'gancho', 'ganga', 'ganso', 'garaje', 'garza', 'gasolina', 'gastar', 'gato', 'gavila\u0301n', 'gemelo', 'gemir', 'gen', 'ge\u0301nero', 'genio', 'gente', 'geranio', 'gerente', 'germen', 'gesto', 'gigante', 'gimnasio', 'girar', 'giro', 'glaciar', 'globo', 'gloria', 'gol', 'golfo', 'goloso', 'golpe', 'goma', 'gordo', 'gorila', 'gorra', 'gota', 'goteo', 'gozar', 'grada', 'gra\u0301fico', 'grano', 'grasa', 'gratis', 'grave', 'grieta', 'grillo', 'gripe', 'gris', 'grito', 'grosor', 'gru\u0301a', 'grueso', 'grumo', 'grupo', 'guante', 'guapo', 'guardia', 'guerra', 'gui\u0301a', 'guin\u0303o', 'guion', 'guiso', 'guitarra', 'gusano', 'gustar', 'haber', 'ha\u0301bil', 'hablar', 'hacer', 'hacha', 'hada', 'hallar', 'hamaca', 'harina', 'haz', 'hazan\u0303a', 'hebilla', 'hebra', 'hecho', 'helado', 'helio', 'hembra', 'herir', 'hermano', 'he\u0301roe', 'hervir', 'hielo', 'hierro', 'hi\u0301gado', 'higiene', 'hijo', 'himno', 'historia', 'hocico', 'hogar', 'hoguera', 'hoja', 'hombre', 'hongo', 'honor', 'honra', 'hora', 'hormiga', 'horno', 'hostil', 'hoyo', 'hueco', 'huelga', 'huerta', 'hueso', 'huevo', 'huida', 'huir', 'humano', 'hu\u0301medo', 'humilde', 'humo', 'hundir', 'huraca\u0301n', 'hurto', 'icono', 'ideal', 'idioma', 'i\u0301dolo', 'iglesia', 'iglu\u0301', 'igual', 'ilegal', 'ilusio\u0301n', 'imagen', 'ima\u0301n', 'imitar', 'impar', 'imperio', 'imponer', 'impulso', 'incapaz', 'i\u0301ndice', 'inerte', 'infiel', 'informe', 'ingenio', 'inicio', 'inmenso', 'inmune', 'innato', 'insecto', 'instante', 'intere\u0301s', 'i\u0301ntimo', 'intuir', 'inu\u0301til', 'invierno', 'ira', 'iris', 'ironi\u0301a', 'isla', 'islote', 'jabali\u0301', 'jabo\u0301n', 'jamo\u0301n', 'jarabe', 'jardi\u0301n', 'jarra', 'jaula', 'jazmi\u0301n', 'jefe', 'jeringa', 'jinete', 'jornada', 'joroba', 'joven', 'joya', 'juerga', 'jueves', 'juez', 'jugador', 'jugo', 'juguete', 'juicio', 'junco', 'jungla', 'junio', 'juntar', 'ju\u0301piter', 'jurar', 'justo', 'juvenil', 'juzgar', 'kilo', 'koala', 'labio', 'lacio', 'lacra', 'lado', 'ladro\u0301n', 'lagarto', 'la\u0301grima', 'laguna', 'laico', 'lamer', 'la\u0301mina', 'la\u0301mpara', 'lana', 'lancha', 'langosta', 'lanza', 'la\u0301piz', 'largo', 'larva', 'la\u0301stima', 'lata', 'la\u0301tex', 'latir', 'laurel', 'lavar', 'lazo', 'leal', 'leccio\u0301n', 'leche', 'lector', 'leer', 'legio\u0301n', 'legumbre', 'lejano', 'lengua', 'lento', 'len\u0303a', 'leo\u0301n', 'leopardo', 'lesio\u0301n', 'letal', 'letra', 'leve', 'leyenda', 'libertad', 'libro', 'licor', 'li\u0301der', 'lidiar', 'lienzo', 'liga', 'ligero', 'lima', 'li\u0301mite', 'limo\u0301n', 'limpio', 'lince', 'lindo', 'li\u0301nea', 'lingote', 'lino', 'linterna', 'li\u0301quido', 'liso', 'lista', 'litera', 'litio', 'litro', 'llaga', 'llama', 'llanto', 'llave', 'llegar', 'llenar', 'llevar', 'llorar', 'llover', 'lluvia', 'lobo', 'locio\u0301n', 'loco', 'locura', 'lo\u0301gica', 'logro', 'lombriz', 'lomo', 'lonja', 'lote', 'lucha', 'lucir', 'lugar', 'lujo', 'luna', 'lunes', 'lupa', 'lustro', 'luto', 'luz', 'maceta', 'macho', 'madera', 'madre', 'maduro', 'maestro', 'mafia', 'magia', 'mago', 'mai\u0301z', 'maldad', 'maleta', 'malla', 'malo', 'mama\u0301', 'mambo', 'mamut', 'manco', 'mando', 'manejar', 'manga', 'maniqui\u0301', 'manjar', 'mano', 'manso', 'manta', 'man\u0303ana', 'mapa', 'ma\u0301quina', 'mar', 'marco', 'marea', 'marfil', 'margen', 'marido', 'ma\u0301rmol', 'marro\u0301n', 'martes', 'marzo', 'masa', 'ma\u0301scara', 'masivo', 'matar', 'materia', 'matiz', 'matriz', 'ma\u0301ximo', 'mayor', 'mazorca', 'mecha', 'medalla', 'medio', 'me\u0301dula', 'mejilla', 'mejor', 'melena', 'melo\u0301n', 'memoria', 'menor', 'mensaje', 'mente', 'menu\u0301', 'mercado', 'merengue', 'me\u0301rito', 'mes', 'meso\u0301n', 'meta', 'meter', 'me\u0301todo', 'metro', 'mezcla', 'miedo', 'miel', 'miembro', 'miga', 'mil', 'milagro', 'militar', 'millo\u0301n', 'mimo', 'mina', 'minero', 'mi\u0301nimo', 'minuto', 'miope', 'mirar', 'misa', 'miseria', 'misil', 'mismo', 'mitad', 'mito', 'mochila', 'mocio\u0301n', 'moda', 'modelo', 'moho', 'mojar', 'molde', 'moler', 'molino', 'momento', 'momia', 'monarca', 'moneda', 'monja', 'monto', 'mon\u0303o', 'morada', 'morder', 'moreno', 'morir', 'morro', 'morsa', 'mortal', 'mosca', 'mostrar', 'motivo', 'mover', 'mo\u0301vil', 'mozo', 'mucho', 'mudar', 'mueble', 'muela', 'muerte', 'muestra', 'mugre', 'mujer', 'mula', 'muleta', 'multa', 'mundo', 'mun\u0303eca', 'mural', 'muro', 'mu\u0301sculo', 'museo', 'musgo', 'mu\u0301sica', 'muslo', 'na\u0301car', 'nacio\u0301n', 'nadar', 'naipe', 'naranja', 'nariz', 'narrar', 'nasal', 'natal', 'nativo', 'natural', 'na\u0301usea', 'naval', 'nave', 'navidad', 'necio', 'ne\u0301ctar', 'negar', 'negocio', 'negro', 'neo\u0301n', 'nervio', 'neto', 'neutro', 'nevar', 'nevera', 'nicho', 'nido', 'niebla', 'nieto', 'nin\u0303ez', 'nin\u0303o', 'ni\u0301tido', 'nivel', 'nobleza', 'noche', 'no\u0301mina', 'noria', 'norma', 'norte', 'nota', 'noticia', 'novato', 'novela', 'novio', 'nube', 'nuca', 'nu\u0301cleo', 'nudillo', 'nudo', 'nuera', 'nueve', 'nuez', 'nulo', 'nu\u0301mero', 'nutria', 'oasis', 'obeso', 'obispo', 'objeto', 'obra', 'obrero', 'observar', 'obtener', 'obvio', 'oca', 'ocaso', 'oce\u0301ano', 'ochenta', 'ocho', 'ocio', 'ocre', 'octavo', 'octubre', 'oculto', 'ocupar', 'ocurrir', 'odiar', 'odio', 'odisea', 'oeste', 'ofensa', 'oferta', 'oficio', 'ofrecer', 'ogro', 'oi\u0301do', 'oi\u0301r', 'ojo', 'ola', 'oleada', 'olfato', 'olivo', 'olla', 'olmo', 'olor', 'olvido', 'ombligo', 'onda', 'onza', 'opaco', 'opcio\u0301n', 'o\u0301pera', 'opinar', 'oponer', 'optar', 'o\u0301ptica', 'opuesto', 'oracio\u0301n', 'orador', 'oral', 'o\u0301rbita', 'orca', 'orden', 'oreja', 'o\u0301rgano', 'orgi\u0301a', 'orgullo', 'oriente', 'origen', 'orilla', 'oro', 'orquesta', 'oruga', 'osadi\u0301a', 'oscuro', 'osezno', 'oso', 'ostra', 'oton\u0303o', 'otro', 'oveja', 'o\u0301vulo', 'o\u0301xido', 'oxi\u0301geno', 'oyente', 'ozono', 'pacto', 'padre', 'paella', 'pa\u0301gina', 'pago', 'pai\u0301s', 'pa\u0301jaro', 'palabra', 'palco', 'paleta', 'pa\u0301lido', 'palma', 'paloma', 'palpar', 'pan', 'panal', 'pa\u0301nico', 'pantera', 'pan\u0303uelo', 'papa\u0301', 'papel', 'papilla', 'paquete', 'parar', 'parcela', 'pared', 'parir', 'paro', 'pa\u0301rpado', 'parque', 'pa\u0301rrafo', 'parte', 'pasar', 'paseo', 'pasio\u0301n', 'paso', 'pasta', 'pata', 'patio', 'patria', 'pausa', 'pauta', 'pavo', 'payaso', 'peato\u0301n', 'pecado', 'pecera', 'pecho', 'pedal', 'pedir', 'pegar', 'peine', 'pelar', 'peldan\u0303o', 'pelea', 'peligro', 'pellejo', 'pelo', 'peluca', 'pena', 'pensar', 'pen\u0303o\u0301n', 'peo\u0301n', 'peor', 'pepino', 'pequen\u0303o', 'pera', 'percha', 'perder', 'pereza', 'perfil', 'perico', 'perla', 'permiso', 'perro', 'persona', 'pesa', 'pesca', 'pe\u0301simo', 'pestan\u0303a', 'pe\u0301talo', 'petro\u0301leo', 'pez', 'pezun\u0303a', 'picar', 'picho\u0301n', 'pie', 'piedra', 'pierna', 'pieza', 'pijama', 'pilar', 'piloto', 'pimienta', 'pino', 'pintor', 'pinza', 'pin\u0303a', 'piojo', 'pipa', 'pirata', 'pisar', 'piscina', 'piso', 'pista', 'pito\u0301n', 'pizca', 'placa', 'plan', 'plata', 'playa', 'plaza', 'pleito', 'pleno', 'plomo', 'pluma', 'plural', 'pobre', 'poco', 'poder', 'podio', 'poema', 'poesi\u0301a', 'poeta', 'polen', 'polici\u0301a', 'pollo', 'polvo', 'pomada', 'pomelo', 'pomo', 'pompa', 'poner', 'porcio\u0301n', 'portal', 'posada', 'poseer', 'posible', 'poste', 'potencia', 'potro', 'pozo', 'prado', 'precoz', 'pregunta', 'premio', 'prensa', 'preso', 'previo', 'primo', 'pri\u0301ncipe', 'prisio\u0301n', 'privar', 'proa', 'probar', 'proceso', 'producto', 'proeza', 'profesor', 'programa', 'prole', 'promesa', 'pronto', 'propio', 'pro\u0301ximo', 'prueba', 'pu\u0301blico', 'puchero', 'pudor', 'pueblo', 'puerta', 'puesto', 'pulga', 'pulir', 'pulmo\u0301n', 'pulpo', 'pulso', 'puma', 'punto', 'pun\u0303al', 'pun\u0303o', 'pupa', 'pupila', 'pure\u0301', 'quedar', 'queja', 'quemar', 'querer', 'queso', 'quieto', 'qui\u0301mica', 'quince', 'quitar', 'ra\u0301bano', 'rabia', 'rabo', 'racio\u0301n', 'radical', 'rai\u0301z', 'rama', 'rampa', 'rancho', 'rango', 'rapaz', 'ra\u0301pido', 'rapto', 'rasgo', 'raspa', 'rato', 'rayo', 'raza', 'razo\u0301n', 'reaccio\u0301n', 'realidad', 'reban\u0303o', 'rebote', 'recaer', 'receta', 'rechazo', 'recoger', 'recreo', 'recto', 'recurso', 'red', 'redondo', 'reducir', 'reflejo', 'reforma', 'refra\u0301n', 'refugio', 'regalo', 'regir', 'regla', 'regreso', 'rehe\u0301n', 'reino', 'rei\u0301r', 'reja', 'relato', 'relevo', 'relieve', 'relleno', 'reloj', 'remar', 'remedio', 'remo', 'rencor', 'rendir', 'renta', 'reparto', 'repetir', 'reposo', 'reptil', 'res', 'rescate', 'resina', 'respeto', 'resto', 'resumen', 'retiro', 'retorno', 'retrato', 'reunir', 'reve\u0301s', 'revista', 'rey', 'rezar', 'rico', 'riego', 'rienda', 'riesgo', 'rifa', 'ri\u0301gido', 'rigor', 'rinco\u0301n', 'rin\u0303o\u0301n', 'ri\u0301o', 'riqueza', 'risa', 'ritmo', 'rito', 'rizo', 'roble', 'roce', 'rociar', 'rodar', 'rodeo', 'rodilla', 'roer', 'rojizo', 'rojo', 'romero', 'romper', 'ron', 'ronco', 'ronda', 'ropa', 'ropero', 'rosa', 'rosca', 'rostro', 'rotar', 'rubi\u0301', 'rubor', 'rudo', 'rueda', 'rugir', 'ruido', 'ruina', 'ruleta', 'rulo', 'rumbo', 'rumor', 'ruptura', 'ruta', 'rutina', 'sa\u0301bado', 'saber', 'sabio', 'sable', 'sacar', 'sagaz', 'sagrado', 'sala', 'saldo', 'salero', 'salir', 'salmo\u0301n', 'salo\u0301n', 'salsa', 'salto', 'salud', 'salvar', 'samba', 'sancio\u0301n', 'sandi\u0301a', 'sanear', 'sangre', 'sanidad', 'sano', 'santo', 'sapo', 'saque', 'sardina', 'sarte\u0301n', 'sastre', 'sata\u0301n', 'sauna', 'saxofo\u0301n', 'seccio\u0301n', 'seco', 'secreto', 'secta', 'sed', 'seguir', 'seis', 'sello', 'selva', 'semana', 'semilla', 'senda', 'sensor', 'sen\u0303al', 'sen\u0303or', 'separar', 'sepia', 'sequi\u0301a', 'ser', 'serie', 'sermo\u0301n', 'servir', 'sesenta', 'sesio\u0301n', 'seta', 'setenta', 'severo', 'sexo', 'sexto', 'sidra', 'siesta', 'siete', 'siglo', 'signo', 'si\u0301laba', 'silbar', 'silencio', 'silla', 'si\u0301mbolo', 'simio', 'sirena', 'sistema', 'sitio', 'situar', 'sobre', 'socio', 'sodio', 'sol', 'solapa', 'soldado', 'soledad', 'so\u0301lido', 'soltar', 'solucio\u0301n', 'sombra', 'sondeo', 'sonido', 'sonoro', 'sonrisa', 'sopa', 'soplar', 'soporte', 'sordo', 'sorpresa', 'sorteo', 'soste\u0301n', 'so\u0301tano', 'suave', 'subir', 'suceso', 'sudor', 'suegra', 'suelo', 'suen\u0303o', 'suerte', 'sufrir', 'sujeto', 'sulta\u0301n', 'sumar', 'superar', 'suplir', 'suponer', 'supremo', 'sur', 'surco', 'suren\u0303o', 'surgir', 'susto', 'sutil', 'tabaco', 'tabique', 'tabla', 'tabu\u0301', 'taco', 'tacto', 'tajo', 'talar', 'talco', 'talento', 'talla', 'talo\u0301n', 'taman\u0303o', 'tambor', 'tango', 'tanque', 'tapa', 'tapete', 'tapia', 'tapo\u0301n', 'taquilla', 'tarde', 'tarea', 'tarifa', 'tarjeta', 'tarot', 'tarro', 'tarta', 'tatuaje', 'tauro', 'taza', 'tazo\u0301n', 'teatro', 'techo', 'tecla', 'te\u0301cnica', 'tejado', 'tejer', 'tejido', 'tela', 'tele\u0301fono', 'tema', 'temor', 'templo', 'tenaz', 'tender', 'tener', 'tenis', 'tenso', 'teori\u0301a', 'terapia', 'terco', 'te\u0301rmino', 'ternura', 'terror', 'tesis', 'tesoro', 'testigo', 'tetera', 'texto', 'tez', 'tibio', 'tiburo\u0301n', 'tiempo', 'tienda', 'tierra', 'tieso', 'tigre', 'tijera', 'tilde', 'timbre', 'ti\u0301mido', 'timo', 'tinta', 'ti\u0301o', 'ti\u0301pico', 'tipo', 'tira', 'tiro\u0301n', 'tita\u0301n', 'ti\u0301tere', 'ti\u0301tulo', 'tiza', 'toalla', 'tobillo', 'tocar', 'tocino', 'todo', 'toga', 'toldo', 'tomar', 'tono', 'tonto', 'topar', 'tope', 'toque', 'to\u0301rax', 'torero', 'tormenta', 'torneo', 'toro', 'torpedo', 'torre', 'torso', 'tortuga', 'tos', 'tosco', 'toser', 'to\u0301xico', 'trabajo', 'tractor', 'traer', 'tra\u0301fico', 'trago', 'traje', 'tramo', 'trance', 'trato', 'trauma', 'trazar', 'tre\u0301bol', 'tregua', 'treinta', 'tren', 'trepar', 'tres', 'tribu', 'trigo', 'tripa', 'triste', 'triunfo', 'trofeo', 'trompa', 'tronco', 'tropa', 'trote', 'trozo', 'truco', 'trueno', 'trufa', 'tuberi\u0301a', 'tubo', 'tuerto', 'tumba', 'tumor', 'tu\u0301nel', 'tu\u0301nica', 'turbina', 'turismo', 'turno', 'tutor', 'ubicar', 'u\u0301lcera', 'umbral', 'unidad', 'unir', 'universo', 'uno', 'untar', 'un\u0303a', 'urbano', 'urbe', 'urgente', 'urna', 'usar', 'usuario', 'u\u0301til', 'utopi\u0301a', 'uva', 'vaca', 'vaci\u0301o', 'vacuna', 'vagar', 'vago', 'vaina', 'vajilla', 'vale', 'va\u0301lido', 'valle', 'valor', 'va\u0301lvula', 'vampiro', 'vara', 'variar', 'varo\u0301n', 'vaso', 'vecino', 'vector', 'vehi\u0301culo', 'veinte', 'vejez', 'vela', 'velero', 'veloz', 'vena', 'vencer', 'venda', 'veneno', 'vengar', 'venir', 'venta', 'venus', 'ver', 'verano', 'verbo', 'verde', 'vereda', 'verja', 'verso', 'verter', 'vi\u0301a', 'viaje', 'vibrar', 'vicio', 'vi\u0301ctima', 'vida', 'vi\u0301deo', 'vidrio', 'viejo', 'viernes', 'vigor', 'vil', 'villa', 'vinagre', 'vino', 'vin\u0303edo', 'violi\u0301n', 'viral', 'virgo', 'virtud', 'visor', 'vi\u0301spera', 'vista', 'vitamina', 'viudo', 'vivaz', 'vivero', 'vivir', 'vivo', 'volca\u0301n', 'volumen', 'volver', 'voraz', 'votar', 'voto', 'voz', 'vuelo', 'vulgar', 'yacer', 'yate', 'yegua', 'yema', 'yerno', 'yeso', 'yodo', 'yoga', 'yogur', 'zafiro', 'zanja', 'zapato', 'zarza', 'zona', 'zorro', 'zumo', 'zurdo'];\n\nmodule.exports = spanish;\n", "module.exports = {\n  'CHINESE': require('./chinese'),\n  'ENGLISH': require('./english'),\n  'FRENCH': require('./french'),\n  'ITALIAN': require('./italian'),\n  'JAPANESE': require('./japanese'),\n  'KOREAN': require('./korean'),\n  'SPANISH': require('./spanish')\n};\n", "'use strict';\n\nconst bitcore = require('bitcore-lib');\nconst BN = bitcore.crypto.BN;\nconst unorm = require('unorm');\nconst _ = bitcore.deps._;\n\nconst pbkdf2 = require('./pbkdf2');\nconst errors = require('./errors');\n\nconst Hash = bitcore.crypto.Hash;\nconst Random = bitcore.crypto.Random;\n\nconst $ = bitcore.util.preconditions;\n\n\n/**\n * This is an immutable class that represents a BIP39 Mnemonic code.\n * See BIP39 specification for more info: https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki\n * A Mnemonic code is a a group of easy to remember words used for the generation\n * of deterministic wallets. A Mnemonic can be used to generate a seed using\n * an optional passphrase, for later generate a HDPrivateKey.\n *\n * @example\n * // generate a random mnemonic\n * var mnemonic = new Mnemonic();\n * var phrase = mnemonic.phrase;\n *\n * // use a different language\n * var mnemonic = new Mnemonic(Mnemonic.Words.SPANISH);\n * var xprivkey = mnemonic.toHDPrivateKey();\n *\n * @param {*=} data - a seed, phrase, or entropy to initialize (can be skipped)\n * @param {Array=} wordlist - the wordlist to generate mnemonics from\n * @returns {Mnemonic} A new instance of Mnemonic\n * @constructor\n */\nvar Mnemonic = function(data, wordlist) {\n  if (!(this instanceof Mnemonic)) {\n    return new Mnemonic(data, wordlist);\n  }\n\n  if (_.isArray(data)) {\n    wordlist = data;\n    data = null;\n  }\n\n\n  // handle data overloading\n  var ent, phrase, seed;\n  if (Buffer.isBuffer(data)) {\n    seed = data;\n    ent = seed.length * 8;\n  } else if (_.isString(data)) {\n    phrase = unorm.nfkd(data);\n  } else if (_.isNumber(data)) {\n    ent = data;\n  } else if (data) {\n    throw new bitcore.errors.InvalidArgument('data', 'Must be a Buffer, a string or an integer');\n  }\n  ent = ent || 128;\n\n\n  // check and detect wordlist\n  wordlist = wordlist || Mnemonic._getDictionary(phrase);\n  if (phrase && !wordlist) {\n    throw new errors.UnknownWordlist(phrase);\n  }\n  wordlist = wordlist || Mnemonic.Words.ENGLISH;\n\n  if (seed) {\n    phrase = Mnemonic._entropy2mnemonic(seed, wordlist);\n  }\n\n\n  // validate phrase and ent\n  if (phrase && !Mnemonic.isValid(phrase, wordlist)) {\n    throw new errors.InvalidMnemonic(phrase);\n  }\n  if (ent % 32 !== 0 || ent < 128 || ent > 256) {\n    throw new bitcore.errors.InvalidArgument('ENT', 'Values must be ENT > 128 and ENT < 256 and ENT % 32 == 0');\n  }\n\n  phrase = phrase || Mnemonic._mnemonic(ent, wordlist);\n\n  // this fixes spacing in JP\n  phrase = unorm.nfkd(phrase);\n\n  Object.defineProperty(this, 'wordlist', {\n    configurable: false,\n    value: wordlist\n  });\n\n  Object.defineProperty(this, 'phrase', {\n    configurable: false,\n    value: phrase\n  });\n};\n\nMnemonic.Words = require('./words');\n\n/**\n * Will return a boolean if the mnemonic is valid\n *\n * @example\n *\n * var valid = Mnemonic.isValid('lab rescue lunch elbow recall phrase perfect donkey biology guess moment husband');\n * // true\n *\n * @param {String} mnemonic - The mnemonic string\n * @param {String} [wordlist] - The wordlist used\n * @returns {boolean}\n */\nMnemonic.isValid = function(mnemonic, wordlist) {\n  mnemonic = unorm.nfkd(mnemonic);\n  wordlist = wordlist || Mnemonic._getDictionary(mnemonic);\n\n  if (!wordlist) {\n    return false;\n  }\n\n  var words = mnemonic.split(' ');\n  var bin = '';\n  for (var i = 0; i < words.length; i++) {\n    var ind = wordlist.indexOf(words[i]);\n    if (ind < 0) return false;\n    bin = bin + ('00000000000' + ind.toString(2)).slice(-11);\n  }\n\n  var cs = bin.length / 33;\n  var hash_bits = bin.slice(-cs);\n  var nonhash_bits = bin.slice(0, bin.length - cs);\n  var buf = Buffer.alloc(nonhash_bits.length / 8);\n  for (i = 0; i < nonhash_bits.length / 8; i++) {\n    buf.writeUInt8(parseInt(bin.slice(i * 8, (i + 1) * 8), 2), i);\n  }\n  var expected_hash_bits = Mnemonic._entropyChecksum(buf);\n  return expected_hash_bits === hash_bits;\n};\n\n/**\n * Internal function to check if a mnemonic belongs to a wordlist.\n *\n * @param {String} mnemonic - The mnemonic string\n * @param {String} wordlist - The wordlist\n * @returns {boolean}\n */\nMnemonic._belongsToWordlist = function(mnemonic, wordlist) {\n  var words = unorm.nfkd(mnemonic).split(' ');\n  for (var i = 0; i < words.length; i++) {\n    var ind = wordlist.indexOf(words[i]);\n    if (ind < 0) return false;\n  }\n  return true;\n};\n\n/**\n * Internal function to detect the wordlist used to generate the mnemonic.\n *\n * @param {String} mnemonic - The mnemonic string\n * @returns {Array} the wordlist or null\n */\nMnemonic._getDictionary = function(mnemonic) {\n  if (!mnemonic) return null;\n\n  var dicts = Object.keys(Mnemonic.Words);\n  for (var i = 0; i < dicts.length; i++) {\n    var key = dicts[i];\n    if (Mnemonic._belongsToWordlist(mnemonic, Mnemonic.Words[key])) {\n      return Mnemonic.Words[key];\n    }\n  }\n  return null;\n};\n\n/**\n * Will generate a seed based on the mnemonic and optional passphrase.\n *\n * @param {String} [passphrase]\n * @returns {Buffer}\n */\nMnemonic.prototype.toSeed = function(passphrase) {\n  passphrase = passphrase || '';\n  return pbkdf2(unorm.nfkd(this.phrase), unorm.nfkd('mnemonic' + passphrase), 2048, 64);\n};\n\n/**\n * Will generate a Mnemonic object based on a seed.\n *\n * @param {Buffer} [seed]\n * @param {string} [wordlist]\n * @returns {Mnemonic}\n */\nMnemonic.fromSeed = function(seed, wordlist) {\n  $.checkArgument(Buffer.isBuffer(seed), 'seed must be a Buffer.');\n  $.checkArgument(_.isArray(wordlist) || _.isString(wordlist), 'wordlist must be a string or an array.');\n  return new Mnemonic(seed, wordlist);\n};\n\n/**\n *\n * Generates a HD Private Key from a Mnemonic.\n * Optionally receive a passphrase and bitcoin network.\n *\n * @param {String=} [passphrase]\n * @param {Network|String|number=} [network] - The network: 'livenet' or 'testnet'\n * @returns {HDPrivateKey}\n */\nMnemonic.prototype.toHDPrivateKey = function(passphrase, network) {\n  var seed = this.toSeed(passphrase);\n  return bitcore.HDPrivateKey.fromSeed(seed, network);\n};\n\n/**\n * Will return a the string representation of the mnemonic\n *\n * @returns {String} Mnemonic\n */\nMnemonic.prototype.toString = function() {\n  return this.phrase;\n};\n\n/**\n * Will return a string formatted for the console\n *\n * @returns {String} Mnemonic\n */\nMnemonic.prototype.inspect = function() {\n  return '<Mnemonic: ' + this.toString() + ' >';\n};\n\n/**\n * Internal function to generate a random mnemonic\n *\n * @param {Number} ENT - Entropy size, defaults to 128\n * @param {Array} wordlist - Array of words to generate the mnemonic\n * @returns {String} Mnemonic string\n */\nMnemonic._mnemonic = function(ENT, wordlist) {\n  var buf = Random.getRandomBuffer(ENT / 8);\n  return Mnemonic._entropy2mnemonic(buf, wordlist);\n};\n\n/**\n * Internal function to generate mnemonic based on entropy\n *\n * @param {Buffer} entropy - Entropy buffer\n * @param {Array} wordlist - Array of words to generate the mnemonic\n * @returns {String} Mnemonic string\n */\nMnemonic._entropy2mnemonic = function(entropy, wordlist) {\n  var bin = '';\n  for (var i = 0; i < entropy.length; i++) {\n    bin = bin + ('00000000' + entropy[i].toString(2)).slice(-8);\n  }\n\n  bin = bin + Mnemonic._entropyChecksum(entropy);\n  if (bin.length % 11 !== 0) {\n    throw new errors.InvalidEntropy(bin);\n  }\n  var mnemonic = [];\n  for (i = 0; i < bin.length / 11; i++) {\n    var wi = parseInt(bin.slice(i * 11, (i + 1) * 11), 2);\n    mnemonic.push(wordlist[wi]);\n  }\n  var ret;\n  if (wordlist === Mnemonic.Words.JAPANESE) {\n    ret = mnemonic.join('\\u3000');\n  } else {\n    ret = mnemonic.join(' ');\n  }\n  return ret;\n};\n\n/**\n * Internal function to create checksum of entropy\n *\n * @param {Buffer} entropy\n * @returns {string} Checksum of entropy length / 32\n * @private\n */\nMnemonic._entropyChecksum = function(entropy) {\n  var hash = Hash.sha256(entropy);\n  var bits = entropy.length * 8;\n  var cs = bits / 32;\n\n  var hashbits = new BN(hash.toString('hex'), 16).toString(2);\n\n  // zero pad the hash bits\n  while (hashbits.length % 256 !== 0) {\n    hashbits = '0' + hashbits;\n  }\n\n  var checksum = hashbits.slice(0, cs);\n\n  return checksum;\n};\n\nMnemonic.bitcore = bitcore;\n\nmodule.exports = Mnemonic;\n", "module.exports = require('./lib/mnemonic');\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", null, null, "var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : 'node'\nvar arch = os.arch()\nvar platform = os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.path(dir))\n}\n\nload.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    (process.versions && process.versions.electron) ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', platform + '-' + arch)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\n", "const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n", "const addon = require('node-gyp-build')(__dirname)\nmodule.exports = require('./lib')(new addon.Secp256k1())\n", "const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n", "module.exports = require('./lib')(require('./lib/elliptic'))\n", "try {\n  module.exports = require('./bindings')\n} catch (err) {\n  module.exports = require('./elliptic')\n}\n", "module.exports = require('crypto').randomBytes\n", null, null, "/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n", "var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n", "'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};", null, null, null, "const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n", "const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n", "const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n", "module.exports = require('./lib/api')(require('node-gyp-build')(__dirname))\n", "const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n", "const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n", "module.exports = require('./lib/api')(require('./lib/keccak'))\n", "try {\n  module.exports = require('./bindings')\n} catch (err) {\n  module.exports = require('./js')\n}\n", null, "module.exports = require('crypto').createHash\n", null, null, null, null, null, null, null, null, "\"use strict\";\n\n(function(root) {\n    const MAX_VALUE = 0x7fffffff;\n\n    // The SHA256 and PBKDF2 implementation are from scrypt-async-js:\n    // See: https://github.com/dchest/scrypt-async-js\n    function SHA256(m) {\n        const K = new Uint32Array([\n           0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,\n           0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,\n           0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,\n           0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n           0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152,\n           0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n           0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc,\n           0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819,\n           0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08,\n           0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f,\n           0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n           0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n       ]);\n\n        let h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a;\n        let h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n        const w = new Uint32Array(64);\n\n        function blocks(p) {\n            let off = 0, len = p.length;\n            while (len >= 64) {\n                let a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, u, i, j, t1, t2;\n\n                for (i = 0; i < 16; i++) {\n                    j = off + i*4;\n                    w[i] = ((p[j] & 0xff)<<24) | ((p[j+1] & 0xff)<<16) |\n                    ((p[j+2] & 0xff)<<8) | (p[j+3] & 0xff);\n                }\n\n                for (i = 16; i < 64; i++) {\n                    u = w[i-2];\n                    t1 = ((u>>>17) | (u<<(32-17))) ^ ((u>>>19) | (u<<(32-19))) ^ (u>>>10);\n\n                    u = w[i-15];\n                    t2 = ((u>>>7) | (u<<(32-7))) ^ ((u>>>18) | (u<<(32-18))) ^ (u>>>3);\n\n                    w[i] = (((t1 + w[i-7]) | 0) + ((t2 + w[i-16]) | 0)) | 0;\n                }\n\n                for (i = 0; i < 64; i++) {\n                    t1 = ((((((e>>>6) | (e<<(32-6))) ^ ((e>>>11) | (e<<(32-11))) ^\n                             ((e>>>25) | (e<<(32-25)))) + ((e & f) ^ (~e & g))) | 0) +\n                          ((h + ((K[i] + w[i]) | 0)) | 0)) | 0;\n\n                    t2 = ((((a>>>2) | (a<<(32-2))) ^ ((a>>>13) | (a<<(32-13))) ^\n                           ((a>>>22) | (a<<(32-22)))) + ((a & b) ^ (a & c) ^ (b & c))) | 0;\n\n                    h = g;\n                    g = f;\n                    f = e;\n                    e = (d + t1) | 0;\n                    d = c;\n                    c = b;\n                    b = a;\n                    a = (t1 + t2) | 0;\n                }\n\n                h0 = (h0 + a) | 0;\n                h1 = (h1 + b) | 0;\n                h2 = (h2 + c) | 0;\n                h3 = (h3 + d) | 0;\n                h4 = (h4 + e) | 0;\n                h5 = (h5 + f) | 0;\n                h6 = (h6 + g) | 0;\n                h7 = (h7 + h) | 0;\n\n                off += 64;\n                len -= 64;\n            }\n        }\n\n        blocks(m);\n\n        let i, bytesLeft = m.length % 64,\n        bitLenHi = (m.length / 0x20000000) | 0,\n        bitLenLo = m.length << 3,\n        numZeros = (bytesLeft < 56) ? 56 : 120,\n        p = m.slice(m.length - bytesLeft, m.length);\n\n        p.push(0x80);\n        for (i = bytesLeft + 1; i < numZeros; i++) { p.push(0); }\n        p.push((bitLenHi >>> 24) & 0xff);\n        p.push((bitLenHi >>> 16) & 0xff);\n        p.push((bitLenHi >>> 8)  & 0xff);\n        p.push((bitLenHi >>> 0)  & 0xff);\n        p.push((bitLenLo >>> 24) & 0xff);\n        p.push((bitLenLo >>> 16) & 0xff);\n        p.push((bitLenLo >>> 8)  & 0xff);\n        p.push((bitLenLo >>> 0)  & 0xff);\n\n        blocks(p);\n\n        return [\n            (h0 >>> 24) & 0xff, (h0 >>> 16) & 0xff, (h0 >>> 8) & 0xff, (h0 >>> 0) & 0xff,\n            (h1 >>> 24) & 0xff, (h1 >>> 16) & 0xff, (h1 >>> 8) & 0xff, (h1 >>> 0) & 0xff,\n            (h2 >>> 24) & 0xff, (h2 >>> 16) & 0xff, (h2 >>> 8) & 0xff, (h2 >>> 0) & 0xff,\n            (h3 >>> 24) & 0xff, (h3 >>> 16) & 0xff, (h3 >>> 8) & 0xff, (h3 >>> 0) & 0xff,\n            (h4 >>> 24) & 0xff, (h4 >>> 16) & 0xff, (h4 >>> 8) & 0xff, (h4 >>> 0) & 0xff,\n            (h5 >>> 24) & 0xff, (h5 >>> 16) & 0xff, (h5 >>> 8) & 0xff, (h5 >>> 0) & 0xff,\n            (h6 >>> 24) & 0xff, (h6 >>> 16) & 0xff, (h6 >>> 8) & 0xff, (h6 >>> 0) & 0xff,\n            (h7 >>> 24) & 0xff, (h7 >>> 16) & 0xff, (h7 >>> 8) & 0xff, (h7 >>> 0) & 0xff\n        ];\n    }\n\n    function PBKDF2_HMAC_SHA256_OneIter(password, salt, dkLen) {\n        // compress password if it's longer than hash block length\n        password = (password.length <= 64) ? password : SHA256(password);\n\n        const innerLen = 64 + salt.length + 4;\n        const inner = new Array(innerLen);\n        const outerKey = new Array(64);\n\n        let i;\n        let dk = [];\n\n        // inner = (password ^ ipad) || salt || counter\n        for (i = 0; i < 64; i++) { inner[i] = 0x36; }\n        for (i = 0; i < password.length; i++) { inner[i] ^= password[i]; }\n        for (i = 0; i < salt.length; i++) { inner[64 + i] = salt[i]; }\n        for (i = innerLen - 4; i < innerLen; i++) { inner[i] = 0; }\n\n        // outerKey = password ^ opad\n        for (i = 0; i < 64; i++) outerKey[i] = 0x5c;\n        for (i = 0; i < password.length; i++) outerKey[i] ^= password[i];\n\n        // increments counter inside inner\n        function incrementCounter() {\n            for (let i = innerLen - 1; i >= innerLen - 4; i--) {\n                inner[i]++;\n                if (inner[i] <= 0xff) return;\n                inner[i] = 0;\n            }\n        }\n\n        // output blocks = SHA256(outerKey || SHA256(inner)) ...\n        while (dkLen >= 32) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))));\n            dkLen -= 32;\n        }\n        if (dkLen > 0) {\n            incrementCounter();\n            dk = dk.concat(SHA256(outerKey.concat(SHA256(inner))).slice(0, dkLen));\n        }\n\n        return dk;\n    }\n\n    // The following is an adaptation of scryptsy\n    // See: https://www.npmjs.com/package/scryptsy\n    function blockmix_salsa8(BY, Yi, r, x, _X) {\n        let i;\n\n        arraycopy(BY, (2 * r - 1) * 16, _X, 0, 16);\n        for (i = 0; i < 2 * r; i++) {\n            blockxor(BY, i * 16, _X, 16);\n            salsa20_8(_X, x);\n            arraycopy(_X, 0, BY, Yi + (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2) * 16, BY, (i * 16), 16);\n        }\n\n        for (i = 0; i < r; i++) {\n            arraycopy(BY, Yi + (i * 2 + 1) * 16, BY, (i + r) * 16, 16);\n        }\n    }\n\n    function R(a, b) {\n        return (a << b) | (a >>> (32 - b));\n    }\n\n    function salsa20_8(B, x) {\n        arraycopy(B, 0, x, 0, 16);\n\n        for (let i = 8; i > 0; i -= 2) {\n            x[ 4] ^= R(x[ 0] + x[12], 7);\n            x[ 8] ^= R(x[ 4] + x[ 0], 9);\n            x[12] ^= R(x[ 8] + x[ 4], 13);\n            x[ 0] ^= R(x[12] + x[ 8], 18);\n            x[ 9] ^= R(x[ 5] + x[ 1], 7);\n            x[13] ^= R(x[ 9] + x[ 5], 9);\n            x[ 1] ^= R(x[13] + x[ 9], 13);\n            x[ 5] ^= R(x[ 1] + x[13], 18);\n            x[14] ^= R(x[10] + x[ 6], 7);\n            x[ 2] ^= R(x[14] + x[10], 9);\n            x[ 6] ^= R(x[ 2] + x[14], 13);\n            x[10] ^= R(x[ 6] + x[ 2], 18);\n            x[ 3] ^= R(x[15] + x[11], 7);\n            x[ 7] ^= R(x[ 3] + x[15], 9);\n            x[11] ^= R(x[ 7] + x[ 3], 13);\n            x[15] ^= R(x[11] + x[ 7], 18);\n            x[ 1] ^= R(x[ 0] + x[ 3], 7);\n            x[ 2] ^= R(x[ 1] + x[ 0], 9);\n            x[ 3] ^= R(x[ 2] + x[ 1], 13);\n            x[ 0] ^= R(x[ 3] + x[ 2], 18);\n            x[ 6] ^= R(x[ 5] + x[ 4], 7);\n            x[ 7] ^= R(x[ 6] + x[ 5], 9);\n            x[ 4] ^= R(x[ 7] + x[ 6], 13);\n            x[ 5] ^= R(x[ 4] + x[ 7], 18);\n            x[11] ^= R(x[10] + x[ 9], 7);\n            x[ 8] ^= R(x[11] + x[10], 9);\n            x[ 9] ^= R(x[ 8] + x[11], 13);\n            x[10] ^= R(x[ 9] + x[ 8], 18);\n            x[12] ^= R(x[15] + x[14], 7);\n            x[13] ^= R(x[12] + x[15], 9);\n            x[14] ^= R(x[13] + x[12], 13);\n            x[15] ^= R(x[14] + x[13], 18);\n        }\n\n        for (let i = 0; i < 16; ++i) {\n            B[i] += x[i];\n        }\n    }\n\n    // naive approach... going back to loop unrolling may yield additional performance\n    function blockxor(S, Si, D, len) {\n        for (let i = 0; i < len; i++) {\n            D[i] ^= S[Si + i]\n        }\n    }\n\n    function arraycopy(src, srcPos, dest, destPos, length) {\n        while (length--) {\n            dest[destPos++] = src[srcPos++];\n        }\n    }\n\n    function checkBufferish(o) {\n        if (!o || typeof(o.length) !== 'number') { return false; }\n\n        for (let i = 0; i < o.length; i++) {\n            const v = o[i];\n            if (typeof(v) !== 'number' || v % 1 || v < 0 || v >= 256) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function ensureInteger(value, name) {\n        if (typeof(value) !== \"number\" || (value % 1)) { throw new Error('invalid ' + name); }\n        return value;\n    }\n\n    // N = Cpu cost, r = Memory cost, p = parallelization cost\n    // callback(error, progress, key)\n    function _scrypt(password, salt, N, r, p, dkLen, callback) {\n\n        N = ensureInteger(N, 'N');\n        r = ensureInteger(r, 'r');\n        p = ensureInteger(p, 'p');\n\n        dkLen = ensureInteger(dkLen, 'dkLen');\n\n        if (N === 0 || (N & (N - 1)) !== 0) { throw new Error('N must be power of 2'); }\n\n        if (N > MAX_VALUE / 128 / r) { throw new Error('N too large'); }\n        if (r > MAX_VALUE / 128 / p) { throw new Error('r too large'); }\n\n        if (!checkBufferish(password)) {\n            throw new Error('password must be an array or buffer');\n        }\n        password = Array.prototype.slice.call(password);\n\n        if (!checkBufferish(salt)) {\n            throw new Error('salt must be an array or buffer');\n        }\n        salt = Array.prototype.slice.call(salt);\n\n        let b = PBKDF2_HMAC_SHA256_OneIter(password, salt, p * 128 * r);\n        const B = new Uint32Array(p * 32 * r)\n        for (let i = 0; i < B.length; i++) {\n            const j = i * 4;\n            B[i] = ((b[j + 3] & 0xff) << 24) |\n                   ((b[j + 2] & 0xff) << 16) |\n                   ((b[j + 1] & 0xff) << 8) |\n                   ((b[j + 0] & 0xff) << 0);\n        }\n\n        const XY = new Uint32Array(64 * r);\n        const V = new Uint32Array(32 * r * N);\n\n        const Yi = 32 * r;\n\n        // scratch space\n        const x = new Uint32Array(16);       // salsa20_8\n        const _X = new Uint32Array(16);      // blockmix_salsa8\n\n        const totalOps = p * N * 2;\n        let currentOp = 0;\n        let lastPercent10 = null;\n\n        // Set this to true to abandon the scrypt on the next step\n        let stop = false;\n\n        // State information\n        let state = 0;\n        let i0 = 0, i1;\n        let Bi;\n\n        // How many blockmix_salsa8 can we do per step?\n        const limit = callback ? parseInt(1000 / r): 0xffffffff;\n\n        // Trick from scrypt-async; if there is a setImmediate shim in place, use it\n        const nextTick = (typeof(setImmediate) !== 'undefined') ? setImmediate : setTimeout;\n\n        // This is really all I changed; making scryptsy a state machine so we occasionally\n        // stop and give other evnts on the evnt loop a chance to run. ~RicMoo\n        const incrementalSMix = function() {\n            if (stop) {\n                return callback(new Error('cancelled'), currentOp / totalOps);\n            }\n\n            let steps;\n\n            switch (state) {\n                case 0:\n                    // for (var i = 0; i < p; i++)...\n                    Bi = i0 * 32 * r;\n\n                    arraycopy(B, Bi, XY, 0, Yi);                       // ROMix - 1\n\n                    state = 1;                                         // Move to ROMix 2\n                    i1 = 0;\n\n                    // Fall through\n\n                case 1:\n\n                    // Run up to 1000 steps of the first inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                  // ROMix - 2\n                        arraycopy(XY, 0, V, (i1 + i) * Yi, Yi)         // ROMix - 3\n                        blockmix_salsa8(XY, Yi, r, x, _X);             // ROMix - 4\n                    }\n\n                    // for (var i = 0; i < N; i++)\n                    i1 += steps;\n                    currentOp += steps;\n\n                    if (callback) {\n                        // Call the callback with the progress (optionally stopping us)\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    i1 = 0;                                          // Move to ROMix 6\n                    state = 2;\n\n                    // Fall through\n\n                case 2:\n\n                    // Run up to 1000 steps of the second inner smix loop\n                    steps = N - i1;\n                    if (steps > limit) { steps = limit; }\n                    for (let i = 0; i < steps; i++) {                // ROMix - 6\n                        const offset = (2 * r - 1) * 16;             // ROMix - 7\n                        const j = XY[offset] & (N - 1);\n                        blockxor(V, j * Yi, XY, Yi);                 // ROMix - 8 (inner)\n                        blockmix_salsa8(XY, Yi, r, x, _X);           // ROMix - 9 (outer)\n                    }\n\n                    // for (var i = 0; i < N; i++)...\n                    i1 += steps;\n                    currentOp += steps;\n\n                    // Call the callback with the progress (optionally stopping us)\n                    if (callback) {\n                        const percent10 = parseInt(1000 * currentOp / totalOps);\n                        if (percent10 !== lastPercent10) {\n                            stop = callback(null, currentOp / totalOps);\n                            if (stop) { break; }\n                            lastPercent10 = percent10;\n                        }\n                    }\n\n                    if (i1 < N) { break; }\n\n                    arraycopy(XY, 0, B, Bi, Yi);                     // ROMix - 10\n\n                    // for (var i = 0; i < p; i++)...\n                    i0++;\n                    if (i0 < p) {\n                        state = 0;\n                        break;\n                    }\n\n                    b = [];\n                    for (let i = 0; i < B.length; i++) {\n                        b.push((B[i] >>  0) & 0xff);\n                        b.push((B[i] >>  8) & 0xff);\n                        b.push((B[i] >> 16) & 0xff);\n                        b.push((B[i] >> 24) & 0xff);\n                    }\n\n                    const derivedKey = PBKDF2_HMAC_SHA256_OneIter(password, b, dkLen);\n\n                    // Send the result to the callback\n                    if (callback) { callback(null, 1.0, derivedKey); }\n\n                    // Done; don't break (which would reschedule)\n                    return derivedKey;\n            }\n\n            // Schedule the next steps\n            if (callback) { nextTick(incrementalSMix); }\n        }\n\n        // Run the smix state machine until completion\n        if (!callback) {\n            while (true) {\n                const derivedKey = incrementalSMix();\n                if (derivedKey != undefined) { return derivedKey; }\n            }\n        }\n\n        // Bootstrap the async incremental smix\n        incrementalSMix();\n    }\n\n    const lib = {\n        scrypt: function(password, salt, N, r, p, dkLen, progressCallback) {\n            return new Promise(function(resolve, reject) {\n                let lastProgress = 0;\n                if (progressCallback) { progressCallback(0); }\n                _scrypt(password, salt, N, r, p, dkLen, function(error, progress, key) {\n                    if (error) {\n                        reject(error);\n                    } else if (key) {\n                        if (progressCallback && lastProgress !== 1) {\n                            progressCallback(1);\n                        }\n                        resolve(new Uint8Array(key));\n                    } else if (progressCallback && progress !== lastProgress) {\n                        lastProgress = progress;\n                        return progressCallback(progress);\n                    }\n                });\n            });\n        },\n        syncScrypt: function(password, salt, N, r, p, dkLen) {\n            return new Uint8Array(_scrypt(password, salt, N, r, p, dkLen));\n        }\n    };\n\n    // node.js\n    if (typeof(exports) !== 'undefined') {\n       module.exports = lib;\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define(lib);\n\n    // Web Browsers\n    } else if (root) {\n\n        // If there was an existing library \"scrypt\", make sure it is still available\n        if (root.scrypt) {\n            root._scrypt = root.scrypt;\n        }\n\n        root.scrypt = lib;\n    }\n\n})(this);\n", "'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n", "'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n", null, null, "'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar assert = _interopDefault(require('assert'));\nvar safeBuffer = _interopDefault(require('safe-buffer'));\nvar bs58check = _interopDefault(require('bs58check'));\n\nvar cryptoShim = require(\"../shims/hdkey-crypto\");\n\nvar secp256k1Shim = require(\"../shims/hdkey-secp256k1v3\");\n\nvar Buffer = safeBuffer.Buffer;\n\n\n\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8');\nvar HARDENED_OFFSET = 0x80000000;\nvar LEN = 78;\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nvar BITCOIN_VERSIONS = {private: 0x0488ADE4, public: 0x0488B21E};\n\nfunction HDKey (versions) {\n  this.versions = versions || BITCOIN_VERSIONS;\n  this.depth = 0;\n  this.index = 0;\n  this._privateKey = null;\n  this._publicKey = null;\n  this.chainCode = null;\n  this._fingerprint = 0;\n  this.parentFingerprint = 0;\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', { get: function () { return this._fingerprint } });\nObject.defineProperty(HDKey.prototype, 'identifier', { get: function () { return this._identifier } });\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', { get: function () { return this.identifier } });\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.');\n    assert(secp256k1Shim.privateKeyVerify(value) === true, 'Invalid private key');\n\n    this._privateKey = value;\n    this._publicKey = secp256k1Shim.publicKeyCreate(value, true);\n    this._identifier = hash160(this.publicKey);\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n  }\n});\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.');\n    assert(secp256k1Shim.publicKeyVerify(value) === true, 'Invalid public key');\n\n    this._publicKey = secp256k1Shim.publicKeyConvert(value, true); // force compressed point\n    this._identifier = hash160(this.publicKey);\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n    this._privateKey = null;\n  }\n});\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey) return bs58check.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])))\n    else return null\n  }\n});\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return bs58check.encode(serialize(this, this.versions.public, this.publicKey))\n  }\n});\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this\n  }\n\n  var entries = path.split('/');\n  var hdkey = this;\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"');\n      return\n    }\n\n    var hardened = (c.length > 1) && (c[c.length - 1] === \"'\");\n    var childIndex = parseInt(c, 10); // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index');\n    if (hardened) childIndex += HARDENED_OFFSET;\n\n    hdkey = hdkey.deriveChild(childIndex);\n  });\n\n  return hdkey\n};\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET;\n  var indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n\n  var data;\n\n  if (isHardened) { // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key');\n\n    var pk = this.privateKey;\n    var zb = Buffer.alloc(1, 0);\n    pk = Buffer.concat([zb, pk]);\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer]);\n  } else { // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer]);\n  }\n\n  var I = cryptoShim.createHmac('sha512', this.chainCode).update(data).digest();\n  var IL = I.slice(0, 32);\n  var IR = I.slice(32);\n\n  var hd = new HDKey(this.versions);\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = secp256k1Shim.privateKeyTweakAdd(this.privateKey, IL);\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = secp256k1Shim.publicKeyTweakAdd(this.publicKey, IL, true);\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  }\n\n  hd.chainCode = IR;\n  hd.depth = this.depth + 1;\n  hd.parentFingerprint = this.fingerprint;// .readUInt32BE(0)\n  hd.index = index;\n\n  return hd\n};\n\nHDKey.prototype.sign = function (hash) {\n  return secp256k1Shim.sign(hash, this.privateKey).signature\n};\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1Shim.verify(hash, signature, this.publicKey)\n};\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) cryptoShim.randomBytes(this._privateKey.length).copy(this._privateKey);\n  this._privateKey = null;\n  return this\n};\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  }\n};\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = cryptoShim.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest();\n  var IL = I.slice(0, 32);\n  var IR = I.slice(32);\n\n  var hdkey = new HDKey(versions);\n  hdkey.chainCode = IR;\n  hdkey.privateKey = IL;\n\n  return hdkey\n};\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS;\n  var hdkey = new HDKey(versions);\n\n  var keyBuffer = bs58check.decode(base58key);\n\n  var version = keyBuffer.readUInt32BE(0);\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public');\n\n  hdkey.depth = keyBuffer.readUInt8(4);\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5);\n  hdkey.index = keyBuffer.readUInt32BE(9);\n  hdkey.chainCode = keyBuffer.slice(13, 45);\n\n  var key = keyBuffer.slice(45);\n  if (key.readUInt8(0) === 0) { // private\n    assert(version === versions.private, 'Version mismatch: version does not match private');\n    hdkey.privateKey = key.slice(1); // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public');\n    hdkey.publicKey = key;\n  }\n\n  return hdkey\n};\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv)\n};\n\nfunction serialize (hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN);\n\n  buffer.writeUInt32BE(version, 0);\n  buffer.writeUInt8(hdkey.depth, 4);\n\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000;\n  buffer.writeUInt32BE(fingerprint, 5);\n  buffer.writeUInt32BE(hdkey.index, 9);\n\n  hdkey.chainCode.copy(buffer, 13);\n  key.copy(buffer, 45);\n\n  return buffer\n}\n\nfunction hash160 (buf) {\n  var sha = cryptoShim.createHash('sha256').update(buf).digest();\n  return cryptoShim.createHash('ripemd160').update(sha).digest()\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET;\nvar hdkey = HDKey;\n\nmodule.exports = hdkey;\n", null, null, "/*! https://mths.be/utf8js v3.0.0 by @mathias */\n;(function(root) {\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it\u2019s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\troot.version = '3.0.0';\n\troot.encode = utf8encode;\n\troot.decode = utf8decode;\n\n}(typeof exports === 'undefined' ? this.utf8 = {} : exports));\n", "/*! MIT License. Copyright 2015-2018 Richard Moore <me@ricmoo.com>. See LICENSE.txt. */\n(function(root) {\n    \"use strict\";\n\n    function checkInt(value) {\n        return (parseInt(value) === value);\n    }\n\n    function checkInts(arrayish) {\n        if (!checkInt(arrayish.length)) { return false; }\n\n        for (var i = 0; i < arrayish.length; i++) {\n            if (!checkInt(arrayish[i]) || arrayish[i] < 0 || arrayish[i] > 255) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    function coerceArray(arg, copy) {\n\n        // ArrayBuffer view\n        if (arg.buffer && arg.name === 'Uint8Array') {\n\n            if (copy) {\n                if (arg.slice) {\n                    arg = arg.slice();\n                } else {\n                    arg = Array.prototype.slice.call(arg);\n                }\n            }\n\n            return arg;\n        }\n\n        // It's an array; check it is a valid representation of a byte\n        if (Array.isArray(arg)) {\n            if (!checkInts(arg)) {\n                throw new Error('Array contains invalid value: ' + arg);\n            }\n\n            return new Uint8Array(arg);\n        }\n\n        // Something else, but behaves like an array (maybe a Buffer? Arguments?)\n        if (checkInt(arg.length) && checkInts(arg)) {\n            return new Uint8Array(arg);\n        }\n\n        throw new Error('unsupported array-like object');\n    }\n\n    function createArray(length) {\n        return new Uint8Array(length);\n    }\n\n    function copyArray(sourceArray, targetArray, targetStart, sourceStart, sourceEnd) {\n        if (sourceStart != null || sourceEnd != null) {\n            if (sourceArray.slice) {\n                sourceArray = sourceArray.slice(sourceStart, sourceEnd);\n            } else {\n                sourceArray = Array.prototype.slice.call(sourceArray, sourceStart, sourceEnd);\n            }\n        }\n        targetArray.set(sourceArray, targetStart);\n    }\n\n\n\n    var convertUtf8 = (function() {\n        function toBytes(text) {\n            var result = [], i = 0;\n            text = encodeURI(text);\n            while (i < text.length) {\n                var c = text.charCodeAt(i++);\n\n                // if it is a % sign, encode the following 2 bytes as a hex value\n                if (c === 37) {\n                    result.push(parseInt(text.substr(i, 2), 16))\n                    i += 2;\n\n                // otherwise, just the actual byte\n                } else {\n                    result.push(c)\n                }\n            }\n\n            return coerceArray(result);\n        }\n\n        function fromBytes(bytes) {\n            var result = [], i = 0;\n\n            while (i < bytes.length) {\n                var c = bytes[i];\n\n                if (c < 128) {\n                    result.push(String.fromCharCode(c));\n                    i++;\n                } else if (c > 191 && c < 224) {\n                    result.push(String.fromCharCode(((c & 0x1f) << 6) | (bytes[i + 1] & 0x3f)));\n                    i += 2;\n                } else {\n                    result.push(String.fromCharCode(((c & 0x0f) << 12) | ((bytes[i + 1] & 0x3f) << 6) | (bytes[i + 2] & 0x3f)));\n                    i += 3;\n                }\n            }\n\n            return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n    var convertHex = (function() {\n        function toBytes(text) {\n            var result = [];\n            for (var i = 0; i < text.length; i += 2) {\n                result.push(parseInt(text.substr(i, 2), 16));\n            }\n\n            return result;\n        }\n\n        // http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html\n        var Hex = '0123456789abcdef';\n\n        function fromBytes(bytes) {\n                var result = [];\n                for (var i = 0; i < bytes.length; i++) {\n                    var v = bytes[i];\n                    result.push(Hex[(v & 0xf0) >> 4] + Hex[v & 0x0f]);\n                }\n                return result.join('');\n        }\n\n        return {\n            toBytes: toBytes,\n            fromBytes: fromBytes,\n        }\n    })();\n\n\n    // Number of rounds by keysize\n    var numberOfRounds = {16: 10, 24: 12, 32: 14}\n\n    // Round constant words\n    var rcon = [0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91];\n\n    // S-box and Inverse S-box (S is for Substitution)\n    var S = [0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16];\n    var Si =[0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d];\n\n    // Transformations for encryption\n    var T1 = [0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d, 0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x02010103, 0xce6767a9, 0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a, 0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15, 0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467, 0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296, 0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a, 0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c, 0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873, 0x62313153, 0x2a15153f, 0x0804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e, 0x30181828, 0x379696a1, 0x0a05050f, 0x2f9a9ab5, 0x0e070709, 0x24121236, 0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd, 0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e, 0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6, 0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e, 0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0x00000000, 0xc1eded2c, 0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe, 0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4, 0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5, 0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594, 0x8a4545cf, 0xe9f9f910, 0x04020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44, 0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x058f8f8a, 0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf, 0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a, 0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335, 0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739, 0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac, 0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198, 0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0x0b888883, 0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79, 0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256, 0x743a3a4e, 0x140a0a1e, 0x924949db, 0x0c06060a, 0x4824246c, 0xb85c5ce4, 0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8, 0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843, 0x6e373759, 0xda6d6db7, 0x018d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0, 0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af, 0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888, 0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7, 0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21, 0x964b4bdd, 0x61bdbddc, 0x0d8b8b86, 0x0f8a8a85, 0xe0707090, 0x7c3e3e42, 0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x06030305, 0xf7f6f601, 0x1c0e0e12, 0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691, 0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813, 0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x078e8e89, 0x339494a7, 0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49, 0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x038c8c8f, 0x59a1a1f8, 0x09898980, 0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8, 0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb, 0xa85454fc, 0x6dbbbbd6, 0x2c16163a];\n    var T2 = [0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0x0dfff2f2, 0xbdd66b6b, 0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x03020101, 0xa9ce6767, 0x7d562b2b, 0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca, 0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959, 0xc98e4747, 0x0bfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf, 0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7, 0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x02f5f7f7, 0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x08f9f1f1, 0x93e27171, 0x73abd8d8, 0x53623131, 0x3f2a1515, 0x0c080404, 0x5295c7c7, 0x65462323, 0x5e9dc3c3, 0x28301818, 0xa1379696, 0x0f0a0505, 0xb52f9a9a, 0x090e0707, 0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727, 0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c, 0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0, 0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929, 0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0x00000000, 0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b, 0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a, 0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef, 0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333, 0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x06040202, 0x81fe7f7f, 0xf0a05050, 0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3, 0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x04f1f5f5, 0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010, 0x1ae5ffff, 0x0efdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313, 0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717, 0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464, 0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181, 0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090, 0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414, 0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0, 0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0x0a0c0606, 0x6c482424, 0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262, 0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7, 0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5, 0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x07f3f4f4, 0x25cfeaea, 0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba, 0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6, 0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474, 0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a, 0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x05060303, 0x01f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9, 0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1, 0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9, 0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787, 0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf, 0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf, 0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999, 0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb, 0x3a2c1616];\n    var T3 = [0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2, 0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x01030201, 0x67a9ce67, 0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76, 0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa, 0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4, 0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472, 0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26, 0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834, 0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8, 0x31536231, 0x153f2a15, 0x040c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3, 0x18283018, 0x96a13796, 0x050f0a05, 0x9ab52f9a, 0x07090e07, 0x12362412, 0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2, 0x759fea75, 0x091b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b, 0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b, 0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f, 0x84971384, 0x53f5a653, 0xd168b9d1, 0x00000000, 0xed2cc1ed, 0x20604020, 0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb, 0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058, 0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb, 0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45, 0xf910e9f9, 0x02060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f, 0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f, 0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc, 0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff, 0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0x0c14180c, 0x13352613, 0xec2fc3ec, 0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4, 0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d, 0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f, 0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88, 0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de, 0x5ee2bc5e, 0x0b1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a, 0x0a1e140a, 0x49db9249, 0x060a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2, 0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195, 0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37, 0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9, 0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65, 0x7a8ef47a, 0xaee947ae, 0x08181008, 0xbad56fba, 0x7888f078, 0x256f4a25, 0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6, 0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b, 0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e, 0xb5c471b5, 0x66aacc66, 0x48d89048, 0x03050603, 0xf601f7f6, 0x0e121c0e, 0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786, 0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8, 0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e, 0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9, 0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c, 0xa1f859a1, 0x89800989, 0x0d171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442, 0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0x0f111e0f, 0xb0cb7bb0, 0x54fca854, 0xbbd66dbb, 0x163a2c16];\n    var T4 = [0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff, 0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x01010302, 0x6767a9ce, 0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec, 0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef, 0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3, 0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4, 0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c, 0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68, 0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab, 0x31315362, 0x15153f2a, 0x04040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d, 0x18182830, 0x9696a137, 0x05050f0a, 0x9a9ab52f, 0x0707090e, 0x12123624, 0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f, 0x75759fea, 0x09091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36, 0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76, 0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e, 0x84849713, 0x5353f5a6, 0xd1d168b9, 0x00000000, 0xeded2cc1, 0x20206040, 0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d, 0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0, 0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed, 0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a, 0xf9f910e9, 0x02020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25, 0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05, 0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63, 0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5, 0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0x0c0c1418, 0x13133526, 0xecec2fc3, 0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793, 0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba, 0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e, 0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b, 0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7, 0x5e5ee2bc, 0x0b0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74, 0x0a0a1e14, 0x4949db92, 0x06060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f, 0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431, 0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e, 0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049, 0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca, 0x7a7a8ef4, 0xaeaee947, 0x08081810, 0xbabad56f, 0x787888f0, 0x25256f4a, 0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197, 0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96, 0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c, 0xb5b5c471, 0x6666aacc, 0x4848d890, 0x03030506, 0xf6f601f7, 0x0e0e121c, 0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117, 0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb, 0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907, 0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9, 0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03, 0xa1a1f859, 0x89898009, 0x0d0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684, 0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0x0f0f111e, 0xb0b0cb7b, 0x5454fca8, 0xbbbbd66d, 0x16163a2c];\n\n    // Transformations for decryption\n    var T5 = [0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb, 0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6, 0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480, 0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1, 0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x038f5fe7, 0x15929c95, 0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929, 0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd, 0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18, 0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84, 0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87, 0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a, 0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2, 0x23bfa5b2, 0x02036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0, 0x4e69e2a1, 0x65daf4cd, 0x0605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d, 0xa2f355a0, 0x058ae132, 0xa4f6eb75, 0x0b83ec39, 0x4060efaa, 0x5e719f06, 0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46, 0x91548db5, 0x71c45d05, 0x0406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997, 0x894043cc, 0x67d99e77, 0xb0e842bd, 0x07898b88, 0xe7195b38, 0x79c8eedb, 0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0x00000000, 0x09808683, 0x322bed48, 0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0x0f853856, 0x3daed51e, 0x362d3927, 0x0a0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0x0c0a67b1, 0x9357e70f, 0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69, 0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0x0e090d0b, 0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c, 0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5, 0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163, 0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d, 0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0x0d8652ec, 0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422, 0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7, 0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28, 0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b, 0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5, 0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b, 0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4, 0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08, 0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6, 0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37, 0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7, 0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54, 0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f, 0x9d5eea04, 0x018c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252, 0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e, 0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c, 0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea, 0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e, 0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b, 0xff0d9541, 0x39a80171, 0x080cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461, 0xd532b670, 0x486c5c74, 0xd0b85742];\n    var T6 = [0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b, 0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d, 0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544, 0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x02c32f75, 0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c, 0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069, 0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971, 0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a, 0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae, 0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c, 0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x07b2eb28, 0x032fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a, 0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2, 0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53, 0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x065e719f, 0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd, 0xb591548d, 0x0571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9, 0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b, 0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0x00000000, 0x83098086, 0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538, 0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54, 0x3a24362e, 0xb10c0a67, 0x0f9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5, 0xa261dc20, 0x695a774b, 0x161c121a, 0x0ae293ba, 0xe5c0a02a, 0x433c22e0, 0x1d121b17, 0x0b0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119, 0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5, 0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc, 0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611, 0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f, 0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9, 0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c, 0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b, 0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0x0d507892, 0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7, 0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512, 0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x09cd2678, 0xf46e5918, 0x01ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x0821bccf, 0xe6ef15e8, 0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2, 0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca, 0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0x0e7fcd50, 0x2f1791f6, 0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5, 0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x049d5eea, 0x5d018c35, 0x73fa8774, 0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647, 0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927, 0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273, 0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f, 0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340, 0x72161dc3, 0x0cbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3, 0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c, 0x42d0b857];\n    var T7 = [0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab, 0x45f11f9d, 0x58abacfa, 0x03934be3, 0xfa552030, 0x6df6ad76, 0x769188cc, 0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562, 0x5a49deb1, 0x1b6725ba, 0x0e9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c, 0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d, 0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9, 0x896a75c2, 0x7978f48e, 0x3e6b9958, 0x71dd27b9, 0x4fb6bee1, 0xad17f088, 0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751, 0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908, 0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x02e2724b, 0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x08a5d337, 0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf, 0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605, 0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a, 0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e, 0x8af93e21, 0x063d96dd, 0x05aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4, 0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940, 0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0x0a47a17c, 0x0fe97c42, 0x1ec9f884, 0x00000000, 0x86830980, 0xed48322b, 0x70ac1e11, 0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d, 0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a, 0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc, 0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22, 0x171d121b, 0x0d0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1, 0x074caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466, 0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4, 0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a, 0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2, 0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194, 0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233, 0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0x0b3698d4, 0x81cfa6f5, 0xde28a57a, 0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f, 0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3, 0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac, 0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59, 0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc, 0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x09d4ea9f, 0x7cd629b0, 0xb2af31a4, 0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82, 0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd, 0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x04dfe496, 0xb5e39ed1, 0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c, 0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910, 0x47136dd6, 0x618c9ad7, 0x0c7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9, 0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2, 0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d, 0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3, 0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x017139a8, 0xb3de080c, 0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c, 0x5742d0b8];\n    var T8 = [0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b, 0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad, 0xcc769188, 0x024c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5, 0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3, 0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515, 0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949, 0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27, 0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863, 0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb, 0x81a01cfe, 0x082b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752, 0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2, 0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 0x2887f230, 0xbfa5b223, 0x036aba02, 0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x07f2f0f3, 0x69e2a14e, 0xdaf4cd65, 0x05bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205, 0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd, 0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591, 0xc45d0571, 0x06d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89, 0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79, 0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0x00000000, 0x80868309, 0x2bed4832, 0x1170ac1e, 0x5a724e6c, 0x0efffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736, 0x0fd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0x0a67b10c, 0x57e70f93, 0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a, 0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x090d0b0e, 0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf, 0x99ddbbee, 0x7f60fda3, 0x01269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b, 0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7, 0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2, 0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d, 0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247, 0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787, 0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5, 0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a, 0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582, 0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8, 0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e, 0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821, 0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629, 0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774, 0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x04984af1, 0xecdaf741, 0xcd500e7f, 0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4, 0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d, 0x8c355d01, 0x877473fa, 0x0b412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9, 0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb, 0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c, 0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f, 0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38, 0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0x0d9541ff, 0xa8017139, 0x0cb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448, 0xb85742d0];\n\n    // Transformations for decryption key expansion\n    var U1 = [0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3];\n    var U2 = [0x00000000, 0x0b0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39, 0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72, 0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b, 0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4, 0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5, 0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96, 0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac, 0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3, 0x28a57ade, 0x35b761c9, 0x3eb968c4, 0x0f9357e7, 0x049d5eea, 0x198f45fd, 0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c, 0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303, 0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a, 0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477, 0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e, 0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31, 0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0, 0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093, 0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x0821bccf, 0x032fb5c2, 0x32058ae1, 0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db, 0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8, 0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9, 0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06, 0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x07b2eb28, 0x0cbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a, 0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7, 0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4, 0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5, 0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a, 0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133, 0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x09cd2678, 0x02c32f75, 0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761, 0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58, 0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13, 0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a, 0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385, 0x1b4c6a88, 0x065e719f, 0x0d507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3, 0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x01ec9ab7, 0x0ae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99, 0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8, 0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67, 0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e, 0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015, 0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c, 0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538, 0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069, 0x345bfb7e, 0x3f55f273, 0x0e7fcd50, 0x0571c45d, 0x1863df4a, 0x136dd647, 0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8, 0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9, 0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a, 0xa38d4697];\n    var U3 = [0x00000000, 0x0d0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d, 0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a, 0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77, 0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4, 0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1, 0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee, 0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920, 0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73, 0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e, 0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9, 0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x03934be3, 0x0e9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5, 0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d, 0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x05aedd3e, 0x08a5d337, 0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908, 0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd, 0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae, 0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83, 0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f, 0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72, 0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21, 0x87f23028, 0x90ef2233, 0x9de42c3a, 0x063d96dd, 0x0b3698d4, 0x1c2b8acf, 0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2, 0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1, 0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5, 0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da, 0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf, 0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0x0a47a17c, 0x074caf75, 0x1051bd6e, 0x1d5ab367, 0x3e6b9958, 0x33609751, 0x247d854a, 0x29768b43, 0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910, 0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de, 0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1, 0x42bdb0e8, 0x09d4ea9f, 0x04dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb, 0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e, 0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71, 0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814, 0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a, 0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7, 0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0, 0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed, 0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e, 0x5e963a27, 0x498b283c, 0x44802635, 0x0fe97c42, 0x02e2724b, 0x15ff6050, 0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0x0c7a37a1, 0x017139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397, 0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2, 0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731, 0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c, 0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b, 0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46];\n    var U4 = [0x00000000, 0x090d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736, 0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c, 0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a, 0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8, 0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e, 0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4, 0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9, 0x1f8f57e3, 0x16825ced, 0x0d9541ff, 0x04984af1, 0x73d323ab, 0x7ade28a5, 0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f, 0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629, 0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b, 0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d, 0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1, 0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787, 0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5, 0x133c89eb, 0x082b94f9, 0x01269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051, 0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767, 0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205, 0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678, 0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752, 0x72f5bc5c, 0x05bed506, 0x0cb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e, 0x2887f230, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a, 0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc, 0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de, 0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f, 0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65, 0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223, 0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1, 0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097, 0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd, 0x2f7502c3, 0x105633e9, 0x195b38e7, 0x024c25f5, 0x0b412efb, 0xd7618c9a, 0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac, 0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6, 0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0, 0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042, 0x6a881b4c, 0x719f065e, 0x78920d50, 0x0fd9640a, 0x06d46f04, 0x1dc37216, 0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520, 0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4, 0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292, 0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8, 0xedfc68b6, 0x0a67b10c, 0x036aba02, 0x187da710, 0x1170ac1e, 0x2e539d34, 0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272, 0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358, 0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725, 0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247, 0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571, 0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb, 0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x07f2f0f3, 0x0efffbfd, 0x79b492a7, 0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591, 0x4f9aa883, 0x4697a38d];\n\n    function convertToInt32(bytes) {\n        var result = [];\n        for (var i = 0; i < bytes.length; i += 4) {\n            result.push(\n                (bytes[i    ] << 24) |\n                (bytes[i + 1] << 16) |\n                (bytes[i + 2] <<  8) |\n                 bytes[i + 3]\n            );\n        }\n        return result;\n    }\n\n    var AES = function(key) {\n        if (!(this instanceof AES)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        Object.defineProperty(this, 'key', {\n            value: coerceArray(key, true)\n        });\n\n        this._prepare();\n    }\n\n\n    AES.prototype._prepare = function() {\n\n        var rounds = numberOfRounds[this.key.length];\n        if (rounds == null) {\n            throw new Error('invalid key size (must be 16, 24 or 32 bytes)');\n        }\n\n        // encryption round keys\n        this._Ke = [];\n\n        // decryption round keys\n        this._Kd = [];\n\n        for (var i = 0; i <= rounds; i++) {\n            this._Ke.push([0, 0, 0, 0]);\n            this._Kd.push([0, 0, 0, 0]);\n        }\n\n        var roundKeyCount = (rounds + 1) * 4;\n        var KC = this.key.length / 4;\n\n        // convert the key into ints\n        var tk = convertToInt32(this.key);\n\n        // copy values into round key arrays\n        var index;\n        for (var i = 0; i < KC; i++) {\n            index = i >> 2;\n            this._Ke[index][i % 4] = tk[i];\n            this._Kd[rounds - index][i % 4] = tk[i];\n        }\n\n        // key expansion (fips-197 section 5.2)\n        var rconpointer = 0;\n        var t = KC, tt;\n        while (t < roundKeyCount) {\n            tt = tk[KC - 1];\n            tk[0] ^= ((S[(tt >> 16) & 0xFF] << 24) ^\n                      (S[(tt >>  8) & 0xFF] << 16) ^\n                      (S[ tt        & 0xFF] <<  8) ^\n                       S[(tt >> 24) & 0xFF]        ^\n                      (rcon[rconpointer] << 24));\n            rconpointer += 1;\n\n            // key expansion (for non-256 bit)\n            if (KC != 8) {\n                for (var i = 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n\n            // key expansion for 256-bit keys is \"slightly different\" (fips-197)\n            } else {\n                for (var i = 1; i < (KC / 2); i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n                tt = tk[(KC / 2) - 1];\n\n                tk[KC / 2] ^= (S[ tt        & 0xFF]        ^\n                              (S[(tt >>  8) & 0xFF] <<  8) ^\n                              (S[(tt >> 16) & 0xFF] << 16) ^\n                              (S[(tt >> 24) & 0xFF] << 24));\n\n                for (var i = (KC / 2) + 1; i < KC; i++) {\n                    tk[i] ^= tk[i - 1];\n                }\n            }\n\n            // copy values into round key arrays\n            var i = 0, r, c;\n            while (i < KC && t < roundKeyCount) {\n                r = t >> 2;\n                c = t % 4;\n                this._Ke[r][c] = tk[i];\n                this._Kd[rounds - r][c] = tk[i++];\n                t++;\n            }\n        }\n\n        // inverse-cipher-ify the decryption round key (fips-197 section 5.3)\n        for (var r = 1; r < rounds; r++) {\n            for (var c = 0; c < 4; c++) {\n                tt = this._Kd[r][c];\n                this._Kd[r][c] = (U1[(tt >> 24) & 0xFF] ^\n                                  U2[(tt >> 16) & 0xFF] ^\n                                  U3[(tt >>  8) & 0xFF] ^\n                                  U4[ tt        & 0xFF]);\n            }\n        }\n    }\n\n    AES.prototype.encrypt = function(plaintext) {\n        if (plaintext.length != 16) {\n            throw new Error('invalid plaintext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Ke.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(plaintext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Ke[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T1[(t[ i         ] >> 24) & 0xff] ^\n                        T2[(t[(i + 1) % 4] >> 16) & 0xff] ^\n                        T3[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T4[ t[(i + 3) % 4]        & 0xff] ^\n                        this._Ke[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Ke[rounds][i];\n            result[4 * i    ] = (S[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (S[(t[(i + 1) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (S[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (S[ t[(i + 3) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n    AES.prototype.decrypt = function(ciphertext) {\n        if (ciphertext.length != 16) {\n            throw new Error('invalid ciphertext size (must be 16 bytes)');\n        }\n\n        var rounds = this._Kd.length - 1;\n        var a = [0, 0, 0, 0];\n\n        // convert plaintext to (ints ^ key)\n        var t = convertToInt32(ciphertext);\n        for (var i = 0; i < 4; i++) {\n            t[i] ^= this._Kd[0][i];\n        }\n\n        // apply round transforms\n        for (var r = 1; r < rounds; r++) {\n            for (var i = 0; i < 4; i++) {\n                a[i] = (T5[(t[ i          ] >> 24) & 0xff] ^\n                        T6[(t[(i + 3) % 4] >> 16) & 0xff] ^\n                        T7[(t[(i + 2) % 4] >>  8) & 0xff] ^\n                        T8[ t[(i + 1) % 4]        & 0xff] ^\n                        this._Kd[r][i]);\n            }\n            t = a.slice();\n        }\n\n        // the last round is special\n        var result = createArray(16), tt;\n        for (var i = 0; i < 4; i++) {\n            tt = this._Kd[rounds][i];\n            result[4 * i    ] = (Si[(t[ i         ] >> 24) & 0xff] ^ (tt >> 24)) & 0xff;\n            result[4 * i + 1] = (Si[(t[(i + 3) % 4] >> 16) & 0xff] ^ (tt >> 16)) & 0xff;\n            result[4 * i + 2] = (Si[(t[(i + 2) % 4] >>  8) & 0xff] ^ (tt >>  8)) & 0xff;\n            result[4 * i + 3] = (Si[ t[(i + 1) % 4]        & 0xff] ^  tt       ) & 0xff;\n        }\n\n        return result;\n    }\n\n\n    /**\n     *  Mode Of Operation - Electonic Codebook (ECB)\n     */\n    var ModeOfOperationECB = function(key) {\n        if (!(this instanceof ModeOfOperationECB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Electronic Code Block\";\n        this.name = \"ecb\";\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationECB.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n            block = this._aes.encrypt(block);\n            copyArray(block, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationECB.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n            copyArray(block, plaintext, i);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Block Chaining (CBC)\n     */\n    var ModeOfOperationCBC = function(key, iv) {\n        if (!(this instanceof ModeOfOperationCBC)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Block Chaining\";\n        this.name = \"cbc\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastCipherblock = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCBC.prototype.encrypt = function(plaintext) {\n        plaintext = coerceArray(plaintext);\n\n        if ((plaintext.length % 16) !== 0) {\n            throw new Error('invalid plaintext size (must be multiple of 16 bytes)');\n        }\n\n        var ciphertext = createArray(plaintext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < plaintext.length; i += 16) {\n            copyArray(plaintext, block, 0, i, i + 16);\n\n            for (var j = 0; j < 16; j++) {\n                block[j] ^= this._lastCipherblock[j];\n            }\n\n            this._lastCipherblock = this._aes.encrypt(block);\n            copyArray(this._lastCipherblock, ciphertext, i);\n        }\n\n        return ciphertext;\n    }\n\n    ModeOfOperationCBC.prototype.decrypt = function(ciphertext) {\n        ciphertext = coerceArray(ciphertext);\n\n        if ((ciphertext.length % 16) !== 0) {\n            throw new Error('invalid ciphertext size (must be multiple of 16 bytes)');\n        }\n\n        var plaintext = createArray(ciphertext.length);\n        var block = createArray(16);\n\n        for (var i = 0; i < ciphertext.length; i += 16) {\n            copyArray(ciphertext, block, 0, i, i + 16);\n            block = this._aes.decrypt(block);\n\n            for (var j = 0; j < 16; j++) {\n                plaintext[i + j] = block[j] ^ this._lastCipherblock[j];\n            }\n\n            copyArray(ciphertext, this._lastCipherblock, 0, i, i + 16);\n        }\n\n        return plaintext;\n    }\n\n\n    /**\n     *  Mode Of Operation - Cipher Feedback (CFB)\n     */\n    var ModeOfOperationCFB = function(key, iv, segmentSize) {\n        if (!(this instanceof ModeOfOperationCFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Cipher Feedback\";\n        this.name = \"cfb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 size)');\n        }\n\n        if (!segmentSize) { segmentSize = 1; }\n\n        this.segmentSize = segmentSize;\n\n        this._shiftRegister = coerceArray(iv, true);\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCFB.prototype.encrypt = function(plaintext) {\n        if ((plaintext.length % this.segmentSize) != 0) {\n            throw new Error('invalid plaintext size (must be segmentSize bytes)');\n        }\n\n        var encrypted = coerceArray(plaintext, true);\n\n        var xorSegment;\n        for (var i = 0; i < encrypted.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n            for (var j = 0; j < this.segmentSize; j++) {\n                encrypted[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(encrypted, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return encrypted;\n    }\n\n    ModeOfOperationCFB.prototype.decrypt = function(ciphertext) {\n        if ((ciphertext.length % this.segmentSize) != 0) {\n            throw new Error('invalid ciphertext size (must be segmentSize bytes)');\n        }\n\n        var plaintext = coerceArray(ciphertext, true);\n\n        var xorSegment;\n        for (var i = 0; i < plaintext.length; i += this.segmentSize) {\n            xorSegment = this._aes.encrypt(this._shiftRegister);\n\n            for (var j = 0; j < this.segmentSize; j++) {\n                plaintext[i + j] ^= xorSegment[j];\n            }\n\n            // Shift the register\n            copyArray(this._shiftRegister, this._shiftRegister, 0, this.segmentSize);\n            copyArray(ciphertext, this._shiftRegister, 16 - this.segmentSize, i, i + this.segmentSize);\n        }\n\n        return plaintext;\n    }\n\n    /**\n     *  Mode Of Operation - Output Feedback (OFB)\n     */\n    var ModeOfOperationOFB = function(key, iv) {\n        if (!(this instanceof ModeOfOperationOFB)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Output Feedback\";\n        this.name = \"ofb\";\n\n        if (!iv) {\n            iv = createArray(16);\n\n        } else if (iv.length != 16) {\n            throw new Error('invalid initialation vector size (must be 16 bytes)');\n        }\n\n        this._lastPrecipher = coerceArray(iv, true);\n        this._lastPrecipherIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationOFB.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._lastPrecipherIndex === 16) {\n                this._lastPrecipher = this._aes.encrypt(this._lastPrecipher);\n                this._lastPrecipherIndex = 0;\n            }\n            encrypted[i] ^= this._lastPrecipher[this._lastPrecipherIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationOFB.prototype.decrypt = ModeOfOperationOFB.prototype.encrypt;\n\n\n    /**\n     *  Counter object for CTR common mode of operation\n     */\n    var Counter = function(initialValue) {\n        if (!(this instanceof Counter)) {\n            throw Error('Counter must be instanitated with `new`');\n        }\n\n        // We allow 0, but anything false-ish uses the default 1\n        if (initialValue !== 0 && !initialValue) { initialValue = 1; }\n\n        if (typeof(initialValue) === 'number') {\n            this._counter = createArray(16);\n            this.setValue(initialValue);\n\n        } else {\n            this.setBytes(initialValue);\n        }\n    }\n\n    Counter.prototype.setValue = function(value) {\n        if (typeof(value) !== 'number' || parseInt(value) != value) {\n            throw new Error('invalid counter value (must be an integer)');\n        }\n\n        // We cannot safely handle numbers beyond the safe range for integers\n        if (value > Number.MAX_SAFE_INTEGER) {\n            throw new Error('integer value out of safe range');\n        }\n\n        for (var index = 15; index >= 0; --index) {\n            this._counter[index] = value % 256;\n            value = parseInt(value / 256);\n        }\n    }\n\n    Counter.prototype.setBytes = function(bytes) {\n        bytes = coerceArray(bytes, true);\n\n        if (bytes.length != 16) {\n            throw new Error('invalid counter bytes size (must be 16 bytes)');\n        }\n\n        this._counter = bytes;\n    };\n\n    Counter.prototype.increment = function() {\n        for (var i = 15; i >= 0; i--) {\n            if (this._counter[i] === 255) {\n                this._counter[i] = 0;\n            } else {\n                this._counter[i]++;\n                break;\n            }\n        }\n    }\n\n\n    /**\n     *  Mode Of Operation - Counter (CTR)\n     */\n    var ModeOfOperationCTR = function(key, counter) {\n        if (!(this instanceof ModeOfOperationCTR)) {\n            throw Error('AES must be instanitated with `new`');\n        }\n\n        this.description = \"Counter\";\n        this.name = \"ctr\";\n\n        if (!(counter instanceof Counter)) {\n            counter = new Counter(counter)\n        }\n\n        this._counter = counter;\n\n        this._remainingCounter = null;\n        this._remainingCounterIndex = 16;\n\n        this._aes = new AES(key);\n    }\n\n    ModeOfOperationCTR.prototype.encrypt = function(plaintext) {\n        var encrypted = coerceArray(plaintext, true);\n\n        for (var i = 0; i < encrypted.length; i++) {\n            if (this._remainingCounterIndex === 16) {\n                this._remainingCounter = this._aes.encrypt(this._counter._counter);\n                this._remainingCounterIndex = 0;\n                this._counter.increment();\n            }\n            encrypted[i] ^= this._remainingCounter[this._remainingCounterIndex++];\n        }\n\n        return encrypted;\n    }\n\n    // Decryption is symetric\n    ModeOfOperationCTR.prototype.decrypt = ModeOfOperationCTR.prototype.encrypt;\n\n\n    ///////////////////////\n    // Padding\n\n    // See:https://tools.ietf.org/html/rfc2315\n    function pkcs7pad(data) {\n        data = coerceArray(data, true);\n        var padder = 16 - (data.length % 16);\n        var result = createArray(data.length + padder);\n        copyArray(data, result);\n        for (var i = data.length; i < result.length; i++) {\n            result[i] = padder;\n        }\n        return result;\n    }\n\n    function pkcs7strip(data) {\n        data = coerceArray(data, true);\n        if (data.length < 16) { throw new Error('PKCS#7 invalid length'); }\n\n        var padder = data[data.length - 1];\n        if (padder > 16) { throw new Error('PKCS#7 padding byte out of range'); }\n\n        var length = data.length - padder;\n        for (var i = 0; i < padder; i++) {\n            if (data[length + i] !== padder) {\n                throw new Error('PKCS#7 invalid padding byte');\n            }\n        }\n\n        var result = createArray(length);\n        copyArray(data, result, 0, 0, length);\n        return result;\n    }\n\n    ///////////////////////\n    // Exporting\n\n\n    // The block cipher\n    var aesjs = {\n        AES: AES,\n        Counter: Counter,\n\n        ModeOfOperation: {\n            ecb: ModeOfOperationECB,\n            cbc: ModeOfOperationCBC,\n            cfb: ModeOfOperationCFB,\n            ofb: ModeOfOperationOFB,\n            ctr: ModeOfOperationCTR\n        },\n\n        utils: {\n            hex: convertHex,\n            utf8: convertUtf8\n        },\n\n        padding: {\n            pkcs7: {\n                pad: pkcs7pad,\n                strip: pkcs7strip\n            }\n        },\n\n        _arrayTest: {\n            coerceArray: coerceArray,\n            createArray: createArray,\n            copyArray: copyArray,\n        }\n    };\n\n\n    // node.js\n    if (typeof exports !== 'undefined') {\n        module.exports = aesjs\n\n    // RequireJS/AMD\n    // http://www.requirejs.org/docs/api.html\n    // https://github.com/amdjs/amdjs-api/wiki/AMD\n    } else if (typeof(define) === 'function' && define.amd) {\n        define([], function() { return aesjs; });\n\n    // Web Browsers\n    } else {\n\n        // If there was an existing library at \"aesjs\" make sure it's still available\n        if (root.aesjs) {\n            aesjs._aesjs = root.aesjs;\n        }\n\n        root.aesjs = aesjs;\n    }\n\n\n})(this);\n", null, "// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n", "/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]], '-',\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]],\n    bth[buf[i++]], bth[buf[i++]]\n  ]).join('');\n}\n\nmodule.exports = bytesToUuid;\n", "var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n", null, "import Mnemonic from \"bitcore-mnemonic\"\nimport elliptic from \"elliptic\"\nimport { pubToAddress } from \"ethereumjs-util\"\nimport Wallet from \"ethereumjs-wallet\"\n\nfunction padTo32(msg: Buffer) {\n  while (msg.length < 32) {\n    msg = Buffer.concat([Buffer.from([0]), msg])\n  }\n  if (msg.length !== 32) {\n    throw new Error(`invalid key length: ${msg.length}`)\n  }\n  return msg\n}\n\nexport const createPrivateKey = (seedPhrase?: string) => {\n  const mnemonic = new Mnemonic(seedPhrase)\n  const phrase = mnemonic.toString()\n\n  const derived = mnemonic.toHDPrivateKey().derive(\"m/44'/60'/0'/0/0\")\n\n  const key = derived.privateKey.toBuffer().toString(\"hex\")\n  const publicKey = derived.publicKey.toBuffer()\n  //@ts-ignore\n  const ecPublic = new elliptic.ec(\"secp256k1\").keyFromPublic(publicKey).getPublic().toJSON()\n  const ethPublic = Buffer.concat([\n    padTo32(Buffer.from(ecPublic[0].toArray())),\n    padTo32(Buffer.from(ecPublic[1].toArray()))\n  ])\n  const address = `0x${pubToAddress(ethPublic).toString(\"hex\")}`\n\n  // console.dir(derived)\n  console.log(`\n    Mnemonic phrase: ${phrase}\n    Address: ${address}\n    Private Key : ${key}\n    `)\n  return { phrase, address, key, derived }\n}\n\ninterface ICreateKeyStore {\n  derived: any\n  password: string\n  options?: any\n}\n\nexport const createKeyStore = async ({\n  derived,\n  password = \"password\",\n  options\n}: ICreateKeyStore) => {\n  if (!derived) throw new Error(\"No derived HD key\")\n  if (!password) throw new Error(\"No Password\")\n  const wallet = Wallet.fromPrivateKey(derived.privateKey.toBuffer())\n  const keystore = await wallet.toV3(password, options)\n  console.dir({ password, keystore }, { depth: null })\n  return keystore\n}\n\nexport default createPrivateKey\n", "import createPrivateKey, { createKeyStore } from \"./index\"\n\nconst { derived } = createPrivateKey(process.argv[2])\ncreateKeyStore({ derived, password: process.argv[3] })\n"],
  "mappings": "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AA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAC1B,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACvE,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QAAK,UAAU;AAAA,QACxD,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UAAU;AAAA,QAAM,UAAU;AAAA,QAAK,UAAU;AAAA,QACzC,UA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EvB,QAAI,WAAW;AAAA,MACb;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAAY;AAAA,MACpC;AAAA,MAAY;AAAA,MAAY;AAAA,MAA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AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MACpD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MACrD;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MACpD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA;AAGvD,QAAI,KAAK;AAAA,MACP;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MACrD;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MACpD;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MACrD;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAI;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAG;AAAA,MAAI;AAAA,MAAG;AAAA,MAAI;AAA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;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA;AAAA;AAAA,MAIN,KAAK;AAAA,QACH,KAAK;AAAA,QACL,QAAQ;AAAA,UACN;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE;AAAA,YACA;AAAA;AAAA,UAEF;AAAA,YACE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QAAM,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,QAAM,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,QAAM,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,QAAM,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,QAAM,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,QAAM,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,IAAG,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,MAAK,KAAI,KAAI,KAAI,KAAI,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,KAAI,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,KAAI,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,KAAI,QAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI;AAAA,QAC9sK,KAAI,EAAC,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,KAAI,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,MAAK,KAAI,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,KAAI,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,KAAI,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,OAAM,CAAC,EAAC;AAAA,QAC9rG,KAAI,EAAC,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,CAAC,IAAG,OAAM,KAAI,CAAC,CAAC,KAAI,OAAM,KAAI,CAAC,EAAC,EAAC,EAAC,KAAI,QAAM,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,KAAI,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,EAAC;AAAA,QAC/lx4F,MAAK,EAAC,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK;AAAA,QACxxD,MAAK,EAAC,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC;AAAA,QAC3mB,MAAK,EAAC,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,EAAC,EAAC,EAAC,MAAK,MAAK,MAAK,MAAK,MAAK,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,MAAK,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,MAAK,SAAO,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,EAAC,EAAC,EAAC,MAAK,SAAO,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,EAAC,EAAC,EAAC,MAAK,SAAO,MAAK,CAAC,CAAC,MAAK,QAAO,MAAK,CAAC,EAAC,EAAC,EAAC,MAAK,SAAO,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC;AAAA,QAC3+B,MAAK,EAAC,MAAK,CAAC,EAAC,KAAI,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,E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AAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,KAAI;AAAA,QACzrI,MAAK,EAAC,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,KAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI,SAAO,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,OAAM,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,EAAC,KAAI,MAAK,KAAI,MAAK,KAAI;AAAA,QACxzK,MAAK,EAAC,MAAK,CAAC,CAAC,QAAO,MAAK,CAAC,CAAC,QAAO,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,IAAG,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC,MAAK,MAAK,CAAC,EAAC;AAAA,QAC//C,MAAK,EAAC,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,OAAM,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,KAAI,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI;AAAA,QACrrE,MAAK,EAAC,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,IAAG,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,EAAC,EAAC,EAAC,KAAI,SAAO,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK,OAAM,MAAK,CAAC,CAAC,MAAK;AAAA,QACx8C,MAAK,EAAC,MAAK,CAAC,CAAC,SAAQ,MAAK,CAAC,CAAC;AAAA,QAC5B,MAAK,EAAC,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,IAAG,KAAI,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,KAAI,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,MAAK,MAAK,MAAK,CAAC,CAAC,KAAI;AAAA,QAClpF,OAAM,EAAC,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK;AAAA,QAC9H,OAAM,EAAC,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC;AAAA,QAC5E,OAAM,EAAC,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,EAAC,IAAG,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC;AAAA,QACjc,OAAM,EAAC,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO;AAAA,QAC1C,OAAM,EAAC,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,MAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO;AAAA,QAC1rI,OAAM,EAAC,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,IAAG,OAAM,CAAC,EAAC,IAAG,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,QAAO,MAAK,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,OAAM,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,EAAC,EAAC,EAAC,OAAM,UAAQ,OAAM,CAAC,CAAC,OAAM,SAAQ,OAAM,CAAC,CAAC,OAAM,QAAO;AAAA,QAC7xphE,OAAM,EAAC,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,MAAK,MAAK,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,KAAI,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,QAAO,MAAK,MAAM,CAAC,CAAC,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,QAAO,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAA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C,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,MAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK;AAAA,QACr5I,OAAM,EAAC,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK;AAAA,QACz5I,OAAM,EAAC,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK;AAAA,QAC7oJ,OAAM,EAAC,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,OAAM,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,MAAK,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI;AAAA,QAChsJ,OAAM,EAAC,QAAO,CAAC,EAAC,MAAK,QAAO,CAAC,EAAC,MAAK,QAAO,CAAC,EAAC,MAAK,QAAO,CAAC,EAAC,MAAK,QAAO,CAAC,EAAC,MAAK,QAAO,CAAC,EAAC,MAAK,QAAO,CAAC,EAAC;AAAA,QACptwF,OAAM,EAAC,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,OAAM,IAAG,QAAO,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI,MAAK,QAAO,CAAC,CAAC,IAAG,KAAI;AAAA,QACzlD,OAAM,EAAC,QAAO,CAAC,CAAC,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,OAAM,OAAM,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO,MAAK,QAAO,CAAC,CAAC,QAAO;AAAA,QACvyxjsH,OAAM,EAAC,OAAM,CAAC,CAAC,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,EAAC,KAAI,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM;AAAA,QACriI,OAAM,EAAC,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM;AAAA,QACniM,OAAM,EAAC,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,IAAG,MAAK,MAAK,MAAK,MAAK,IAAG,MAAK,MAAK,MAAK,MAAK,IAAG,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,IAAG,MAAK,MAAK,MAAK,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,MAAK,OAAM;AAAA,QAC7yK,OAAM,EAAC,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,EAAC,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,IAAG,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM,MAAK,OAAM,CAAC,CAAC,MAAK,OAAM;AAAA,QACxhI,OAAM,EAAC,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,KAAI,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,MAAK,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CAAC,QAAO,MAAK,OAAM,CAAC,CA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U,OAAO,UAAU,WAAW,UAAU,QAAQ,SAAS,UAAU,UAAU,SAAS,QAAQ,UAAU,WAAW,UAAU,QAAQ,UAAU,SAAS,UAAU,UAAU,WAAW,SAAS,QAAQ,SAAS,WAAW,QAAQ,UAAU,UAAU,WAAW,UAAU,WAAW,OAAO,QAAQ,QAAQ,WAAW,QAAQ,SAAS,UAAU,SAAS,SAAS,SAAS,WAAW,SAAS,SAAS,SAAS,SAAS,SAAS,WAAW,UAAU,QAAQ,QAAQ,SAAS,SAAS,QAAQ,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,SAAS,UAAU,UAAU,UAAU,QAAQ,UAAU,UAAU,OAAO,OAAO,WAAW,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,YAAY,UAAU,UAAU,SAAS,WAAW,SAAS,SAAS,UAAU,SAAS,UAAU,WAAW,SAAS,QAAQ,QAAQ,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS,OAAO,YAAY,QAAQ,UAAU,SAAS,QAAQ,WAAW,SAAS,SAAS,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,OAAO,SAAS,UAAU,SAAS,UAAU,SAAS,UAAU,UAAU,WAAW,WAAW,WAAW,OAAO,UAAU,QAAQ,SAAS,UAAU,SAAS,QAAQ,QAAQ,QAAQ,UAAU,UAAU,UAAU,OAAO,WAAW,SAAS,YAAY,UAAU,UAAU,SAAS,WAAW,QAAQ,WAAW,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,SAAS,SAAS,YAAY,UAAU,SAAS,WAAW,UAAU,SAAS,QAAQ,SAAS,SAAS,UAAU,QAAQ,UAAU,SAAS,WAAW,SAAS,SAAS,WAAW,UAAU,UAAU,WAAW,WAAW,SAAS,SAAS,SAAS,YAAY,UAAU,WAAW,QAAQ,SAAS,SAAS,QAAQ,WAAW,QAAQ,QAAQ,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,SAAS,UAAU,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,QAAQ,SAAS,WAAW,UAAU,SAAS,SAAS,WAAW,QAAQ,UAAU,QAAQ,QAAQ,WAAW,SAAS,UAAU,WAAW,QAAQ,WAAW,SAAS,UAAU,WAAW,WAAW,WAAW,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,QAAQ,QAAQ,UAAU,QAAQ,SAAS,QAAQ,QAAQ,WAAW,QAAQ,UAAU,SAAS,WAAW,UAAU,UAAU,UAAU,SAAS,UAAU,SAAS,UAAU,SAAS,QAAQ,SAAS,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,SAAS,QAAQ,WAAW,SAAS,SAAS,UAAU,QAAQ,SAAS,UAAU,SAAS,WAAW,SAAS,UAAU,WAAW,UAAU,SAAS,OAAO,WAAW,QAAQ,WAAW,OAAO,YAAY,WAAW,WAAW,WAAW,SAAS,WAAW,UAAU,QAAQ,SAAS,OAAO,UAAU,QAAQ,SAAS,UAAU,UAAU,QAAQ,YAAY,QAAQ,OAAO,QAAQ,UAAU,UAAU,UAAU,YAAY,UAAU,WAAW,YAAY,YAAY,QAAQ,WAAW,UAAU,QAAQ,UAAU,SAAS,WAAW,UAAU,UAAU,UAAU,WAAW,QAAQ,UAAU,UAAU,WAAW,SAAS,UAAU,UAAU,YAAY,UAAU,UAAU,QAAQ,WAAW,WAAW,UAAU,UAAU,WAAW,UAAU,UAAU,WAAW,QAAQ,WAAW,SAAS,QAAQ,UAAU,QAAQ,UAAU,WAAW,WAAW,WAAW,UAAU,YAAY,UAAU,QAAQ,YAAY,YAAY,WAAW,QAAQ,WAAW,YAAY,WAAW,YAAY,UAAU,UAAU,WAAW,SAAS,UAAU,YAAY,OAAO,QAAQ,WAAW,UAAU,UAAU,UAAU,SAAS,QAAQ,QAAQ,UAAU,QAAQ,SAAS,UAAU,SAAS,WAAW,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,QAAQ,SAAS,QAAQ,QAAQ,OAAO,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,SAAS,QAAQ,SAAS,WAAW,SAAS,SAAS,SAAS,QAAQ,SAAS,UAAU,QAAQ,QAAQ,QAAQ,WAAW,WAAW,QAAQ,QAAQ,WAAW,UAAU,OAAO,SAAS,UAAU,SAAS,SAAS,YAAY,WAAW,WAAW,YAAY,YAAY,SAAS,QAAQ,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,SAAS,UAAU,SAAS,OAAO,WAAW,WAAW,SAAS,UAAU,WAAW,UAAU,UAAU,WAAW,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,SAAS,UAAU,SAAS,YAAY,WAAW,SAAS,SAAS,OAAO,SAAS,SAAS,WAAW,SAAS,SAAS,UAAU,SAAS,WAAW,UAAU,WAAW,UAAU,YAAY,QAAQ,SAAS,UAAU,SAAS,WAAW,UAAU,YAAY,UAAU,WAAW,UAAU,WAAW,YAAY,WAAW,WAAW,SAAS,SAAS,QAAQ,UAAU,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,SAAS,OAAO,WAAW,UAAU,QAAQ,WAAW,QAAQ,SAAS,SAAS,QAAQ,SAAS,QAAQ,UAAU,UAAU,OAAO,SAAS,WAAW,QAAQ,WAAW,OAAO,SAAS,UAAU,WAAW,SAAS,YAAY,WAAW,YAAY,WAAW,OAAO,QAAQ,QAAQ,UAAU,SAAS,YAAY,SAAS,SAAS,OAAO,SAAS,WAAW,SAAS,UAAU,QAAQ,QAAQ,UAAU,SAAS,QAAQ,QAAQ,UAAU,UAAU,QAAQ,QAAQ,SAAS,UAAU,QAAQ,OAAO,WAAW,OAAO,QAAQ,SAAS,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,SAAS,SAAS,SAAS,UAAU,SAAS,SAAS,OAAO,QAAQ,SAAS,OAAO,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,SAAS,UAAU,UAAU,QAAQ,WAAW,SAAS,WAAW,UAAU,UAAU,SAAS,OAAO,WAAW,SAAS,YAAY,SAAS,UAAU,UAAU,QAAQ,SAAS,SAAS,SAAS,UAAU,SAAS,QAAQ,OAAO,SAAS,WAAW,QAAQ,UAAU,UAAU,QAAQ,UAAU,WAAW,QAAQ,OAAO,UAAU,WAAW,UAAU,UAAU,WAAW,OAAO,QAAQ,QAAQ,UAAU,SAAS,QAAQ,WAAW,UAAU,SAAS,UAAU,WAAW,WAAW,SAAS,SAAS,QAAQ,UAAU,UAAU,WAAW,QAAQ,QAAQ,QAAQ,UAAU,SAAS,SAAS,SAAS,WAAW,SAAS,SAAS,SAAS,SAAS,QAAQ,QAAQ,QAAQ,WAAW,QAAQ,QAAQ,SAAS,WAAW,UAAU,UAAU,UAAU,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,WAAW,SAAS,SAAS,QAAQ,SAAS,QAAQ,WAAW,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,OAAO,OAAO,SAAS,QAAQ,QAAQ,UAAU,WAAW,QAAQ,SAAS,UAAU,QAAQ,SAAS,WAAW,OAAO,QAAQ,QAAQ,UAAU,QAAQ,UAAU,SAAS,SAAS,YAAY,UAAU,SAAS,UAAU,QAAQ,OAAO,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,OAAO,QAAQ,WAAW,SAAS,UAAU,QAAQ,QAAQ,WAAW,UAAU,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,UAAU,SAAS,YAAY,QAAQ,SAAS,QAAQ,SAAS,OAAO,QAAQ,SAAS,UAAU,SAAS,WAAW,UAAU,QAAQ,UAAU,SAAS,QAAQ,WAAW,UAAU,OAAO,QAAQ,QAAQ,YAAY,QAAQ,UAAU,OAAO,WAAW,WAAW,SAAS,WAAW,WAAW,UAAU,UAAU,UAAU,WAAW,WAAW,QAAQ,WAAW,UAAU,YAAY,SAAS,YAAY,UAAU,YAAY,UAAU,WAAW,UAAU,UAAU,WAAW,WAAW,UAAU,UAAU,UAAU,SAAS,YAAY,SAAS,WAAW,UAAU,UAAU,UAAU,WAAW,WAAW,UAAU,YAAY,QAAQ,UAAU,UAAU,WAAW,QAAQ,UAAU,WAAW,SAAS,QAAQ,SAAS,UAAU,UAAU,OAAO,QAAQ,WAAW,SAAS,SAAS,SAAS,OAAO,QAAQ,QAAQ,WAAW,OAAO,SAAS,SAAS,QAAQ,UAAU,UAAU,QAAQ,QAAQ,YAAY,QAAQ,QAAQ,WAAW,OAAO,QAAQ,OAAO,UAAU,QAAQ,WAAW,QAAQ,OAAO,WAAW,QAAQ,UAAU,QAAQ,QAAQ,SAAS,SAAS,QAAQ,OAAO,SAAS,SAAS,UAAU,QAAQ,QAAQ,QAAQ,YAAY,UAAU,SAAS,SAAS,SAAS,SAAS,WAAW,QAAQ,OAAO,QAAQ,WAAW,SAAS,QAAQ,UAAU,QAAQ,SAAS,SAAS,WAAW,QAAQ,OAAO,SAAS,UAAU,WAAW,SAAS,QAAQ,UAAU,QAAQ,WAAW,UAAU,UAAU,SAAS,QAAQ,WAAW,WAAW,WAAW,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,UAAU,QAAQ,UAAU,QAAQ,UAAU,QAAQ,QAAQ,WAAW,SAAS,QAAQ,SAAS,UAAU,QAAQ,QAAQ,WAAW,QAAQ,UAAU,QAAQ,SAAS,SAAS,WAAW,UAAU,SAAS,SAAS,UAAU,UAAU,WAAW,OAAO,SAAS,UAAU,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,UAAU,OAAO,UAAU,WAAW,SAAS,WAAW,UAAU,SAAS,UAAU,SAAS,UAAU,UAAU,UAAU,YAAY,QAAQ,QAAQ,UAAU,SAAS,YAAY,QAAQ,UAAU,UAAU,WAAW,QAAQ,UAAU,QAAQ,WAAW,QAAQ,YAAY,SAAS,SAAS,UAAU,QAAQ,UAAU,UAAU,WAAW,QAAQ,SAAS,SAAS,SAAS,SAAS,QAAQ,WAAW,SAAS,UAAU,UAAU,YAAY,QAAQ,WAAW,SAAS,QAAQ,WAAW,SAAS,UAAU,WAAW,UAAU,UAAU,QAAQ,WAAW,OAAO,SAAS,WAAW,UAAU,SAAS,UAAU,OAAO,UAAU,WAAW,UAAU,WAAW,SAAS,QAAQ,SAAS,QAAQ,WAAW,YAAY,UAAU,UAAU,SAAS,YAAY,SAAS,QAAQ,SAAS,QAAQ,UAAU,QAAQ,YAAY,UAAU,UAAU,YAAY,SAAS,QAAQ,UAAU,UAAU,WAAW,QAAQ,SAAS,QAAQ,UAAU,UAAU,SAAS,UAAU,UAAU,QAAQ,QAAQ,QAAQ,YAAY,WAAW,WAAW,UAAU,SAAS,QAAQ,OAAO,WAAW,WAAW,SAAS,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,WAAW,UAAU,UAAU,SAAS,QAAQ,WAAW,QAAQ,WAAW,UAAU,SAAS,OAAO,WAAW,UAAU,SAAS,OAAO,OAAO,QAAQ,UAAU,UAAU,WAAW,WAAW,UAAU,WAAW,SAAS,SAAS,WAAW,QAAQ,OAAO,SAAS,UAAU,SAAS,OAAO,QAAQ,OAAO,SAAS,WAAW,QAAQ,QAAQ,OAAO,SAAS,UAAU,QAAQ,QAAQ,SAAS,WAAW,UAAU,UAAU,UAAU,SAAS,WAAW,SAAS,YAAY,SAAS,UAAU,YAAY,UAAU,WAAW,SAAS,WAAW,SAAS,UAAU,WAAW,QAAQ,QAAQ,QAAQ,OAAO,SAAS,UAAU,UAAU,SAAS,QAAQ,UAAU,QAAQ,QAAQ,UAAU,QAAQ,SAAS,SAAS,SAAS,WAAW,SAAS,UAAU,UAAU,QAAQ,UAAU,SAAS,QAAQ,SAAS,QAAQ,WAAW,UAAU,WAAW,SAAS,QAAQ,WAAW,SAAS,UAAU,QAAQ,WAAW,WAAW,OAAO,WAAW,UAAU,UAAU,UAAU,WAAW,UAAU,UAAU,OAAO,SAAS,SAAS,UAAU,YAAY,SAAS,UAAU,WAAW,SAAS,OAAO,UAAU,QAAQ,SAAS,QAAQ,WAAW,QAAQ,UAAU,SAAS,SAAS,SAAS,UAAU,WAAW,SAAS,QAAQ,UAAU,UAAU,SAAS,QAAQ,UAAU,QAAQ,QAAQ,SAAS,SAAS,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,WAAW,WAAW,YAAY,YAAY,QAAQ,UAAU,WAAW,WAAW,UAAU,SAAS,YAAY,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,SAAS,SAAS,WAAW,SAAS,YAAY,UAAU,WAAW,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,SAAS,YAAY,WAAW,WAAW,SAAS,WAAW,UAAU,WAAW,QAAQ,QAAQ,SAAS,WAAW,SAAS,SAAS,SAAS,YAAY,UAAU,WAAW,SAAS,QAAQ,OAAO,UAAU,WAAW,WAAW,WAAW,WAAW,YAAY,SAAS,QAAQ,QAAQ,SAAS,UAAU,WAAW,QAAQ,QAAQ,SAAS,SAAS,QAAQ,QAAQ,SAAS,SAAS,QAAQ,SAAS,UAAU,SAAS,SAAS,QAAQ,QAAQ,UAAU,SAAS,OAAO,SAAS,SAAS,QAAQ,UAAU,SAAS,WAAW,UAAU,WAAW,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,UAAU,UAAU,UAAU,WAAW,UAAU,SAAS,WAAW,UAAU,QAAQ,UAAU,YAAY,UAAU,UAAU,UAAU,SAAS,QAAQ,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,YAAY,UAAU,YAAY,YAAY,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,UAAU,UAAU,UAAU,OAAO,UAAU,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,QAAQ,QAAQ,UAAU,QAAQ,UAAU,SAAS,SAAS,QAAQ,SAAS,SAAS,UAAU,UAAU,WAAW,QAAQ,UAAU,QAAQ,QAAQ,UAAU,SAAS,SAAS,SAAS,SAAS,UAAU,QAAQ,OAAO,QAAQ,OAAO,UAAU,SAAS,OAAO,UAAU,WAAW,QAAQ,QAAQ,SAAS,UAAU,SAAS,QAAQ,UAAU,QAAQ,UAAU,QAAQ,WAAW,WAAW,SAAS,WAAW,QAAQ,OAAO,SAAS,QAAQ,SAAS,WAAW,SAAS,UAAU,UAAU,WAAW,YAAY,YAAY,SAAS,SAAS,UAAU,UAAU,SAAS,OAAO,UAAU,UAAU,QAAQ,UAAU,UAAU,WAAW,YAAY,QAAQ,QAAQ,WAAW,UAAU,QAAQ,WAAW,UAAU,SAAS,YAAY,UAAU,WAAW,WAAW,UAAU,SAAS,SAAS,UAAU,SAAS,WAAW,SAAS,QAAQ,SAAS,WAAW,UAAU,SAAS,SAAS,QAAQ,UAAU,SAAS,QAAQ,SAAS,QAAQ,SAAS,YAAY,SAAS,UAAU,SAAS,WAAW,OAAO,WAAW,QAAQ,QAAQ,SAAS,SAAS,QAAQ,UAAU,QAAQ,SAAS,UAAU,WAAW,UAAU,SAAS,QAAQ,SAAS,UAAU,WAAW,OAAO,QAAQ,SAAS,UAAU,OAAO,SAAS,QAAQ,SAAS,SAAS,QAAQ,QAAQ,SAAS,WAAW,SAAS,SAAS,UAAU,QAAQ,UAAU,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,SAAS,SAAS,QAAQ,SAAS,QAAQ,QAAQ,UAAU,UAAU,QAAQ,QAAQ,QAAQ,SAAS,WAAW,SAAS,YAAY,SAAS,WAAW,QAAQ,QAAQ,SAAS,QAAQ,QAAQ,SAAS,QAAQ,UAAU,SAAS,SAAS,SAAS,WAAW,SAAS,SAAS,WAAW,SAAS,SAAS,SAAS,UAAU,SAAS,UAAU,SAAS,QAAQ,UAAU,SAAS,SAAS,WAAW,SAAS,SAAS,QAAQ,SAAS,UAAU,UAAU,OAAO,UAAU,WAAW,YAAY,UAAU,WAAW,SAAS,SAAS,UAAU,SAAS,SAAS,SAAS,SAAS,QAAQ,SAAS,SAAS,QAAQ,QAAQ,UAAU,SAAS,SAAS,SAAS,SAAS,WAAW,SAAS,SAAS,SAAS,SAAS,YAAY,UAAU,UAAU,UAAU,YAAY,WAAW,SAAS,WAAW,SAAS,WAAW,UAAU,UAAU,WAAW,QAAQ,UAAU,UAAU,SAAS,WAAW,QAAQ,UAAU,OAAO,SAAS,UAAU,SAAS,UAAU,WAAW,QAAQ,WAAW,SAAS,YAAY,YAAY,UAAU,WAAW,WAAW,WAAW,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,QAAQ,SAAS,UAAU,SAAS,UAAU,WAAW,SAAS,UAAU,SAAS,UAAU,OAAO,QAAQ,UAAU,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,SAAS,UAAU,QAAQ,SAAS,QAAQ,QAAQ,OAAO,UAAU,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,QAAQ,SAAS,QAAQ,UAAU,SAAS,QAAQ,SAAS,QAAQ,WAAW,SAAS,UAAU,SAAS,SAAS,WAAW,UAAU,QAAQ,SAAS,QAAQ,UAAU,QAAQ,QAAQ,OAAO,SAAS,UAAU,SAAS,SAAS,WAAW,SAAS,WAAW,OAAO,YAAY,UAAU,SAAS,UAAU,YAAY,QAAQ,UAAU,WAAW,QAAQ,SAAS,OAAO,SAAS,UAAU,SAAS,WAAW,YAAY,QAAQ,SAAS,WAAW,UAAU,SAAS,QAAQ,OAAO,SAAS,SAAS,WAAW,UAAU,SAAS,YAAY,QAAQ,SAAS,UAAU,QAAQ,SAAS,QAAQ,SAAS,SAAS,SAAS,SAAS,WAAW,QAAQ,QAAQ,UAAU,WAAW,SAAS,QAAQ,SAAS,WAAW,SAAS,SAAS,OAAO,QAAQ,WAAW,UAAU,QAAQ,UAAU,UAAU,QAAQ,UAAU,UAAU,UAAU,SAAS,QAAQ,SAAS,OAAO,QAAQ,WAAW,QAAQ,YAAY,UAAU,WAAW,SAAS,WAAW,SAAS,QAAQ,UAAU,UAAU,WAAW,WAAW,UAAU,QAAQ,YAAY,WAAW,UAAU,SAAS,WAAW,UAAU,UAAU,WAAW,UAAU,QAAQ,SAAS,SAAS,SAAS,QAAQ,SAAS,OAAO,QAAQ,UAAU,WAAW,SAAS,WAAW,UAAU,UAAU,SAAS,SAAS,UAAU,SAAS,OAAO,UAAU,SAAS,WAAW,QAAQ,SAAS,WAAW,UAAU,UAAU,WAAW,SAAS,QAAQ,UAAU,WAAW,QAAQ,UAAU,WAAW,UAAU,WAAW,WAAW,WAAW,SAAS,QAAQ,WAAW,WAAW,UAAU,WAAW,SAAS,QAAQ,SAAS,UAAU,SAAS,SAAS,SAAS,SAAS,QAAQ,WAAW,UAAU,QAAQ,UAAU,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,UAAU,QAAQ,WAAW,QAAQ,WAAW,QAAQ,QAAQ,SAAS,SAAS,QAAQ,OAAO,UAAU,UAAU,QAAQ,UAAU,WAAW,OAAO,WAAW,WAAW,SAAS,WAAW,QAAQ,OAAO,SAAS,QAAQ,SAAS,SAAS,QAAQ,SAAS,QAAQ,WAAW,QAAQ,SAAS,QAAQ,QAAQ,QAAQ,OAAO,UAAU,QAAQ,QAAQ,QAAQ,UAAU,UAAU,QAAQ,UAAU,QAAQ,QAAQ,WAAW,QAAQ,SAAS,UAAU,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,QAAQ,SAAS,WAAW,SAAS,SAAS,SAAS,QAAQ,QAAQ,UAAU,OAAO,SAAS,SAAS,SAAS,QAAQ,QAAQ;AAEp0lB,YAAO,UAAU;AAAA;AAAA;;;ACJjB;AAAA;AAAA;AAEA,QAAI,SAAS,CAAC,YAAY,WAAW,YAAY,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,YAAY,WAAW,WAAW,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,kBAAa,UAAU,WAAW,YAAY,YAAY,YAAY,YAAY,YAAY,WAAW,UAAU,SAAS,WAAW,YAAY,SAAS,WAAW,kBAAa,YAAY,UAAU,SAAS,UAAU,UAAU,iBAAY,iBAAY,YAAY,WAAW,YAAY,WAAW,WAAW,UAAU,WAAW,WAAW,UAAU,UAAU,WAAW,eAAU,iBAAY,WAAW,YAAY,WAAW,WAAW,YAAY,UAAU,WAAW,SAAS,UAAU,WAAW,kBAAa,UAAU,SAAS,YAAY,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,YAAY,UAAU,iBAAY,SAAS,iBAAY,WAAW,iBAAY,WAAW,WAAW,WAAW,YAAY,UAAU,WAAW,iBAAY,WAAW,UAAU,SAAS,kBAAa,YAAY,UAAU,UAAU,WAAW,SAAS,YAAY,YAAY,WAAW,WAAW,WAAW,YAAY,YAAY,YAAY,UAAU,kBAAa,SAAS,YAAY,YAAY,UAAU,WAAW,WAAW,UAAU,UAAU,YAAY,WAAW,WAAW,WAAW,YAAY,WAAW,WAAW,kBAAa,WAAW,YAAY,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,YAAY,YAAY,YAAY,WAAW,UAAU,YAAY,YAAY,WAAW,WAAW,WAAW,kBAAa,WAAW,UAAU,YAAY,WAAW,UAAU,YAAY,YAAY,YAAY,WAAW,WAAW,SAAS,UAAU,WAAW,SAAS,UAAU,UAAU,WAAW,YAAY,WAAW,YAAY,WAAW,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,YAAY,UAAU,WAAW,WAAW,UAAU,UAAU,WAAW,YAAY,SAAS,SAAS,UAAU,UAAU,UAAU,SAAS,SAAS,UAAU,SAAS,WAAW,UAAU,YAAY,YAAY,YAAY,UAAU,WAAW,YAAY,UAAU,YAAY,WAAW,YAAY,kBAAa,YAAY,WAAW,SAAS,SAAS,UAAU,WAAW,UAAU,WAAW,YAAY,UAAU,YAAY,YAAY,YAAY,WAAW,gBAAW,UAAU,wBAAc,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,gBAAW,UAAU,WAAW,WAAW,UAAU,SAAS,SAAS,YAAY,WAAW,WAAW,YAAY,WAAW,WAAW,WAAW,SAAS,YAAY,UAAU,WAAW,WAAW,UAAU,YAAY,YAAY,WAAW,SAAS,WAAW,WAAW,UAAU,UAAU,SAAS,UAAU,UAAU,UAAU,UAAU,WAAW,YAAY,SAAS,WAAW,SAAS,SAAS,UAAU,UAAU,UAAU,UAAU,WAAW,UAAU,YAAY,YAAY,UAAU,WAAW,WAAW,SAAS,UAAU,gBAAW,YAAY,YAAY,WAAW,YAAY,WAAW,UAAU,YAAY,UAAU,WAAW,WAAW,WAAW,SAAS,WAAW,UAAU,WAAW,UAAU,WAAW,YAAY,UAAU,SAAS,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,UAAU,YAAY,UAAU,SAAS,iBAAY,WAAW,WAAW,YAAY,WAAW,WAAW,UAAU,YAAY,YAAY,YAAY,gBAAW,UAAU,YAAY,SAAS,WAAW,SAAS,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,YAAY,WAAW,YAAY,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,UAAU,WAAW,UAAU,WAAW,YAAY,WAAW,UAAU,iBAAY,YAAY,iBAAY,WAAW,YAAY,YAAY,WAAW,UAAU,wBAAc,UAAU,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,YAAY,WAAW,YAAY,UAAU,YAAY,YAAY,WAAW,YAAY,kBAAa,YAAY,UAAU,SAAS,WAAW,WAAW,iBAAY,SAAS,YAAY,YAAY,WAAW,SAAS,YAAY,UAAU,SAAS,UAAU,WAAW,YAAY,gBAAW,WAAW,YAAY,SAAS,UAAU,WAAW,WAAW,UAAU,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,YAAY,UAAU,SAAS,WAAW,YAAY,SAAS,YAAY,UAAU,UAAU,kBAAa,WAAW,WAAW,gBAAW,WAAW,WAAW,YAAY,WAAW,UAAU,iBAAY,YAAY,WAAW,WAAW,YAAY,WAAW,YAAY,YAAY,YAAY,WAAW,WAAW,UAAU,SAAS,UAAU,WAAW,WAAW,YAAY,UAAU,WAAW,iBAAY,YAAY,WAAW,SAAS,SAAS,WAAW,WAAW,WAAW,WAAW,UAAU,SAAS,WAAW,WAAW,UAAU,kBAAa,kBAAa,iBAAY,WAAW,YAAY,WAAW,SAAS,WAAW,iBAAY,UAAU,WAAW,WAAW,WAAW,SA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,UAAU,YAAY,YAAY,UAAU,WAAW,YAAY,UAAU,SAAS,WAAW,WAAW,UAAU,UAAU,YAAY,WAAW,WAAW,WAAW,WAAW,UAAU,UAAU,UAAU,WAAW,iBAAY,iBAAY,YAAY,SAAS,YAAY,WAAW,YAAY,YAAY,YAAY,YAAY,WAAW,SAAS,UAAU,UAAU,YAAY,WAAW,YAAY,UAAU,UAAU,gBAAW,kBAAa,SAAS,kBAAa,WAAW,eAAU,iBAAY,WAAW,YAAY,SAAS,YAAY,YAAY,SAAS,UAAU,WAAW,kBAAa,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,WAAW,YAAY,WAAW,UAAU,UAAU,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,YAAY,iBAAY,SAAS,WAAW,UAAU,WAAW,UAAU,YAAY,YAAY,SAAS,WAAW,UAAU,WAAW,YAAY,YAAY,UAAU,kBAAa,YAAY,WAAW,YAAY,WAAW,YAAY,YAAY,YAAY,YAAY,YAAY,WAAW,UAAU,YAAY,gBAAW,WAAW,WAAW,UAAU,YAAY,YAAY,YAAY,iBAAY,WAAW,WAAW,YAAY,UAAU,YAAY,YAAY,WAAW,YAAY,WAAW,WAAW,YAAY,YAAY,YAAY,YAAY,UAAU,WAAW,UAAU,YAAY,YAAY,WAAW,YAAY,YAAY,WAAW,YAAY,YAAY,YAAY,gBAAW,WAAW,UAAU,UAAU,WAAW,UAAU,WAAW,SAAS,WAAW,UAAU,UAAU,SAAS,WAAW,WAAW,SAAS,SAAS,YAAY,WAAW,WAAW,WAAW,UAAU,YAAY,WAAW,UAAU,SAAS,UAAU,WAAW,YAAY,UAAU,SAAS,WAAW,WAAW,UAAU,kBAAa,SAAS,UAAU,WAAW,SAAS,UAAU,YAAY,iBAAY,WAAW,UAAU,SAAS,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,YAAY,SAAS,WAAW,SAAS,WAAW,UAAU,UAAU,WAAW,eAAU,eAAU,gBAAW,WAAW,UAAU,UAAU,WAAW,gBAAW,UAAU,iBAAY,SAAS,WAAW,WAAW,eAAU,gBAAW,YAAY,WAAW,SAAS,SAAS,UAAU,YAAY,WAAW,kBAAa,UAAU,YAAY,WAAW,iBAAY,UAAU,WAAW,UAAU,YAAY,WAAW,WAAW,YAAY,UAAU,WAAW,WAAW,SAAS,SAAS,UAAU,SAAS,SAAS,SAAS,UAAU,YAAY,SAAS,WAAW,WAAW,iBAAY,WAAW,SAAS,SAAS,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,WAAW,YAAY,UAAU,UAAU,WAAW,WAAW,kBAAa,WAAW,UAAU,YAAY,YAAY,YAAY,YAAY,YAAY,WAAW,UAAU,YAAY,UAAU,YAAY,SAAS,YAAY,YAAY,UAAU,YAAY,YAAY,UAAU,kBAAa,iBAAY,YAAY,WAAW,YAAY,SAAS,WAAW,iBAAY,iBAAY,kBAAa,iBAAY,iBAAY,gBAAW,YAAY,iBAAY,iBAAY,UAAU,iBAAY,WAAW,SAAS,UAAU,YAAY,UAAU,YAAY,gBAAW,SAAS,YAAY,UAAU,eAAU,uBAAa,iBAAY,gBAAW,UAAU,WAAW,WAAW,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,SAAS,iBAAY,WAAW,WAAW,UAAU,WAAW,YAAY,WAAW,SAAS,UAAU,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,YAAY,WAAW,WAAW,WAAW,WAAW,UAAU,SAAS,UAAU,UAAU,UAAU,WAAW,UAAU,WAAW,YAAY,YAAY,YAAY,gBAAW,WAAW,UAAU,gBAAW,YAAY,YAAY,SAAS,UAAU,WAAW,YAAY,iBAAY,YAAY,UAAU,SAAS,YAAY,UAAU,YAAY,UAAU,UAAU,YAAY,YAAY,UAAU,kBAAa,UAAU,iBAAY,kBAAa,kBAAa,kBAAa,SAAS,WAAW,YAAY,WAAW,WAAW,SAAS,SAAS,UAAU,WAAW,UAAU,SAAS,SAAS,YAAY,YAAY,YAAY,UAAU,YAAY,UAAU,YAAY,WAAW,YAAY,WAAW,WAAW,WAAW,YAAY,YAAY,UAAU,SAAS,WAAW,SAAS,YAAY,gBAAW,WAAW,SAAS,YAAY,eAAU,YAAY,WAAW,UAAU,YAAY,YAAY,WAAW,WAAW,YAAY,WAAW,eAAU,WAAW,YAAY,YAAY,YAAY,SAAS,WAAW,YAAY,YAAY,UAAU,SAAS,UAAU,YAAY,YAAY,WAAW,WAAW,WAAW,YAAY,WAAW,iBAAY,YAAY,SAAS,UAAU,gBAAW,WAAW,YAAY,YAAY,SAAS,WAAW,WAAW,UAAU,UAAU,YAAY,WAAW,UAAU,WAAW,WAAW,YAAY,SAAS,SAAS,YAAY,UAAU,YAAY,UAAU,WAAW,UAAU,SAAS,YAAY,WAAW,WAAW,SAAS,iBAAY,SAAS,YAAY,UAAU,kBAAa,YAAY,UAAU,WAAW,SAAS,YAAY,YAAY,WAAW,YAAY,YAAY,UAAU,UAAU,WAAW,WAAW,YAAY,YAAY,WAAW,YAAY,UAAU,UAAU,WAAW,YAAY,YAAY,UAAU,YAAY,WAAW,kBAAa,YAAY,YAAY,UAAU,YAAY,YAAY,SAAS,WAAW,UAAU,WAAW,UAAU,iBAAY,SAAS,WAAW,WAAW,WAAW,wBAAc,iBAAY,UAAU,iBAAY,gBAAW,gBAAW,WAAW,YAAY,iBAAY,YAAY,YAAY,UAAU,SAAS,SAAS,gBAAW,SAAS,gBAAW,UAAU,WAAW,UAAU,UAAU,UAAU,UAAU,YAAY,SAAS,YAAY,eAAU,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,SAAS,SAAS,WAAW,WAAW,WAAW,UAAU,UAAU,YAAY,WAAW,WAAW,UAAU,UAAU,SAAS,WAAW,SAAS,WAAW,YAAY,gBAAW,eAAU,UAAU,WAAW,WAAW,UAAU,WAAW,YAAY,UAAU,YAAY,WAAW,WAAW,YAAY,kBAAa,SAAS,YAAY,YAAY,kBAAa,WAAW,WAAW,UAAU,UAAU,SAAS,WAAW,UAAU,WAAW,WAAW,WAAW,WAAW,YAAY,kBAAa,iBAAY,iBAAY,iBAAY,gBAAW,kBAAa,kBAAa,iBAAY,YAAY,UAAU,UAAU,UAAU,kBAAa,kBAAa,WAAW,WAAW,iBAAY,SAAS,YAAY,YAAY,YAAY,UAAU,kBAAa,kBAAa,YAAY,YAAY,YAAY,WAAW,YAAY,UAAU,WAAW,UAAU,SAAS,UAAU,WAAW,WAAW,WAAW,YAAY,UAAU,YAAY,UAAU,YAAY,YAAY,kBAAa,WAAW,YAAY,UAAU,YAAY,WAAW,YAAY,WAAW,UAAU,YAAY,YAAY,YAAY,UAAU,UAAU,YAAY,WAAW,SAAS,YAAY,iBAAY,gBAAW,kBAAa,kBAAa,YAAY,iBAAY,kBAAa,kBAAa,YAAY,WAAW,YAAY,iBAAY,YAAY,WAAW,iBAAY,kBAAa,WAAW,UAAU,kBAAa,gBAAW,iBAAY,kBAAa,wBAAc,WAAW,WAAW,WAAW,WAAW,UAAU,YAAY,gBAAW,UAAU,YAAY,WAAW,UAAU,UAAU,WAAW,YAAY,YAAY,WAAW,UAAU,WAAW,YAAY,WAAW,WAAW,UAAU,iBAAY,kBAAa,kBAAa,WAAW,UAAU,kBAAa,kBAAa,WAAW,kBAAa,YAAY,YAAY,iBAAY,iBAAY,YAAY,WAAW,iBAAY,kBAAa,YAAY,UAAU,SAAS,UAAU,WAAW,UAAU,YAAY,WAAW,UAAU,UAAU,SAAS,iBAAY,WAAW,WAAW,UAAU,SAAS,UAAU,UAAU,UAAU,WAAW,SAAS,UAAU,SAAS,WAAW,WAAW,WAAW,WAAW,SAAS,SAAS,SAAS,UAAU,WAAW,UAAU,YAAY,SAAS,YAAY,UAAU,UAAU,WAAW,SAAS,WAAW,UAAU,WAAW,UAAU,UAAU,UAAU,SAAS,UAAU,UAAU,YAAY,YAAY,YAAY,WAAW,WAAW,YAAY,UAAU,UAAU,WAAW,UAAU,YAAY,WAAW,YAAY,wBAAc,kBAAa,WAAW,gBAAW,WAAW,WAAW,SAAS,WAAW,YAAY,gBAAW,iBAAY,gBAAW,WAAW,wBAAc,iBAAY,iBAAY,YAAY,gBAAW,kBAAa,WAAW,WAAW,WAAW,iBAAY,kBAAa,YAAY,YAAY,iBAAY,kBAAa,UAAU,WAAW,iBAAY,WAAW,eAAU,WAAW,gBAAW,eAAU,WAAW,YAAY,iBAAY,gBAAW,gBAAW,WAAW,SAAS,UAAU,WAAW,YAAY,UAAU,iBAAY,YAAY,UAAU,SAAS,YAAY,UAAU,SAAS,UAAU,SAAS,UAAU,YAAY,UAAU,UAAU,YAAY,WAAW,UAAU,WAAW,YAAY,SAAS,WAAW,YAAY,UAAU,WAAW,UAAU,SAAS,WAAW,YAAY,WAAW,WAAW,YAAY,WAAW,UAAU,YAAY,YAAY,YAAY,WAAW,iBAAY,gBAAW,UAAU,UAAU,WAAW,WAAW,YAAY,YAAY,UAAU,YAAY,WAAW,YAAY,WAAW,YAAY,UAAU,YAAY,gBAAW,SAAS,WAAW,kBAAa,WAAW,WAAW,WAAW,YAAY,WAAW,YAAY,YAAY,YAAY,WAAW,UAAU,WAAW,WAAW,WAAW,kBAAa,WAAW,WAAW,iBAAY,SAAS,WAAW,WAAW,WAAW,UAAU,YAAY,YAAY,WAAW,WAAW,YAAY,SAAS,YAAY,UAAU,SAAS,WAAW,SAAS,UAAU,YAAY,SAAS,WAAW,SAAS,gBAAW,YAAY,YAAY,UAAU,UAAU,SAAS,WAAW,YAAY,SAAS,YAAY,gBAAW,SAAS,eAAU,iBAAY,kBAAa,UAAU,SAAS,eAAU,UAAU,YAAY,UAAU,SAAS,UAAU,SAAS,WAAW,YAAY,kBAAa,UAAU,WAAW,WAAW,YAAY,UAAU,UAAU,WAAW,YAAY,WAAW,SAAS,UAAU,SAAS,WAAW,YAAY,WAAW,UAAU,YAAY,UAAU,YAAY,UAAU,SAAS,YAAY,WAAW,gBAAW,WAAW,gBAAW,UAAU,UAAU,YAAY,YAAY,YAAY,YAAY,WAAW,YAAY,WAAW,YAAY,SAAS,YAAY,YAAY,SAAS,UAAU,WAAW,UAAU,WAAW,UAAU,WAAW,SAAS,UAAU,UAAU,WAAW,SAAS,YAAY,UAAU,YAAY,WAAW,WAAW,SAAS,UAAU,YAAY,WAAW,WAAW,UAAU,YAAY,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,WAAW,UAAU,YAAY,SAAS,YAAY,WAAW,YAAY,WAAW,UAAU,UAAU,SAAS,WAAW,WAAW,UAAU,UAAU,UAAU,UAAU,SAAS,WAAW,WAAW,uBAAa,kBAAa,WAAW,gBAAW,YAAY,uBAAa,UAAU,YAAY,YAAY,WAAW,eAAU,UAAU,UAAU,UAAU,SAAS,UAAU,uBAAa,iBAAY,UAAU,SAAS,UAAU,UAAU,YAAY,WAAW,eAAU,YAAY,WAAW,UAAU,WAAW,YAAY,UAAU,gBAAW,YAAY,YAAY,SAAS,UAAU,UAAU,UAAU,YAAY,UAAU,SAAS,WAAW,YAAY,WAAW,UAAU,YAAY,YAAY,UAAU,SAAS,UAAU,WAAW,YAAY,UAAU,YAAY,UAAU,UAAU,UAAU,SAAS,WAAW,UAAU,WAAW,SAAS,eAAU,SAAS,eAAU,gBAAW,SAAS;AAEvgsB,YAAO,UAAU;AAAA;AAAA;;;ACJjB;AAAA;AAAA;AAEA,QAAI,UAAU,CAAC,SAAS,YAAY,YAAY,SAAS,UAAU,WAAW,YAAY,YAAY,YAAY,WAAW,YAAY,WAAW,WAAW,SAAS,SAAS,QAAQ,YAAY,YAAY,SAAS,UAAU,YAAY,UAAU,YAAY,WAAW,SAAS,YAAY,WAAW,YAAY,WAAW,WAAW,YAAY,YAAY,SAAS,YAAY,SAAS,UAAU,WAAW,YAAY,SAAS,WAAW,YAAY,YAAY,YAAY,UAAU,YAAY,SAAS,WAAW,YAAY,QAAQ,UAAU,QAAQ,YAAY,YAAY,QAAQ,WAAW,WAAW,SAAS,YAAY,YAAY,WAAW,WAAW,YAAY,YAAY,UAAU,WAAW,UAAU,YAAY,YAAY,WAAW,YAAY,WAAW,UAAU,WAAW,UAAU,YAAY,WAAW,WAAW,UAAU,WAAW,SAAS,WAAW,YAAY,SAAS,WAAW,WAAW,YAAY,YAAY,SAAS,SAAS,YAAY,WAAW,YAAY,YAAY,YAAY,YAAY,UAAU,QAAQ,WAAW,UAAU,UAAU,UAAU,UAAU,UAAU,YAAY,WAAW,SAAS,YAAY,YAAY,QAAQ,YAAY,WAAW,YAAY,QAAQ,WAAW,YAAY,SAAS,YAAY,YAAY,YAAY,WAAW,WAAW,UAAU,WAAW,YAAY,YAAY,YAAY,WAAW,WAAW,UAAU,WAAW,YAAY,UAAU,WAAW,WAAW,UAAU,UAAU,QAAQ,WAAW,UAAU,YAAY,WAAW,WAAW,YAAY,QAAQ,YAAY,WAAW,YAAY,WAAW,UAAU,YAAY,WAAW,SAAS,SAAS,YAAY,SAAS,YAAY,QAAQ,YAAY,WAAW,QAAQ,YAAY,UAAU,YAAY,WAAW,WAAW,WAAW,SAAS,UAAU,YAAY,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,YAAY,WAAW,YAAY,SAAS,YAAY,UAAU,aAAa,UAAU,SAAS,UAAU,WAAW,UAAU,WAAW,UAAU,QAAQ,WAAW,YAAY,WAAW,SAAS,WAAW,SAAS,UAAU,WAAW,WAAW,WAAW,WAAW,YAAY,WAAW,SAAS,YAAY,WAAW,WAAW,YAAY,SAAS,WAAW,WAAW,SAAS,QAAQ,UAAU,SAAS,SAAS,UAAU,SAAS,SAAS,YAAY,WAAW,WAAW,QAAQ,WAAW,QAAQ,UAAU,QAAQ,UAAU,UAAU,QAAQ,YAAY,SAAS,YAAY,WAAW,UAAU,YAAY,YAAY,SAAS,YAAY,WAAW,YAAY,WAAW,WAAW,YAAY,UAAU,UAAU,WAAW,YAAY,SAAS,SAAS,YAAY,WAAW,WAAW,WAAW,WAAW,SAAS,UAAU,WAAW,YAAY,YAAY,UAAU,WAAW,aAAa,YAAY,YAAY,SAAS,YAAY,UAAU,SAAS,WAAW,QAAQ,UAAU,WAAW,QAAQ,SAAS,SAAS,WAAW,YAAY,WAAW,SAAS,WAAW,UAAU,YAAY,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,YAAY,WAAW,WAAW,UAAU,WAAW,UAAU,WAAW,QAAQ,UAAU,WAAW,WAAW,UAAU,WAAW,YAAY,YAAY,WAAW,SAAS,WAAW,YAAY,YAAY,SAAS,WAAW,YAAY,YAAY,aAAa,YAAY,WAAW,WAAW,QAAQ,WAAW,YAAY,WAAW,WAAW,UAAU,WAAW,SAAS,WAAW,YAAY,WAAW,UAAU,WAAW,aAAa,QAAQ,UAAU,aAAa,YAAY,WAAW,SAAS,UAAU,YAAY,UAAU,SAAS,QAAQ,SAAS,UAAU,UAAU,YAAY,WAAW,SAAS,YAAY,YAAY,QAAQ,YAAY,WAAW,SAAS,YAAY,YAAY,SAAS,WAAW,WAAW,aAAa,UAAU,WAAW,UAAU,YAAY,WAAW,SAAS,SAAS,WAAW,UAAU,YAAY,WAAW,WAAW,WAAW,UAAU,WAAW,aAAa,SAAS,QAAQ,UAAU,YAAY,UAAU,YAAY,UAAU,WAAW,YAAY,YAAY,aAAa,WAAW,YAAY,aAAa,WAAW,YAAY,YAAY,WAAW,WAAW,UAAU,aAAa,WAAW,WAAW,YAAY,WAAW,WAAW,SAAS,WAAW,UAAU,WAAW,WAAW,YAAY,WAAW,UAAU,WAAW,YAAY,UAAU,WAAW,WAAW,YAAY,SAAS,WAAW,WAAW,SAAS,WAAW,SAAS,WAAW,YAAY,YAAY,UAAU,UAAU,UAAU,UAAU,WAAW,UAAU,YAAY,WAAW,SAAS,WAAW,WAAW,QAAQ,SAAS,WAAW,YAAY,WAAW,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,YAAY,UAAU,WAAW,WAAW,WAAW,YAAY,YAAY,WAAW,SAAS,YAAY,WAAW,WAAW,SAAS,WAAW,YAAY,UAAU,YAAY,YAAY,YAAY,UAAU,aAAa,WAAW,aAAa,YAAY,aAAa,UAAU,YAAY,YAAY,UAAU,UAAU,WAAW,YAAY,YAAY,WAAW,YAAY,YAAY,WAAW,WAAW,UAAU,YAAY,QAAQ,WAAW,UAAU,WAAW,YAAY,WAAW,WAAW,YAAY,YAAY,YAAY,QAAQ,UAAU,WAAW,YAAY,YAAY,WAAW,WAAW,YAAY,SAAS,SAAS,UAAU,YAAY,YAAY,WAAW,QAAQ,WAAW,QAAQ,WAAW,UAAU,WAAW,SAAS,UAAU,UAAU,YAAY,UAAU,QAAQ,SAAS,WAAW,YAAY,SAAS,WAAW,QAAQ,WAAW,YAAY,SAAS,WAAW,SAAS,YAAY,WAAW,YAAY,QAAQ,WAAW,WAAW,aAAa,YAAY,YAAY,YAAY,UAAU,WAAW,UAAU,SAAS,QAAQ,QAAQ,SAAS,WAAW,WAAW,UAAU,SAAS,WAAW,YAAY,YAAY,SAAS,YAAY,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,WAAW,YAAY,WAAW,UAAU,YAAY,UAAU,QAAQ,UAAU,SAAS,WAAW,WAAW,YAAY,QAAQ,WAAW,WAAW,WAAW,SAAS,WAAW,YAAY,QAAQ,WAAW,YAAY,WAAW,YAAY,YAAY,SAAS,WAAW,YAAY,SAAS,WAAW,YAAY,WAAW,QAAQ,UAAU,YAAY,WAAW,WAAW,YAAY,WAAW,UAAU,WAAW,QAAQ,YAAY,UAAU,SAAS,YAAY,WAAW,WAAW,UAAU,YAAY,YAAY,WAAW,SAAS,YAAY,UAAU,WAAW,SAAS,YAAY,QAAQ,YAAY,YAAY,WAAW,UAAU,WAAW,WAAW,YAAY,QAAQ,YAAY,UAAU,UAAU,QAAQ,UAAU,SAAS,UAAU,WAAW,WAAW,YAAY,YAAY,SAAS,WAAW,WAAW,WAAW,SAAS,SAAS,SAAS,WAAW,QAAQ,YAAY,QAAQ,WAAW,YAAY,UAAU,SAAS,WAAW,UAAU,SAAS,WAAW,YAAY,SAAS,UAAU,WAAW,WAAW,UAAU,UAAU,YAAY,UAAU,YAAY,UAAU,UAAU,YAAY,WAAW,YAAY,YAAY,SAAS,WAAW,WAAW,aAAa,WAAW,WAAW,WAAW,QAAQ,YAAY,WAAW,WAAW,SAAS,YAAY,SAAS,YAAY,YAAY,aAAa,WAAW,UAAU,SAAS,YAAY,UAAU,WAAW,UAAU,YAAY,UAAU,YAAY,WAAW,SAAS,WAAW,WAAW,UAAU,QAAQ,YAAY,SAAS,SAAS,WAAW,UAAU,QAAQ,UAAU,YAAY,SAAS,WAAW,WAAW,WAAW,WAAW,SAAS,YAAY,SAAS,YAAY,WAAW,YAAY,WAAW,YAAY,SAAS,UAAU,UAAU,YAAY,QAAQ,YAAY,SAAS,WAAW,WAAW,QAAQ,YAAY,WAAW,YAAY,SAAS,YAAY,YAAY,SAAS,UAAU,SAAS,WAAW,WAAW,YAAY,UAAU,SAAS,UAAU,UAAU,WAAW,YAAY,WAAW,UAAU,WAAW,WAAW,SAAS,SAAS,QAAQ,UAAU,WAAW,UAAU,SAAS,WAAW,WAAW,SAAS,WAAW,UAAU,UAAU,YAAY,WAAW,UAAU,SAAS,UAAU,WAAW,UAAU,UAAU,UAAU,UAAU,YAAY,SAAS,UAAU,YAAY,QAAQ,WAAW,YAAY,SAAS,YAAY,WAAW,SAAS,QAAQ,UAAU,YAAY,UAAU,UAAU,YAAY,SAAS,UAAU,YAAY,YAAY,WAAW,YAAY,WAAW,UAAU,UAAU,WAAW,YAAY,WAAW,UAAU,WAAW,WAAW,YAAY,WAAW,YAAY,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,YAAY,UAAU,YAAY,SAAS,UAAU,WAAW,WAAW,YAAY,YAAY,YAAY,WAAW,WAAW,WAAW,YAAY,WAAW,WAAW,aAAa,YAAY,UAAU,WAAW,WAAW,YAAY,YAAY,YAAY,UAAU,YAAY,WAAW,aAAa,YAAY,UAAU,UAAU,YAAY,YAAY,WAAW,UAAU,SAAS,WAAW,WAAW,YAAY,YAAY,WAAW,WAAW,YAAY,YAAY,WAAW,UAAU,WAAW,UAAU,aAAa,SAAS,YAAY,WAAW,UAAU,WAAW,QAAQ,SAAS,YAAY,YAAY,WAAW,SAAS,WAAW,UAAU,WAAW,UAAU,WAAW,WAAW,UAAU,UAAU,WAAW,SAAS,YAAY,SAAS,SAAS,SAAS,UAAU,WAAW,SAAS,aAAa,QAAQ,YAAY,UAAU,QAAQ,WAAW,SAAS,YAAY,YAAY,WAAW,WAAW,UAAU,WAAW,QAAQ,UAAU,SAAS,QAAQ,WAAW,UAAU,WAAW,QAAQ,UAAU,WAAW,UAAU,WAAW,WAAW,WAAW,QAAQ,YAAY,QAAQ,YAAY,UAAU,YAAY,SAAS,QAAQ,WAAW,WAAW,SAAS,SAAS,WAAW,YAAY,UAAU,YAAY,UAAU,UAAU,UAAU,WAAW,SAAS,YAAY,YAAY,YAAY,aAAa,WAAW,SAAS,YAAY,QAAQ,UAAU,YAAY,YAAY,aAAa,WAAW,WAAW,YAAY,WAAW,YAAY,SAAS,YAAY,WAAW,WAAW,SAAS,YAAY,YAAY,WAAW,WAAW,aAAa,aAAa,WAAW,UAAU,WAAW,WAAW,aAAa,YAAY,YAAY,YAAY,QAAQ,WAAW,SAAS,WAAW,WAAW,QAAQ,WAAW,YAAY,WAAW,SAAS,YAAY,QAAQ,WAAW,WAAW,WAAW,UAAU,WAAW,aAAa,QAAQ,WAAW,WAAW,WAAW,WAAW,SAAS,YAAY,UAAU,UAAU,UAAU,YAAY,QAAQ,UAAU,UAAU,YAAY,WAAW,WAAW,SAAS,YAAY,WAAW,YAAY,SAAS,YAAY,aAAa,WAAW,YAAY,UAAU,UAAU,SAAS,QAAQ,WAAW,aAAa,SAAS,WAAW,aAAa,UAAU,YAAY,WAAW,WAAW,WAAW,QAAQ,WAAW,aAAa,UAAU,YAAY,YAAY,SAAS,WAAW,aAAa,SAAS,SAAS,UAAU,SAAS,YAAY,WAAW,WAAW,aAAa,YAAY,UAAU,SAAS,WAAW,UAAU,QAAQ,WAAW,UAAU,YAAY,QAAQ,WAAW,SAAS,aAAa,WAAW,UAAU,WAAW,WAAW,YAAY,YAAY,WAAW,YAAY,YAAY,WAAW,YAAY,WAAW,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,YAAY,QAAQ,aAAa,WAAW,SAAS,UAAU,UAAU,UAAU,QAAQ,QAAQ,UAAU,WAAW,WAAW,aAAa,YAAY,UAAU,WAAW,YAAY,WAAW,UAAU,SAAS,UAAU,SAAS,WAAW,UAAU,WAAW,QAAQ,YAAY,WAAW,YAAY,SAAS,SAAS,YAAY,aAAa,UAAU,aAAa,aAAa,aAAa,QAAQ,WAAW,WAAW,WAAW,WAAW,WAAW,aAAa,WAAW,QAAQ,UAAU,YAAY,WAAW,UAAU,SAAS,aAAa,SAAS,WAAW,YAAY,SAAS,SAAS,aAAa,UAAU,SAAS,SAAS,YAAY,aAAa,QAAQ,WAAW,YAAY,WAAW,WAAW,SAAS,UAAU,aAAa,WAAW,UAAU,YAAY,WAAW,aAAa,QAAQ,YAAY,YAAY,YAAY,WAAW,YAAY,YAAY,UAAU,UAAU,QAAQ,SAAS,YAAY,UAAU,YAAY,UAAU,QAAQ,YAAY,YAAY,QAAQ,SAAS,QAAQ,YAAY,UAAU,WAAW,SAAS,SAAS,SAAS,WAAW,WAAW,WAAW,WAAW,QAAQ,aAAa,QAAQ,YAAY,WAAW,WAAW,SAAS,QAAQ,UAAU,aAAa,YAAY,WAAW,QAAQ,UAAU,WAAW,YAAY,SAAS,YAAY,WAAW,YAAY,YAAY,UAAU,WAAW,QAAQ,WAAW,UAAU,WAAW,YAAY,YAAY,WAAW,YAAY,WAAW,aAAa,WAAW,UAAU,WAAW,YAAY,YAAY,UAAU,UAAU,UAAU,WAAW,YAAY,WAAW,YAAY,WAAW,WAAW,QAAQ,UAAU,WAAW,YAAY,aAAa,aAAa,aAAa,WAAW,YAAY,SAAS,aAAa,YAAY,YAAY,WAAW,YAAY,WAAW,QAAQ,aAAa,UAAU,WAAW,aAAa,SAAS,WAAW,UAAU,YAAY,WAAW,WAAW,SAAS,UAAU,WAAW,WAAW,WAAW,SAAS,QAAQ,YAAY,WAAW,UAAU,YAAY,UAAU,SAAS,UAAU,WAAW,UAAU,YAAY,YAAY,UAAU,YAAY,UAAU,WAAW,WAAW,WAAW,UAAU,WAAW,YAAY,YAAY,YAAY,WAAW,UAAU,YAAY,WAAW,YAAY,WAAW,aAAa,YAAY,SAAS,YAAY,WAAW,UAAU,YAAY,SAAS,YAAY,WAAW,UAAU,WAAW,SAAS,WAAW,QAAQ,YAAY,YAAY,aAAa,YAAY,UAAU,UAAU,UAAU,WAAW,YAAY,WAAW,YAAY,YAAY,YAAY,WAAW,aAAa,aAAa,YAAY,YAAY,YAAY,SAAS,YAAY,WAAW,YAAY,WAAW,YAAY,WAAW,YAAY,YAAY,YAAY,WAAW,YAAY,WAAW,WAAW,SAAS,YAAY,UAAU,WAAW,UAAU,YAAY,UAAU,YAAY,SAAS,SAAS,UAAU,YAAY,WAAW,WAAW,WAAW,QAAQ,UAAU,YAAY,SAAS,WAAW,SAAS,YAAY,aAAa,YAAY,YAAY,WAAW,WAAW,WAAW,SAAS,WAAW,WAAW,QAAQ,YAAY,aAAa,UAAU,UAAU,YAAY,YAAY,aAAa,WAAW,YAAY,aAAa,QAAQ,aAAa,SAAS,YAAY,WAAW,WAAW,aAAa,YAAY,WAAW,YAAY,YAAY,YAAY,UAAU,YAAY,aAAa,UAAU,UAAU,SAAS,WAAW,aAAa,YAAY,QAAQ,aAAa,YAAY,YAAY,QAAQ,UAAU,YAAY,aAAa,YAAY,aAAa,YAAY,WAAW,YAAY,YAAY,SAAS,YAAY,aAAa,WAAW,aAAa,YAAY,WAAW,YAAY,YAAY,WAAW,WAAW,UAAU,aAAa,YAAY,aAAa,YAAY,YAAY,YAAY,WAAW,aAAa,aAAa,WAAW,YAAY,WAAW,YAAY,aAAa,YAAY,YAAY,aAAa,YAAY,YAAY,WAAW,aAAa,WAAW,YAAY,UAAU,WAAW,WAAW,YAAY,QAAQ,YAAY,WAAW,aAAa,YAAY,WAAW,WAAW,WAAW,WAAW,YAAY,QAAQ,WAAW,aAAa,WAAW,UAAU,QAAQ,YAAY,WAAW,UAAU,QAAQ,YAAY,UAAU,YAAY,UAAU,UAAU,aAAa,WAAW,UAAU,YAAY,SAAS,WAAW,WAAW,UAAU,YAAY,WAAW,WAAW,QAAQ,WAAW,UAAU,YAAY,SAAS,QAAQ,WAAW,WAAW,UAAU,YAAY,YAAY,UAAU,WAAW,aAAa,YAAY,YAAY,WAAW,UAAU,WAAW,UAAU,SAAS,UAAU,UAAU,YAAY,YAAY,YAAY,SAAS,WAAW,aAAa,UAAU,WAAW,WAAW,UAAU,SAAS,WAAW,aAAa,UAAU,YAAY,UAAU,YAAY,WAAW,YAAY,aAAa,aAAa,aAAa,YAAY,aAAa,YAAY,YAAY,YAAY,SAAS,aAAa,YAAY,WAAW,UAAU,aAAa,WAAW,UAAU,WAAW,WAAW,UAAU,WAAW,WAAW,WAAW,YAAY,UAAU,YAAY,WAAW,YAAY,YAAY,YAAY,aAAa,aAAa,YAAY,UAAU,YAAY,YAAY,UAAU,aAAa,aAAa,YAAY,YAAY,UAAU,SAAS,WAAW,aAAa,aAAa,aAAa,WAAW,UAAU,YAAY,aAAa,aAAa,WAAW,YAAY,aAAa,SAAS,aAAa,YAAY,YAAY,QAAQ,YAAY,UAAU,SAAS,WAAW,WAAW,YAAY,UAAU,WAAW,UAAU,SAAS,YAAY,aAAa,WAAW,WAAW,UAAU,aAAa,WAAW,YAAY,WAAW,YAAY,aAAa,SAAS,SAAS,WAAW,UAAU,WAAW,aAAa,SAAS,YAAY,YAAY,WAAW,aAAa,YAAY,WAAW,SAAS,YAAY,YAAY,aAAa,WAAW,aAAa,WAAW,UAAU,WAAW,UAAU,SAAS,WAAW,YAAY,WAAW,WAAW,aAAa,YAAY,YAAY,WAAW,YAAY,QAAQ,WAAW,aAAa,WAAW,SAAS,WAAW,WAAW,UAAU,aAAa,WAAW,YAAY,aAAa,YAAY,YAAY,UAAU,YAAY,YAAY,YAAY,YAAY,YAAY,SAAS,YAAY,UAAU,YAAY,WAAW,UAAU,YAAY,SAAS,WAAW,WAAW,UAAU,YAAY,QAAQ,YAAY,YAAY,YAAY,SAAS,SAAS,WAAW,aAAa,UAAU,WAAW,SAAS,WAAW,YAAY,WAAW,SAAS,aAAa,aAAa,WAAW,SAAS,WAAW,SAAS,UAAU,YAAY,WAAW,YAAY,YAAY,UAAU,WAAW,YAAY,aAAa,YAAY,YAAY,aAAa,YAAY,QAAQ,aAAa,YAAY,WAAW,WAAW,aAAa,YAAY,SAAS,WAAW,YAAY,YAAY,WAAW,YAAY,WAAW,aAAa,aAAa,WAAW,UAAU,UAAU,YAAY,YAAY,WAAW,YAAY,WAAW,WAAW,SAAS,UAAU,UAAU,YAAY,SAAS,UAAU,WAAW,YAAY,WAAW,WAAW,WAAW,YAAY,YAAY,aAAa,WAAW,YAAY,SAAS,YAAY,YAAY,WAAW,UAAU,aAAa,QAAQ,WAAW,WAAW,WAAW,YAAY,aAAa,aAAa,YAAY,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,UAAU,YAAY,UAAU,YAAY,UAAU,YAAY,WAAW,YAAY,YAAY,aAAa,QAAQ,aAAa,WAAW,WAAW,QAAQ,WAAW,WAAW,WAAW,WAAW,aAAa,SAAS,WAAW,WAAW,YAAY,SAAS,QAAQ,WAAW,YAAY,aAAa,SAAS,UAAU,WAAW,UAAU,YAAY,aAAa,WAAW,SAAS,YAAY,YAAY,QAAQ,aAAa,WAAW,SAAS,WAAW,UAAU,WAAW,UAAU,SAAS,UAAU,aAAa,YAAY,QAAQ,WAAW,UAAU,aAAa,SAAS,WAAW,WAAW,aAAa,SAAS,WAAW,QAAQ,SAAS,YAAY,WAAW,aAAa,SAAS,SAAS,WAAW,WAAW,WAAW,WAAW,WAAW,aAAa,UAAU,YAAY,WAAW,WAAW,YAAY,WAAW,YAAY,YAAY,WAAW,UAAU,YAAY,YAAY,SAAS,WAAW,YAAY,YAAY,WAAW,YAAY,aAAa,UAAU,WAAW,QAAQ,aAAa,aAAa,YAAY,UAAU,SAAS,UAAU,YAAY,WAAW,YAAY,YAAY,WAAW,YAAY,WAAW,WAAW,WAAW,YAAY,QAAQ,UAAU,WAAW,WAAW,YAAY,SAAS,WAAW,QAAQ,WAAW,UAAU,UAAU,YAAY,SAAS,SAAS,YAAY,aAAa,UAAU,aAAa,YAAY,aAAa,WAAW,YAAY,QAAQ,QAAQ,SAAS,WAAW,WAAW,QAAQ,UAAU,SAAS,UAAU,YAAY,WAAW,YAAY,YAAY,UAAU,WAAW,aAAa,aAAa,YAAY,WAAW,SAAS,UAAU,YAAY,YAAY,YAAY,WAAW,WAAW,WAAW,YAAY,QAAQ,aAAa,WAAW,UAAU,UAAU,WAAW,YAAY,SAAS,WAAW,UAAU,UAAU,YAAY,WAAW,UAAU,UAAU,WAAW,UAAU,UAAU,aAAa,SAAS,UAAU,WAAW,YAAY,YAAY,QAAQ,WAAW,aAAa,WAAW,YAAY,WAAW,YAAY,WAAW,WAAW,aAAa,YAAY,WAAW,YAAY,aAAa,YAAY,WAAW,WAAW,UAAU,QAAQ,WAAW,UAAU,aAAa,SAAS,UAAU,WAAW,YAAY,aAAa,WAAW,WAAW,SAAS,WAAW,UAAU,QAAQ,WAAW,WAAW,WAAW,UAAU,WAAW,QAAQ,QAAQ,YAAY,UAAU,SAAS,YAAY,WAAW,YAAY,SAAS,WAAW,WAAW,WAAW,UAAU,WAAW,QAAQ,WAAW,WAAW,WAAW,SAAS,WAAW,SAAS,SAAS,UAAU,YAAY,UAAU,QAAQ;AAEvqrB,YAAO,UAAU;AAAA;AAAA;;;ACJjB;AAAA;AAAA;AAEA,QAAI,WAAW,CAAC,wCAAU,4BAAQ,4BAAQ,kCAAS,kCAAS,sBAAO,kCAAS,sBAAO,wCAAU,sBAAO,sBAAO,4BAAQ,kCAAS,kCAAS,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,wCAAU,sBAAO,kCAAS,kCAAS,4BAAQ,4BAAQ,wCAAU,4BAAQ,4BAAQ,sBAAO,kCAAS,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,kCAAS,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,kCAAS,kCAAS,kCAAS,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,sBAAO,4BAAQ,kCAAS,wCAAU,4BAAQ,4BAAQ,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,sBAAO,4BAAQ,sBAAO,8CAAW,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,8CAAW,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,kCAAS,4BAAQ,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,wCAAU,sBAAO,4BAAQ,wCAAU,4BAAQ,sBAAO,kCAAS,kCAAS,sBAAO,4BAAQ,4BAAQ,kCAAS,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,kCAAS,wCAAU,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,wCAAU,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,kCAAS,4BAAQ,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,wCAAU,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,4BAAQ,wCAAU,wCAAU,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,kCAAS,4BAAQ,sBAAO,sBAAO,kCAAS,kCAAS,kCAAS,4BAAQ,wCAAU,kCAAS,4BAAQ,wCAAU,kCAAS,sBAAO,4BAAQ,4BAAQ,sBAAO,kCAAS,kCAAS,kCAAS,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,wCAAU,sBAAO,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,4BAAQ,wCAAU,kCAAS,8CAAW,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,kCAAS,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,wCAAU,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,kCAAS,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,oDAAY,4BAAQ,oDAAY,oDAAY,oDAAY,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,8CAAW,sBAAO,wCAAU,sBAAO,sBAAO,sBAAO,sBAAO,wCAAU,sBAAO,wCAAU,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,kCAAS,wCAAU,kCAAS,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,wCAAU,4BAAQ,sBAAO,wCAAU,kCAAS,wCAAU,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,kCAAS,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,kCAAS,kCAAS,sBAAO,kCAAS,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,wCAAU,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,8CAAW,4BAAQ,oDAAY,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,wCAAU,wCAAU,kCAAS,kCAAS,4BAAQ,kCAAS,4BAAQ,oDAAY,kCAAS,sBAAO,kCAAS,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,wCAAU,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,8CAAW,kCAAS,4BAAQ,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,wCAAU,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,wCAAU,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,kCAAS,8CAAW,4BAAQ,kCAAS,4BAAQ,sBAAO,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,wCAAU,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,wCAAU,4BAAQ,4BAAQ,4BAAQ,kCAAS,wCAAU,4BAAQ,wCAAU,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,kCAAS,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,wCAAU,kCAAS,4BAAQ,kCAAS,kCAAS,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,8CAAW,sBAAO,sBAAO,sBAAO,4BAAQ,wCAAU,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,8CAAW,kCAAS,kCAAS,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,wCAAU,kCAAS,kCAAS,kCAAS,sBAAO,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,4BAAQ,4BAAQ,kCAAS,sBAAO,4BAAQ,wCAAU,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,wCAAU,wCAAU,kCAAS,kCAAS,4BAAQ,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,wCAAU,kCAAS,wCAAU,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,wCAAU,4BAAQ,sBAAO,kCAAS,kCAAS,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,sBAAO,sBAAO,wCAAU,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,wCAAU,sBAAO,8CAAW,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,wCAAU,4BAAQ,sBAAO,sBAAO,wCAAU,sBAAO,oDAAY,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,4BAAQ,4BAAQ,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,kCAAS,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,kCAAS,kCAAS,kCAAS,wCAAU,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,wCAAU,sBAAO,kCAAS,4BAAQ,sBAAO,kCAAS,0DAAa,kCAAS,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,8CAAW,4BAAQ,4BAAQ,4BAAQ,4BAAQ,wCAAU,4BAAQ,4BAAQ,sBAAO,8CAAW,wCAAU,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,wCAAU,4BAAQ,wCAAU,kCAAS,4BAAQ,sBAAO,kCAAS,sBAAO,kCAAS,kCAAS,wCAAU,4BAAQ,wCAAU,kCAAS,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,oDAAY,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,oDAAY,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,kCAAS,wCAAU,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,kCAAS,kCAAS,8CAAW,4BAAQ,kCAAS,4BAAQ,wCAAU,sBAAO,sBAAO,kCAAS,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,wCAAU,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,kCAAS,sBAAO,kCAAS,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,kCAAS,sBAAO,4BAAQ,4BAAQ,4BAAQ,wCAAU,wCAAU,4BAAQ,sBAAO,sBAAO,kCAAS,4BAAQ,kCAAS,kCAAS,kCAAS,kCAAS,sBAAO,kCAAS,sBAAO,kCAAS,4BAAQ,sBAAO,kCAAS,4BAAQ,kCAAS,sBAAO,sBAAO,wCAAU,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,oDAAY,4BAAQ,wCAAU,wCAAU,4BAAQ,4BAAQ,sBAAO,kCAAS,kCAAS,kCAAS,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,kCAAS,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,4BAAQ,kCAAS,4BAAQ,kCAAS,kCAAS,kCAAS,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,4BAAQ,8CAAW,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,wCAAU,4BAAQ,4BAAQ,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,sBAAO,wCAAU,4BAAQ,kCAAS,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,kCAAS,kCAAS,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,8CAAW,sBAAO,4BAAQ,wCAAU,wCAAU,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,kCAAS,sBAAO,wCAAU,4BAAQ,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,kCAAS,4BAAQ,sBAAO,4BAAQ,kCAAS,8CAAW,kCAAS,4BAAQ,4BAAQ,wCAAU,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,kCAAS,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,sBAAO,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,wCAAU,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,wCAAU,kCAAS,sBAAO,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,kCAAS,wCAAU,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,wCAAU,sBAAO,oDAAY,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,8CAAW,sBAAO,kCAAS,kCAAS,kCAAS,4BAAQ,sBAAO,kCAAS,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,kCAAS,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,wCAAU,sBAAO,4BAAQ,4BAAQ,4BAAQ,wCAAU,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,wCAAU,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,wCAAU,kCAAS,4BAAQ,kCAAS,4BAAQ,wCAAU,4BAAQ,4BAAQ,kCAAS,sBAAO,kCAAS,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,kCAAS,oDAAY,sBAAO,4BAAQ,wCAAU,wCAAU,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,wCAAU,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,8CAAW,kCAAS,sBAAO,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,wCAAU,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,sBAAO,4BAAQ,kCAAS,kCAAS,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,wCAAU,4BAAQ,sBAAO,wCAAU,4BAAQ,sBAAO,sBAAO,4BAAQ,4BAAQ,kCAAS,8CAAW,8CAAW,sBAAO,sBAAO,4BAAQ,wCAAU,4BAAQ,4BAAQ,sBAAO,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,sBAAO,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,4BAAQ,sBAAO,kCAAS,sBAAO,kCAAS,sBAAO,oDAAY,4BAAQ,4BAAQ,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,kCAAS,4BAAQ,sBAAO,kCAAS,4BAAQ,sBAAO,sBAAO,4BAAQ,kCAAS,sBAAO,kCAAS,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,8CAAW,sBAAO,sBAAO,sBAAO,kCAAS,4BAAQ,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,wCAAU,sBAAO,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,sBAAO,wCAAU,sBAAO,4BAAQ,4BAAQ,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,wCAAU,4BAAQ,4BAAQ,4BAAQ,wCAAU,4BAAQ,kCAAS,sBAAO,kCAAS,4BAAQ,4BAAQ,4BAAQ,4BAAQ,kCAAS,kCAAS,4BAAQ,sBAAO,4BAAQ,kCAAS,4BAAQ,4BAAQ,sBAAO,kCAAS,4BAAQ,sBAAO,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,kCAAS,sBAAO,sBAAO,sBAAO,4BAAQ,4BAAQ,sBAAO,kCAAS,kCAAS,sBAAO;AAEt8f,YAAO,UAAU;AAAA;AAAA;;;ACJjB;AAAA;AAAA;AAEA,QAAI,SAAS,CAAC,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,oDAAY,kCAAS,wCAAU,8CAAW,wCAAU,wCAAU,kCAAS,oDAAY,wCAAU,wCAAU,kCAAS,oDAAY,8CAAW,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,0DAAa,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,0DAAa,kCAAS,oDAAY,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,sEAAe,8CAAW,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,0DAAa,kCAAS,kCAAS,wCAAU,wCAAU,8CAAW,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,8CAAW,oDAAY,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,0DAAa,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,oDAAY,8CAAW,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,0DAAa,kCAAS,wCAAU,oDAAY,wCAAU,wCAAU,oDAAY,kCAAS,0DAAa,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,sEAAe,8CAAW,wCAAU,oDAAY,8CAAW,wCAAU,8CAAW,wCAAU,8CAAW,8CAAW,wCAAU,kCAAS,oDAAY,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,wCAAU,kCAAS,wCAAU,0DAAa,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,oDAAY,8CAAW,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,oDAAY,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,0DAAa,wCAAU,kCAAS,oDAAY,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,8CAAW,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,0DAAa,oDAAY,wCAAU,wCAAU,kCAAS,8CAAW,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,sEAAe,oDAAY,kCAAS,8CAAW,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,0DAAa,oDAAY,oDAAY,wCAAU,8CAAW,wCAAU,kCAAS,kCAAS,8CAAW,kCAAS,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,kCAAS,8CAAW,0DAAa,kCAAS,kCAAS,oDAAY,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,8CAAW,0DAAa,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,8CAAW,oDAAY,wCAAU,kCAAS,8CAAW,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,oDAAY,8CAAW,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,8CAAW,wCAAU,oDAAY,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,8CAAW,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,8CAAW,0DAAa,oDAAY,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,8CAAW,kCAAS,oDAAY,kCAAS,0DAAa,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,oDAAY,0DAAa,wCAAU,wCAAU,kCAAS,wCAAU,oDAAY,wCAAU,wCAAU,oDAAY,wCAAU,wCAAU,kCAAS,oDAAY,oDAAY,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,oDAAY,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,gEAAc,oDAAY,wCAAU,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,8CAAW,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,8CAAW,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,8CAAW,wCAAU,kCAAS,wCAAU,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,oDAAY,wCAAU,wCAAU,0DAAa,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,0DAAa,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,0DAAa,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,8CAAW,wCAAU,0DAAa,8CAAW,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,oDAAY,wCAAU,8CAAW,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,wCAAU,wCAAU,0DAAa,oDAAY,wCAAU,0DAAa,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,wCAAU,kCAAS,wCAAU,gEAAc,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,oDAAY,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,oDAAY,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,0DAAa,wCAAU,wCAAU,wCAAU,0DAAa,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,oDAAY,8CAAW,wCAAU,0DAAa,wCAAU,wCAAU,kCAAS,0DAAa,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,gEAAc,kCAAS,kCAAS,0DAAa,kCAAS,wCAAU,oDAAY,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,8CAAW,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,oDAAY,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,8CAAW,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,0DAAa,kCAAS,oDAAY,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,oDAAY,oDAAY,oDAAY,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,oDAAY,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,oDAAY,kCAAS,wCAAU,8CAAW,kCAAS,wCAAU,kCAAS,kCAAS,8CAAW,oDAAY,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,oDAAY,wCAAU,wCAAU,kCAAS,0DAAa,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,oDAAY,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,0DAAa,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,wCAAU,wCAAU,wCAAU,oDAAY,kCAAS,kCAAS,wCAAU,0DAAa,8CAAW,kCAAS,8CAAW,0DAAa,wCAAU,8CAAW,wCAAU,8CAAW,kCAAS,kCAAS,wCAAU,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,gEAAc,oDAAY,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,oDAAY,wCAAU,wCAAU,wCAAU,8CAAW,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,oDAAY,oDAAY,oDAAY,8CAAW,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,oDAAY,wCAAU,8CAAW,8CAAW,wCAAU,8CAAW,wCAAU,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,oDAAY,oDAAY,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,oDAAY,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,oDAAY,kCAAS,wCAAU,wCAAU,kCAAS,8CAAW,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,kCAAS,kCAAS,sEAAe,8CAAW,wCAAU,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,wCAAU,0DAAa,wCAAU,wCAAU,8CAAW,wCAAU,oDAAY,wCAAU,0DAAa,wCAAU,oDAAY,0DAAa,kCAAS,oDAAY,oDAAY,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,0DAAa,kCAAS,oDAAY,kCAAS,8CAAW,oDAAY,kCAAS,kCAAS,0DAAa,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,8CAAW,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,0DAAa,oDAAY,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,wCAAU,wCAAU,8CAAW,wCAAU,oDAAY,kCAAS,oDAAY,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,oDAAY,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,8CAAW,8CAAW,oDAAY,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,oDAAY,wCAAU,wCAAU,wCAAU,oDAAY,wCAAU,kCAAS,kCAAS,wCAAU,oDAAY,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,0DAAa,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,oDAAY,kCAAS,wCAAU,8CAAW,kCAAS,wCAAU,wCAAU,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,oDAAY,wCAAU,wCAAU,kCAAS,0DAAa,kCAAS,8CAAW,kCAAS,kCAAS,oDAAY,kCAAS,wCAAU,kCAAS,kCAAS,oDAAY,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,8CAAW,kCAAS,wCAAU,oDAAY,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,8CAAW,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,oDAAY,oDAAY,kCAAS,oDAAY,kCAAS,wCAAU,wCAAU,wCAAU,oDAAY,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,oDAAY,kCAAS,8CAAW,wCAAU,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,0DAAa,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,8CAAW,0DAAa,wCAAU,wCAAU,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,8CAAW,kCAAS,8CAAW,wCAAU,sEAAe,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,gEAAc,wCAAU,wCAAU,kCAAS,oDAAY,wCAAU,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,8CAAW,kCAAS,kCAAS,kCAAS,oDAAY,8CAAW,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,oDAAY,wCAAU,wCAAU,wCAAU,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,oDAAY,kCAAS,8CAAW,wCAAU,wCAAU,kCAAS,wCAAU,8CAAW,kCAAS,wCAAU,4BAAQ,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,sEAAe,kCAAS,kCAAS,8CAAW,kCAAS,8CAAW,kCAAS,8CAAW,kCAAS,kCAAS,oDAAY,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,oDAAY,oDAAY,kCAAS,kCAAS,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,wCAAU,8CAAW,oDAAY,8CAAW,8CAAW,oDAAY,kCAAS,oDAAY,kCAAS,8CAAW,wCAAU,wCAAU,8CAAW,kCAAS,sEAAe,oDAAY,kCAAS,wCAAU,kCAAS,wCAAU,wCAAU,8CAAW,oDAAY,0DAAa,wCAAU,wCAAU,oDAAY,wCAAU,kCAAS,kCAAS,wCAAU,kCAAS,kCAAS,wCAAU,8CAAW,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,8CAAW,wCAAU,wCAAU,8CAAW,gEAAc,kCAAS,wCAAU,8CAAW,kCAAS,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,wCAAU,kCAAS,kCAAS,kCAAS,oDAAY,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,wCAAU,kCAAS,oDAAY,wCAAU,oDAAY,kCAAS,8CAAW,wCAAU,wCAAU,kCAAS,kCAAS,wCAAU,wCAAU,wCAAU,kCAAS,kCAAS,gEAAc,kCAAS,8CAAW,8CAAW,wCAAU,kCAAS,kCAAS,kCAAS,kCAAS,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",
  "names": []
}
